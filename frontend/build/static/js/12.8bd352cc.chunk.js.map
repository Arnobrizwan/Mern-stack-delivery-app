{"version":3,"sources":["components/Buttons.js","API/contactAPI.js","components/contact/ContactForm.js","hooks/useContactForm.js","API/signUpAPI.js","components/auth/SignUpForm.js","hooks/useSignUpForm.js","img/burger-icon.png","API/currentUserAPI.js","img/sing-up-background.jpg","components/auth/Auth.js","API/loginAPI.js","components/auth/LoginForm.js","hooks/useLoginForm.js","API/forgotPasswordAPI.js","components/auth/ForgotPasswordModal.js","hooks/useForgotPasswordModal.js","components/auth/Login.js"],"names":["Button","styled","a","props","theme","lightBoxShadow","darckYellow","small","black","ButtonPrimary","orange","contactAPI","info","e","POST","response","status","target","reset","console","log","StyledContact","article","FormSection","div","Form","form","InfoSection","TextInput","input","Textarea","textarea","ErrorMessage","ContactTitle","h2","ContactLink","Link","ContactForm","useForm","mode","data","preventDefault","userName","userEmail","userMessage","subject","register","handleSubmit","errors","formState","onSubmit","useContactForm","message","type","placeholder","name","ref","required","pattern","value","style","borderColor","meassage","maxLength","as","src","phoneIcone","alt","emailcone","setIsFormLoading","setServerError","history","json","redirect","id","localStorage","setItem","setTimeout","push","singUpAPI","FormCard","Logo","img","inputShadow","LoaderSpinner","ErrorServerMessage","FormLink","UserNameInput","defaultValue","data-testid","UserLastNameInput","userLastName","UserEmailInput","UserPasswordInput","autocomplete","minLength","UserNewPasswordInput","userNewPassword","SingupForm","useState","serverError","isFormLoading","useHistory","toLowerCase","lastName","email","password","userPassword","signUpAPI","useSignUpForm","burgerIcon","to","setCurrentUser","token","getItem","GET","getCurrentUser","StyledInitSession","main","lightYellow","background","Auth","children","setIsLoading","setIsLogin","setToken","setIsAdmin","setAllUsers","setIsModerator","roles","user","_id","currentUserAPI","usersAPI","loginAPI","SinginForm","setIsModalOpened","useStorage","setAllOrders","useLoginForm","onClick","setIsModalOpen","forgotPasswordAPI","Modal","section","isModalOpened","CloseModalButton","button","ForgotPasswordModal","useForgotPasswordModal","withError"],"mappings":"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","file":"static/js/12.8bd352cc.chunk.js","sourcesContent":["\r\nimport styled  from 'styled-components'\r\n\r\n   export  const Button= styled.a`\r\n     box-shadow: ${props => props.theme.lightBoxShadow};\r\npadding: 15px 40px;\r\ncolor:#fff;\r\nwidth:max-content;\r\n  background:${props => props.theme.darckYellow};\r\n  text-transform: uppercase;\r\n  text-align:center;\r\n  font-size: 16px;\r\n  font-family: \"Oswald\", sans-serif;\r\n  font-weight:600px;\r\n line-height:23.5px;\r\n  cursor:pointer;\r\n  letter-spacing:2px;\r\n  border-radius:4px;\r\n    text-decoration: none;\r\n\r\n    transform:'${(props)=>(props.small ? \"scale(0.7)\" : \"scale(1)\")}';\r\n  transition:all 0.5s ease;\r\n  &:hover{\r\n    background-color:${props => props.theme.black};\r\n  }\r\n  & > * {\r\n    cursor:pointer;\r\n  }\r\n    @media screen and (max-width: 550px){\r\n   transform:scale(0.8);\r\n`;\r\nexport const ButtonPrimary = styled(Button)`\r\n  background:${props => props.theme.orange};\r\n`;\r\n\r\n\r\n\r\n","import { POST } from \"../utils/http\";\r\n\r\nconst contactAPI = async ({ info, e }) => {\r\n  try {\r\n    const { response } = await POST(\"/api/contact\", info);\r\n\r\n    if (response.status === 200) {\r\n      e.target.reset();\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default contactAPI;\r\n","import styled  from 'styled-components'\r\nimport useContactForm from '../../hooks/useContactForm'\r\nimport SocilasMenu from '../SocialsMenu'\r\nimport {ButtonPrimary} from '../Buttons'\r\nimport phoneIcone from '../../img/phone-alt-solid.svg'\r\nimport emailcone from '../../img/envelope-regular.svg'\r\n\r\nimport {Link, Icone,ListItem,List} from  '../Footer'\r\n\r\n\r\n const StyledContact = styled.article`\r\nbox-sizing:border-box:\r\nmax-width:100%;\r\npadding:20px 0;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\n& > * {\r\npadding:10px  15px;\r\nheight:100%;\r\n}\r\n`;\r\nconst FormSection = styled.div`\r\nwidth:100%;\r\n  flex: 1 1 450px;\r\n\r\n  @media screen and (min-width: 550px){\r\n  padding:10px  32px ;\r\n\r\n  }\r\n\r\n`;\r\nconst Form = styled.form`\r\nwidth:100%;\r\nheight:100%;\r\ndisplay:flex;\r\nflex-flow:column;\r\n& > small {\r\n      margin: -10px auto 4px 0;\r\n}\r\n@media screen and (max-width: 550px){\r\n & >${ButtonPrimary}{\r\n        margin-left: auto;\r\n                margin-right: auto;\r\n  }\r\n}\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\ndisplay:flex;\r\nflex-flow:column;\r\njustify-content:space-evenly;\r\n  flex: 1 0 1;\r\n  min-height:460px;\r\n width: 40%;\r\n @media screen and (max-width:750px){\r\n    width: 100%;\r\n     padding:0  25px;\r\n       min-height:350px;\r\n }\r\n`;\r\nexport const TextInput= styled.input`\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n  }\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\nwidth:100%;\r\npadding: 12px 15px;\r\n`;\r\n\r\n;\r\nconst Textarea= styled.textarea`\r\n  &::resizer {\r\n  display: none;\r\n}\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n\r\n  }\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\npadding: 10px 15px;\r\n  min-height:250px;\r\n  max-height:250px;\r\n  margin-bottom:25px;\r\n  min-width:100%;\r\n  max-width:100%;\r\n\r\n`;\r\nexport const ErrorMessage = styled.small`\r\ncolor:#bf0000;\r\nmargin:-10px auto 4px 5%;\r\n    display: block;\r\n`;\r\nconst ContactTitle = styled.h2`\r\n\r\n @media screen and (min-width:750px){\r\n    margin-top: -40px;\r\n }\r\n`;\r\nconst ContactLink = styled(Link)`\r\ncolor:#000;\r\n`;\r\n\r\nexport default  function ContactForm() {\r\n\r\n    const {register,handleSubmit,errors,onSubmit}= useContactForm()\r\n\r\n  return(\r\n    <StyledContact>\r\n      <FormSection>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n           {errors.userName && <ErrorMessage>{errors.userName.message}</ErrorMessage>}\r\n          <  TextInput\r\n          type='text'\r\n          placeholder='Tu Nombre Completo...'\r\n          name=\"userName\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n\r\n              pattern:{\r\n                   value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü\\s\\w]+$/,\r\n                    message:'*Nombre no valido'\r\n                      }\r\n\r\n          })}\r\n                 style={{ borderColor: errors.userName && \"#bf0000\" }}\r\n          />\r\n                                {errors.userEmail && <ErrorMessage>{errors.userEmail.message}</ErrorMessage>}\r\n          <TextInput\r\n          type='email'\r\n          placeholder='Tu email...'\r\n          name=\"userEmail\"\r\n          ref={register({\r\n                                required: \"*El campo es requrido\",\r\n\r\n                      pattern:{\r\n                        value:/^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n                       meassage:'*Email no valido'\r\n                      }\r\n          })}\r\n           style={{ borderColor: errors.userEmail && \"#bf0000\" }}\r\n          />\r\n               {errors.subject && <ErrorMessage>{errors.subject.message}</ErrorMessage>}\r\n\r\n\r\n           <TextInput\r\n           type='text'\r\n          placeholder='Asunto...'\r\n          name=\"subject\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n\r\n          })}\r\n                 style={{ borderColor: errors.subject && \"#bf0000\" }}\r\n          />\r\n            {errors.userMessage && <ErrorMessage>{errors.userMessage.message}</ErrorMessage>}\r\n          <Textarea\r\n          placeholder='Tu mensaje...'\r\n          name=\"userMessage\"\r\n\r\n          ref={register({\r\n          required: '*El campo es requerido',\r\n           maxLength:{\r\n                        value:255,\r\n                         message:'*Tu mensaje no debe exceder los 255 carácteres'\r\n                      }\r\n          })}\r\n                 style={{ borderColor: errors.userMessage && \"#bf0000\" }}\r\n          />\r\n      <ButtonPrimary as=\"input\" type=\"submit\" value=\"Enviar mensaje\"/>\r\n        </Form>\r\n      </FormSection>\r\n      <InfoSection>\r\n\r\n        <ContactTitle>Contactenos</ContactTitle>\r\n         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan metus.\r\n           Ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan.\r\n         </p>\r\n          <List>\r\n<ListItem><Icone><img src={phoneIcone} alt=\"phone\"></img></Icone> <ContactLink>+66 396 847 2637</ContactLink></ListItem>\r\n<ListItem><Icone><img src={emailcone} alt=\"email\"></img></Icone> <ContactLink>Hello@Burger.Com</ContactLink></ListItem>\r\n  </List>\r\n  <SocilasMenu/>\r\n      </InfoSection>\r\n    </StyledContact>\r\n  );\r\n}","import { useForm } from \"react-hook-form\";\r\nimport contactAPI from \"../API/contactAPI.js\";\r\n\r\nexport default function useContactForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  async function onSubmit(data, e) {\r\n    e.preventDefault();\r\n\r\n    const info = {\r\n      userName: data.userName,\r\n      userEmail: data.userEmail,\r\n      userMessage: data.userMessage,\r\n      subject: data.subject,\r\n    };\r\n\r\n    await contactAPI({ info, e });\r\n  }\r\n\r\n  return { register, handleSubmit, errors, onSubmit };\r\n}\r\n","import { POST } from \"../utils/http\";\r\n\r\nasync function singUpAPI({\r\n  setIsFormLoading,\r\n  setServerError,\r\n\r\n  history,\r\n  info,\r\n}) {\r\n  try {\r\n    const { response, json } = await POST(\"/api/auth/signUp\", info);\r\n\r\n    setIsFormLoading(false);\r\n\r\n    if (response.status === 201 || 302) {\r\n      setServerError(\"\");\r\n\r\n      const { redirect, id } = json;\r\n\r\n      localStorage.setItem(\"toConfirmUser\", id);\r\n\r\n      setTimeout(() => {\r\n        return history.push(redirect);\r\n      }, 1000);\r\n    }\r\n\r\n    if (response.status === 400) {\r\n      setServerError(json.message);\r\n      return;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default singUpAPI;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\nimport useSignUpForm from \"../../hooks/useSignUpForm\";\r\nimport { ButtonPrimary } from \"../Buttons\";\r\nimport burgerIcon from \"../../img/burger-icon.png\";\r\nimport { TextInput, ErrorMessage } from \"../contact/ContactForm\";\r\nimport { LoaderSpinner } from \"../LoaderSpinner\";\r\n\r\nexport const FormCard = styled.article`\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);\r\n\r\n  margin: 30px auto;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  min-heght: 600px;\r\n  background: rgb(252, 175, 1);\r\n  background: linear-gradient(\r\n    218deg,\r\n    rgb(252 175 1 / 60%) 0%,\r\n    rgb(255 165 0 / 58%) 100%\r\n  );\r\n  box-box-shadow: 2px 2px 6px #000;\r\n\r\n  @media screen and (max-width: 400px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const Logo = styled.img`\r\n  width: 120px;\r\n  margin-bottom: 20px;\r\n  height: auto;\r\n`;\r\nexport const Form = styled.form`\r\n  width: 90%;\r\n  margin-left: -10px;\r\n  padding-bottom: 25px;\r\n  display: flex;\r\n  margin: 0 auto;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  & > input {\r\n    width: 90%;\r\n    margin-bottom: 15px;\r\n    border: none;\r\n    box-shadow: ${(props) => props.theme.inputShadow};\r\n  }\r\n\r\n  & > ${LoaderSpinner} {\r\n    margin-bottom: 10px;\r\n  }\r\n  & > input:focus,\r\n  & > textarea:focus {\r\n    outline: 2px solid ${(props) => props.theme.darckYellow};\r\n    outline-style: auto;\r\n  }\r\n  & > input[type=\"submit\"] {\r\n    box-shadow: none;\r\n    outline: none;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    width: 90%;\r\n    & > input {\r\n      width: 95%;\r\n    }\r\n  }\r\n`;\r\nexport const ErrorServerMessage = styled(ErrorMessage)`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  margin: 5px 0 15px;\r\n`;\r\nexport const FormLink = styled(Link)`\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  transition: all 0.5s esea;\r\n  color: ${(props) => props.theme.black};\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\nexport function UserNameInput({ register, errors, defaultValue }) {\r\n  return (\r\n    <Fragment>\r\n      {errors.userName && (\r\n        <ErrorMessage>{errors.userName.message}</ErrorMessage>\r\n      )}\r\n      <TextInput\r\n        placeholder=\"Tu nombre...\"\r\n        name=\"userName\"\r\n        type=\"text\"\r\n        defaultValue={defaultValue || \"\"}\r\n        data-testid=\"nameInput\"\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n          pattern: {\r\n            value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü]+$/,\r\n            message: \"*Nombre no valido\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors.userName && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserLastNameInput({ register, errors, defaultValue }) {\r\n  return (\r\n    <Fragment>\r\n      {errors.userLastName && (\r\n        <ErrorMessage>{errors.userLastName.message}</ErrorMessage>\r\n      )}\r\n      <TextInput\r\n        type=\"text\"\r\n        placeholder=\"Tu apellido ...\"\r\n        data-testid=\"lastNameInput\"\r\n        defaultValue={defaultValue || \"\"}\r\n        name=\"userLastName\"\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n          pattern: {\r\n            value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü]+$/,\r\n            message: \"*Apellido no valido\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors.userLastName && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserEmailInput({ register, errors }) {\r\n  return (\r\n    <Fragment>\r\n      {errors.userEmail && (\r\n        <ErrorMessage>{errors.userEmail.message}</ErrorMessage>\r\n      )}\r\n      <TextInput\r\n        type=\"email\"\r\n        placeholder=\"Tu email...\"\r\n        name=\"userEmail\"\r\n        data-testid=\"emailInput\"\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n\r\n          pattern: {\r\n            value:\r\n              /^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n            message: \"*Email no valido\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors.userEmail && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserPasswordInput({\r\n  register,\r\n  errors,\r\n  placeholder,\r\n  name = \"userPassword\",\r\n}) {\r\n  return (\r\n    <Fragment>\r\n      {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\r\n\r\n      <TextInput\r\n        placeholder={placeholder}\r\n        type=\"password\"\r\n        name={name}\r\n        data-testid=\"passwordInput\"\r\n        autocomplete={false}\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n          minLength: {\r\n            value: 5,\r\n            message: \"*El largo mínimo es de 5 carácteres\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors[name] && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserNewPasswordInput({ register, errors, placeholder }) {\r\n  return (\r\n    <Fragment>\r\n      {errors.userNewPassword && (\r\n        <ErrorMessage>{errors.userNewPassword.message}</ErrorMessage>\r\n      )}\r\n\r\n      <TextInput\r\n        placeholder={placeholder}\r\n        type=\"password\"\r\n        name=\"userNewPassword\"\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n          minLength: {\r\n            value: 5,\r\n            message: \"*El largo mínimo es de 5 carácteres\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors.userNewPassword && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport default function SingupForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    onSubmit,\r\n    isFormLoading,\r\n    serverError,\r\n  } = useSignUpForm();\r\n  return (\r\n    <FormCard>\r\n      <Logo src={burgerIcon} alt=\"LogoBrand\"></Logo>\r\n      <Form data-testid=\"singUpForm\" onSubmit={handleSubmit(onSubmit)}>\r\n        <UserNameInput errors={errors} register={register} />\r\n        <UserLastNameInput errors={errors} register={register} />\r\n        <UserEmailInput errors={errors} register={register} />\r\n        <UserPasswordInput\r\n          errors={errors}\r\n          register={register}\r\n          placeholder=\"Tu contraseña...\"\r\n        />\r\n\r\n        <ErrorServerMessage>{serverError}</ErrorServerMessage>\r\n\r\n        <FormLink to=\"/authentication/login\">\r\n          ¿Ya tienes una cuenta? <b>Login</b>{\" \"}\r\n        </FormLink>\r\n        <ButtonPrimary as=\"input\" type=\"submit\" value=\"Sing Up\" />\r\n        {isFormLoading && <LoaderSpinner data-testid=\"spinner\" small />}\r\n      </Form>\r\n    </FormCard>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport signUpAPI from \"../API/signUpAPI\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useSingupForm() {\r\n  const [serverError, setServerError] = useState(\"\");\r\n  const [isFormLoading, setIsFormLoading] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  async function onSubmit(data, e) {\r\n    e.preventDefault();\r\n\r\n    await setIsFormLoading(true);\r\n\r\n    const info = {\r\n      name: data.userName.toLowerCase(),\r\n      lastName: data.userLastName.toLowerCase(),\r\n      email: data.userEmail,\r\n      password: data.userPassword,\r\n    };\r\n\r\n    await signUpAPI({\r\n      setServerError,\r\n      info,\r\n      history,\r\n      setIsFormLoading,\r\n    });\r\n  }\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    onSubmit,\r\n    serverError,\r\n    isFormLoading,\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/burger-icon.4ba9750a.png\";","import { GET } from \"../utils/http\";\r\nasync function getCurrentUser({ setCurrentUser, token }) {\r\n  const id = localStorage.getItem(\"userId\");\r\n\r\n  try {\r\n    const { json } = await GET(`/api/users/me/${id}`, token);\r\n\r\n    setCurrentUser(json.data);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default getCurrentUser;\r\n","export default __webpack_public_path__ + \"static/media/sing-up-background.03cf7d60.jpg\";","import styled  from 'styled-components'\r\nimport background from '../../img/sing-up-background.jpg'\r\n\r\nconst StyledInitSession = styled.main`\r\n    min-height: 100vh;\r\n     background-color: 2px solid ${props => props.theme.lightYellow};\r\nbackground : url(${background}) no-repeat right top ;\r\ndisplay: flex;\r\njustify-content:center;\r\nalign-items: center;\r\nwidth:100vw;\r\npadding:5px;\r\npadding-top:60px;\r\ntext-aling:center;\r\n\r\n`;\r\n\r\n\r\n\r\nexport default function Auth(props) {\r\n\r\n  \r\n  return(\r\n  <StyledInitSession>\r\n{props.children}\r\n  </StyledInitSession>\r\n\r\n\r\n)\r\n}\r\n","import usersAPI from \"./usersAPI\";\r\nimport currentUserAPI from \"./currentUserAPI\";\r\nimport { POST } from \"../utils/http\";\r\nasync function loginAPI({\r\n  info,\r\n  setIsLoading,\r\n  setServerError,\r\n  setIsLogin,\r\n  setToken,\r\n  setIsAdmin,\r\n  history,\r\n  setCurrentUser,\r\n  setAllUsers,\r\n  setIsFormLoading,\r\n  setIsModerator,\r\n}) {\r\n  try {\r\n    setIsFormLoading(true);\r\n\r\n    const { response, json } = await POST(\"/api/auth/login\", info);\r\n\r\n    const { message } = json;\r\n    setIsFormLoading(false);\r\n\r\n    if (response.status === 200) {\r\n      setServerError(\"\");\r\n\r\n      setIsLoading(true);\r\n      const { token, roles, user } = json;\r\n\r\n      await setToken(token);\r\n\r\n      localStorage.setItem(\"userId\", user._id);\r\n\r\n      await currentUserAPI({ setCurrentUser, token });\r\n\r\n      setIsLogin();\r\n\r\n      if (roles[0].name === \"admin\") {\r\n        setIsAdmin(true);\r\n\r\n        await usersAPI({ setAllUsers, token });\r\n\r\n        setIsLoading(false);\r\n\r\n        return history.push(\"/dashboard/orders\");\r\n      }\r\n      if (roles[0].name === \"moderator\") {\r\n        setIsModerator(true);\r\n        setIsLoading(false);\r\n        return history.push(\"/dashboard/myProducts\");\r\n      }\r\n\r\n      setIsLoading(false);\r\n      return history.push(\"/menu\");\r\n    }\r\n\r\n    if (response.status === 302) {\r\n      const { redirect, id } = json;\r\n\r\n      localStorage.setItem(\"toConfirmUser\", id);\r\n\r\n      setTimeout(() => {\r\n        return history.push(redirect);\r\n      }, 1000);\r\n    }\r\n\r\n    setServerError(message);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport default loginAPI;\r\n","import useLoginForm from \"../../hooks/useLoginForm\";\r\nimport { LoaderSpinner } from \"./../LoaderSpinner\";\r\nimport { ButtonPrimary } from \"../Buttons\";\r\nimport burgerIcon from \"../../img/burger-icon.png\";\r\n\r\nimport {\r\n  FormCard,\r\n  Logo,\r\n  Form,\r\n  FormLink,\r\n  UserEmailInput,\r\n  UserPasswordInput,\r\n  ErrorServerMessage,\r\n} from \"./SignUpForm\";\r\n\r\nexport default function SinginForm({ setIsModalOpened }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    onSubmit,\r\n    serverError,\r\n    isFormLoading,\r\n  } = useLoginForm();\r\n\r\n  return (\r\n    <FormCard>\r\n      <Logo src={burgerIcon} alt=\"LogoBrand\"></Logo>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <UserEmailInput errors={errors} register={register} name=\"userEmail\" />\r\n        <UserPasswordInput\r\n          name=\"userPassword\"\r\n          placeholder=\"Tu contraseña...\"\r\n          errors={errors}\r\n          register={register}\r\n        />\r\n\r\n        <ErrorServerMessage>{serverError}</ErrorServerMessage>\r\n\r\n        <FormLink to=\"/authentication/signUp\">\r\n          ¿Todavía no tienes una cuenta? <b>Sing Up</b>{\" \"}\r\n        </FormLink>\r\n        <FormLink as=\"a\" onClick={() => setIsModalOpened(true)}>\r\n          Olvidaste tu contraseña?\r\n        </FormLink>\r\n        <ButtonPrimary as=\"input\" type=\"submit\" value=\"Login\" />\r\n        {isFormLoading && <LoaderSpinner small />}\r\n      </Form>\r\n    </FormCard>\r\n  );\r\n}\r\n","import {useForm} from 'react-hook-form'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useStorage} from '../context/useStorage'\r\nimport loginAPI from '../API/loginAPI'\r\nimport {useState} from 'react'\r\n\r\n\r\n\r\nexport default  function useLoginForm(){\r\n\r\nconst {setIsLogin,setIsAdmin,setToken, setCurrentUser,setAllUsers,setIsModerator,setIsLoading,setAllOrders} = useStorage()\r\n\r\n\r\n  const [isFormLoading, setIsFormLoading] = useState(false)\r\nconst [serverError, setServerError] = useState(\"\")\r\n\r\nconst history =useHistory();\r\n  const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\n  async function onSubmit(data,e) {\r\n\r\nconst info ={\r\nemail:data.userEmail,\r\npassword:data.userPassword\r\n}\r\n    e.preventDefault()\r\nawait loginAPI({\r\n      info,\r\nsetIsLoading,\r\nsetServerError,\r\nsetIsLogin,\r\nsetToken,\r\nsetIsAdmin,\r\nhistory,\r\nsetCurrentUser,\r\nsetAllUsers,\r\nsetAllOrders,\r\nsetIsFormLoading,\r\nsetIsModerator\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  return {register, handleSubmit, errors, onSubmit ,isFormLoading,serverError}\r\n\r\n     }","import { POST } from \"../utils/http\";\r\n\r\nasync function forgotPasswordAPI({\r\n  setIsFormLoading,\r\n  setServerError,\r\n  info,\r\n  setIsModalOpen,\r\n}) {\r\n  try {\r\n    setIsFormLoading(true);\r\n\r\n    const { response, json } = await POST(\"/api/auth/forgotPassword\", info);\r\n\r\n    setIsFormLoading(false);\r\n\r\n    if (response.status >= 400) {\r\n      setServerError(json.message);\r\n      return;\r\n    }\r\n\r\n    setIsModalOpen(false);\r\n    return;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default forgotPasswordAPI;\r\n","import styled from \"styled-components\";\r\nimport { LoaderSpinner } from \"../LoaderSpinner\";\r\nimport { ButtonPrimary } from \"../Buttons\";\r\nimport {\r\n  FormCard,\r\n  Form,\r\n  UserEmailInput,\r\n  ErrorServerMessage,\r\n} from \"./SignUpForm\";\r\nimport useForgotPasswordModal from \"../../hooks/useForgotPasswordModal\";\r\n\r\nconst Modal = styled.section`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 15px;\r\n  backdrop-filter: blur(2px);\r\n  background: #0000002b;\r\n  display: ${(props) => (props.isModalOpened === true ? \"flex\" : \"none\")};\r\n  z-index: 1000;\r\n  align-items: center;\r\n  transition: all 0.5s esase;\r\n  & > article {\r\n    margin-top: 60px;\r\n    background: ${(props) => props.theme.darckYellow};\r\n  }\r\n  & > article form p {\r\n    padding: 0 16px 15px;\r\n    color: white;\r\n    text-align: initial;\r\n    font-weight: 600;\r\n  }\r\n  & > article form h2 {\r\n    margin: 0 0 15px;\r\n    font-size: 40px;\r\n  }\r\n`;\r\nconst CloseModalButton = styled.button`\r\n    padding: 0 4px 1px 4px;\r\n    margin: 8px 8px 0 auto;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    border-radius: 5px;\r\n    outline: transparent;\r\n    transform: scale(1.2);\r\n    background: #e83c2e;\r\n    color: #ffffff;\r\n    border: 1px solid #ffffff;\r\n}\r\n`;\r\nexport default function ForgotPasswordModal({\r\n  setIsModalOpened,\r\n  isModalOpened,\r\n}) {\r\n  const {\r\n    isFormLoading,\r\n    serverError,\r\n    register,\r\n    handleSubmit,\r\n    onSubmit,\r\n    errors,\r\n  } = useForgotPasswordModal({ setIsModalOpened });\r\n\r\n  return (\r\n    <Modal isModalOpened={isModalOpened}>\r\n      <FormCard>\r\n        <CloseModalButton onClick={() => setIsModalOpened(false)}>\r\n          x\r\n        </CloseModalButton>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <h2>📬</h2>\r\n          <p>\r\n            Igresa tu email y se te será enviado un link para que puedas\r\n            restaurar tu contraseña.\r\n          </p>\r\n\r\n          <UserEmailInput errors={errors} register={register} />\r\n\r\n          <ErrorServerMessage>{serverError}</ErrorServerMessage>\r\n\r\n          <ButtonPrimary as=\"input\" type=\"submit\" value=\"Enviar\" />\r\n          {isFormLoading && <LoaderSpinner small />}\r\n        </Form>\r\n      </FormCard>\r\n    </Modal>\r\n  );\r\n}\r\n","import {useState} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport forgotPasswordAPI from './../API/forgotPasswordAPI'\r\n\r\n\r\nexport default function useForgotPasswordModal({setIsModalOpened}){\r\nconst [isFormLoading,setIsFormLoading]= useState(false)\r\nconst [serverError, setServerError] = useState(\"\")\r\n\r\n  const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\n async function onSubmit(data,e) {\r\n    \r\nconst info ={\r\nemail:e.target.userEmail.value,\r\n}\r\n\r\nawait forgotPasswordAPI({\r\nsetServerError,\r\ninfo,\r\nsetIsFormLoading,\r\n\r\n})\r\nsetIsModalOpened(false)\r\n\r\n  }\r\n\r\n  return {isFormLoading,serverError,register, handleSubmit,onSubmit, errors}\r\n\r\n\r\n}","import Auth from './Auth'\r\nimport { withError } from './../withError'\r\nimport LoginForm from './LoginForm'\r\nimport ForgotPasswordModal from './ForgotPasswordModal'\r\nimport {useState} from 'react' \r\n\r\nfunction Login(){\r\n\r\nconst [isModalOpened,setIsModalOpened]=useState(false)\r\n\r\n  return(\r\n<Auth>\r\n  <LoginForm setIsModalOpened={setIsModalOpened} />\r\n  <ForgotPasswordModal   setIsModalOpened={setIsModalOpened}  isModalOpened={isModalOpened}\r\n  />\r\n</Auth>\r\n  )\r\n}\r\nexport default withError(Login)"],"sourceRoot":""}