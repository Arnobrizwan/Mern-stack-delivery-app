{"version":3,"sources":["components/home/NewestProducts.js","hooks/useNewestProducts.js"],"names":["StyledNewestProducts","styled","section","ProductsWrapper","ProductsSection","NewestProducts","useState","isLoading","setIsloading","latestProducts","setLatestProducts","useEffect","controller","AbortController","signal","fetchLatestProducts","a","fetch","res","json","data","name","console","log","i","abort","useNewestProducts","ProductsSectionSkeletom","map","product","item","AddToCartButton","thisProductInfo","_id"],"mappings":"uOAMMA,EAAsBC,IAAOC,QAAT,iFAKpBC,EAAgBF,YAAOG,kBAAPH,CAAD,qFAyCNI,UAnCd,WAA0B,IAAD,ECdX,WAA6B,IAAD,EACRC,oBAAS,GADD,mBAClCC,EADkC,KACxBC,EADwB,OAEAF,mBAAS,IAFT,mBAEnCG,EAFmC,KAEpBC,EAFoB,KAsCzC,OAlCAC,qBAAU,WACZ,IAAIC,EAAa,IAAIC,gBACdC,EAASF,EAAWE,OACjBC,EAAmB,uCAAG,gCAAAC,EAAA,6DAC1BR,GAAa,GADa,kBAGfS,MAAM,0DAA0D,CAACH,WAHlD,cAG3BI,EAH2B,gBAIfA,EAAIC,OAJW,OAI5BA,EAJ4B,OAMhCT,EAAkB,YAAIS,EAAKC,OAC3BZ,GAAa,GAPmB,wBAS/B,GAT+B,0BASf,eAAb,KAAIa,KACLC,QAAQC,IAAI,qCAIX,IADDD,QAAQC,IAAR,MACSC,EAAI,EAAIA,EAAI,EAAIA,IAClBT,IAfsB,0DAAH,qDAyB1B,OAFAA,IAEO,WACLH,EAAWa,WAEZ,IAGK,CAAClB,YAAUE,kBDrBeiB,GAA5BnB,EAHmB,EAGnBA,UAAUE,EAHS,EAGTA,eAEf,OAIC,eAACT,EAAD,WACD,cAAC,eAAD,mCAGDO,EAAa,cAACoB,EAAA,EAAD,IAEZ,cAACxB,EAAD,UACGM,EAAemB,KAAK,SAAAC,GAExB,OAAO,cAAC,IAAD,CAAwBC,KAAMD,EAA9B,SACU,cAACE,EAAA,EAAD,CAAiBC,gBAAiBH,KADjCA,EAAQI","file":"static/js/24.dcf2076c.chunk.js","sourcesContent":["import styled  from 'styled-components'\r\nimport useNewestProducts from '../../hooks/useNewestProducts'\r\nimport Item  from '../menu/MenuItem'\r\nimport {SectionTitle,ProductsSection} from '../menu/Menu'\r\nimport AddToCartButton from '../AddToCartButton'\r\nimport ProductsSectionSkeletom from '../ProductsSectionSkeletom'\r\nconst StyledNewestProducts= styled.section`\r\nwidth:100vw;\r\ntext-aling:center;\r\nmin-height:400px;\r\n`\r\nconst ProductsWrapper=styled(ProductsSection) `\r\nheight:100%;\r\nalign-items:center;\r\nmargin-bottom: 30px;\r\n`;\r\n\r\n function NewestProducts(){\r\n\r\n\r\nconst {isLoading,latestProducts} = useNewestProducts()\r\n\r\n  return(\r\n\r\n\r\n   \r\n   <StyledNewestProducts>\r\n  <SectionTitle>Ãšltimas Novedades</SectionTitle>\r\n\r\n{    \r\n(isLoading )? <ProductsSectionSkeletom/>\r\n  :\r\n  <ProductsWrapper>\r\n    {latestProducts.map( product => {\r\n \r\n return <Item key={product._id} item={product}>\r\n                  <AddToCartButton thisProductInfo={product}/>\r\n   \r\n </Item>\r\n    }\r\n    \r\n      )}\r\n \r\n  </ProductsWrapper>\r\n}\r\n</StyledNewestProducts>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default NewestProducts","import {   useEffect,useState} from 'react'\r\n\r\n\r\nexport default function useNewestProducts(){\r\n  const [isLoading,setIsloading] = useState(false);\r\n const [latestProducts,setLatestProducts] =useState([])\r\n\r\n  useEffect(()=>{\r\nlet controller = new AbortController()\r\n const signal = controller.signal\r\n    const fetchLatestProducts = async () =>{\r\n      setIsloading(true)\r\n      try{\r\n let res = await fetch('api/products?active=true&sort=-createdAt&page=1&limit=6',{signal,})\r\nlet json = await res.json()\r\n\r\nsetLatestProducts([...json.data])\r\nsetIsloading(false)\r\n      }catch(err){\r\n if(err.name === 'AbortError'){\r\n   console.log('Fetch Canseled: caught abort')\r\n }else{\r\n\r\n   console.log(err)\r\n    for(let i = 0 ; i < 6 ; i++){\r\n          fetchLatestProducts()\r\n\r\n        }\r\n       \r\n\r\n      }\r\n       }\r\n    }\r\n   fetchLatestProducts()\r\n\r\n   return () =>{\r\n     controller.abort()\r\n   }   \r\n  },[])\r\n\r\n\r\n  return {isLoading,latestProducts}\r\n}"],"sourceRoot":""}