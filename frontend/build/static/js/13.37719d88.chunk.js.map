{"version":3,"sources":["components/OrdersTableSkeleton.js","img/refresh.svg","API/getCategoriesAPI.js","API/deleteOrderAPI.js","components/account/UserOrdersPage.js","hooks/useUserOrdersPage.js","components/FilterOrderStateOptions.js","components/SortOrdersOptions.js","components/dashboard/DashboardOrders.js","hooks/useDashboardOrders.js","API/updateCategoryNameAPI.js","API/deleteCategoryAPI.js","API/createCategoryAPI.js","hooks/useDashboardCategories.js","components/dashboard/DashboardCategories.js"],"names":["Table","styled","div","TableHeader","TableCells","OrdersTableSkeleton","getCategoryAPI","setAllCategories","a","GET","json","data","console","log","token","id","DELETE","deleteOrderAPI","Page","main","props","theme","lightYellow","isLoading","LoaderSpinner","TableHead","thead","black","darckYellow","TableWrapper","OrdersTable","table","lihgtBoxShadow","CancelOrderButton","button","disabled","NotFounMessage","ButtonPrimary","NotFounIcone","h2","RefreshButton","RefreshIcone","img","UserOrdersPage","closeNotification","history","useHistory","useStorage","setIsLoading","currentUser","deleteOrder","e","stopPropagation","target","setIsLoadingPage","handleRefresh","query","URLSearchParams","useState","page","setPage","maxPage","setMaxPage","orders","setOrders","isFirstRender","setIsFirstRender","refreshCount","setRefreshCount","append","useEffect","controller","AbortController","signal","headers","Headers","setting","method","fetch","_id","res","total","parseInt","Math","ceil","document","querySelector","scrollTo","name","ordersAPI","abort","Date","now","seeDetails","orderID","push","useUserOrdersPage","light","onClick","src","refreshIcone","title","length","small","as","Link","to","map","order","states","date","toLocaleString","split","client","address","reverse","find","state","confirmed","PaginationButtons","FilterOrdersStateOptions","setStatePreferece","defaultValue","onChange","preventDefault","value","handelChange","SortOrdersOptions","setSortPreferece","section","NotFaundMessage","FiltersBoard","DashboardOrders","location","useLocation","search","oldQuery","setOrderID","setState","sorting","setSorting","toString","useDashboardOrders","DashboardNav","placeholder","setSearch","data-testid","categorySelectId","info","setIsRenameFormLoading","setIsSuccessfullySend","PUT","response","status","getCategoriesAPI","setTimeout","deleteCategoryAPI","alert","setIsCreateFormLoading","POST","newCategory","createCategoryAPI","useCategoriesForms","categories","editingCategory","setEditingCategory","isRenameFormLoading","isCreateFormLoading","setCategorySelectId","categoryId","category","handleDelete","window","confirm","handleRenameSubmit","categoryNewName","trim","updateCategoryNameAPI","handleCreateSubmit","CategoriesPage","Input","TextInput","inputBoxShadow","Wrapper","FormCard","article","lightBoxShadow","DeleteButton","orange","withError","useDashboardCategories","onSubmit","cat","type"],"mappings":"gLAEMA,EAAQC,IAAOC,IAAV,4KAQLC,EAAcF,IAAOC,IAAV,0JAOXE,EAAaH,IAAOC,IAAV,8KAaD,SAASG,IACtB,OACE,eAACL,EAAD,WACE,cAACG,EAAD,IACA,cAACC,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,S,iCCtCS,QAA0B,qC,sGCE1B,SAAeE,EAA9B,kC,4CAAe,WAA8BC,GAA9B,iBAAAC,EAAA,+EAEYC,YAAI,mBAFhB,gBAEHC,EAFG,EAEHA,KACRH,EAAiBG,EAAKC,MAHX,gDAKXC,QAAQC,IAAR,MALW,0D,gdCDf,+BAAAL,EAAA,6DAAgCM,EAAhC,EAAgCA,MAAOC,EAAvC,EAAuCA,GAAvC,kBAEUC,YAAO,eAAD,OAAgBD,GAAMD,GAFtC,sDAIIF,QAAQC,IAAR,MAJJ,yD,sBAQeI,M,8HCETC,EAAOjB,IAAOkB,KAAV,ycAMM,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAExB,SAACF,GAAD,OAAYA,EAAMG,UAAY,QAAU,SAU/CC,KAQKC,EAAYxB,IAAOyB,MAAV,6KACA,SAACN,GAAD,OAAWA,EAAMC,MAAMM,SAClC,SAACP,GAAD,OAAWA,EAAMC,MAAMO,eAOrBC,EAAe5B,IAAOC,IAAV,gGAKZ4B,EAAc7B,IAAO8B,MAAV,waAKF,SAACX,GAAD,OAAWA,EAAMC,MAAMM,SAC7B,SAACP,GAAD,OAAWA,EAAMC,MAAMW,kBAiBjCC,EAAoBhC,IAAOiC,OAAV,4QASV,SAACd,GAAD,OAAYA,EAAMe,SAAW,MAAQ,OAEhC,SAACf,GAAD,OAAYA,EAAMe,SAAW,QAAU,aAGnDC,EAAiBnC,IAAOC,IAAV,0MAQZmC,KAIFC,EAAerC,IAAOsC,GAAV,gDAGLC,EAAgBvC,IAAOC,IAAV,4VAMV,SAACkB,GAAD,OAAWA,EAAMC,MAAMW,kBACvB,SAACZ,GAAD,OAAWA,EAAMC,MAAMM,SAY1Bc,EAAexC,IAAOyC,IAAV,gEAKV,SAASC,EAAT,GAAgD,IAAD,EC1H/C,YAAmD,IAAtBC,EAAqB,EAArBA,kBACpCC,EAAUC,cAD+C,EAElBC,cAArCjC,EAFuD,EAEvDA,MAAOkC,EAFgD,EAEhDA,aAAcC,EAFkC,EAElCA,YAQvBC,EAAW,uCAAG,WAAOC,EAAGpC,GAAV,SAAAP,EAAA,yDAClB2C,EAAEC,kBAEGD,EAAEE,OAAOlB,SAHI,uBAIhBmB,GAAiB,GAJD,SAKVrC,EAAe,CAAEH,QAAOC,OALd,OAMhBwC,IANgB,2CAAH,wDAUbC,EAAQ,IAAIC,gBApB+C,EAuBzBC,oBAAS,GAvBgB,mBAuBxDnC,EAvBwD,KAuB7C+B,EAvB6C,OAwBvCI,mBAAS,GAxB8B,mBAwBxDC,EAxBwD,KAwBlDC,EAxBkD,OAyBjCF,mBAAS,GAzBwB,mBAyBxDG,EAzBwD,KAyB/CC,EAzB+C,OA0BnCJ,mBAAS,IA1B0B,mBA0BxDK,EA1BwD,KA0BhDC,EA1BgD,OA2BrBN,oBAAS,GA3BY,mBA2BxDO,EA3BwD,KA2BzCC,EA3ByC,OA4BzBR,mBAAS,GA5BgB,mBA4B1DS,EA5B0D,KA4B5CC,EA5B4C,KAgC/DZ,EAAMa,OAAO,OAAQV,GACrBH,EAAMa,OAAO,QAZG,GAahBb,EAAMa,OAAO,OAAQ,cAIrBC,qBAAU,WACR1B,IACA,IAAM2B,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OA0C1B,OAxCe,uCAAG,oCAAAjE,EAAA,6DAChB8C,GAAiB,GADD,UAIRoB,EAAU,IAAIC,SACZN,OAAO,SAAU,oBACzBK,EAAQL,OAAO,gBAAf,iBAA0CvD,IAEpC8D,EAAU,CACdC,OAAQ,MACRH,QAASA,EACTD,UAXY,SAcEK,MAAM,oBAAD,OACC7B,EAAY8B,IADb,YACoBvB,GACvCoB,GAhBY,cAcVI,EAdU,iBAkBGA,EAAItE,OAlBP,QAkBVA,EAlBU,OAoBdsD,EAAUtD,EAAKC,MAEXsE,EAAQC,SAASxE,EAAKuE,OAE1BnB,EAAWqB,KAAKC,KAAKH,EA9CX,IAgDVI,SAASC,cAAc,QAAQC,SAAS,EAAG,IAC3CrB,GAAiB,GACjBZ,GAAiB,GA5BH,kDA8BG,eAAb,KAAIkC,KACN5E,QAAQC,IAAI,gCAEZD,QAAQC,IAAR,MAjCY,0DAAH,oDAsCf4E,GAEO,WACLlB,EAAWmB,WAEZ,CAAC/B,EAAMQ,IAEV,IAAMZ,EAAgB,WACpBa,EAAgBuB,KAAKC,OACrBhC,EAAQ,IAGV,MAAO,CACLiC,WAxFiB,SAACC,GAClB9C,GAAa,GACbH,EAAQkD,KAAR,8BAAoCD,KAuFpCvC,gBACAK,UACAD,OACApC,YACAsC,UACAE,SACAE,gBACAf,eD+BE8C,CAAkB,CAAEpD,kBAXoC,EAArBA,oBAErCiD,EAF0D,EAE1DA,WACAtC,EAH0D,EAG1DA,cACAK,EAJ0D,EAI1DA,QACAD,EAL0D,EAK1DA,KACApC,EAN0D,EAM1DA,UACAsC,EAP0D,EAO1DA,QACAE,EAR0D,EAQ1DA,OACAE,EAT0D,EAS1DA,cACAf,EAV0D,EAU1DA,YAGF,OACE,eAAChC,EAAD,CAAMK,UAAWA,EAAjB,UACGA,EAAY,cAACC,EAAA,EAAD,IAAoB,KAEjC,cAAC,eAAD,CAAcyE,OAAK,EAAnB,yBAEA,cAACzD,EAAD,CAAe0D,QAAS,kBAAM3C,KAA9B,SACE,cAACd,EAAD,CACEyD,QAAS,kBAAM3C,KACf4C,IAAKC,IACLC,MAAM,0BAIT9E,GAAa0C,GAAiB,cAAC5D,EAAA,EAAD,KAE7BkB,IAAc0C,GAAoC,KAAb,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQuC,SACvC,eAAClE,EAAD,WACE,cAACE,EAAD,yDACA,4EAEA,cAAC,IAAD,CAAeiE,OAAK,EAACC,GAAIC,IAAMC,GAAG,QAAlC,4BAMgB,KAAb,OAAN3C,QAAM,IAANA,OAAA,EAAAA,EAAQuC,SACP,cAACzE,EAAD,UACE,eAACC,EAAD,WACE,cAACL,EAAD,UACE,+BACE,iDACA,uCACA,8CACA,uCACA,wCACA,+CAGJ,uCACGsC,QADH,IACGA,OADH,EACGA,EAAQ4C,KAAI,SAACC,GAAD,eACX,qBAAqBV,QAAS,SAAC/C,GAAD,OAAO0C,EAAWe,EAAM7B,MAAtD,UACE,oCAAK6B,QAAL,IAAKA,OAAL,EAAKA,EAAOd,UACZ,+BACE,yCAEI,IAAIH,KAAJ,OAASiB,QAAT,IAASA,OAAT,EAASA,EAAOC,OAAO,GAAGC,MACvBC,wBAHP,aAEI,EAEIC,MAAM,KAAK,KAGnB,uBACA,yCAEI,IAAIrB,KAAJ,OAASiB,QAAT,IAASA,OAAT,EAASA,EAAOC,OAAO,GAAGC,MACvBC,wBAHP,aAEI,EAEIC,MAAM,KAAK,QAIrB,6BAAKJ,EAAMK,OAAO,GAAGC,UACrB,0CAAMN,QAAN,IAAMA,OAAN,EAAMA,EAAO3B,SACb,+BACG,IACD,4BAEI,mBAAI2B,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,QACRM,UACAC,MAAK,SAACC,GAAD,OAA+B,IAApBA,EAAMC,aAAoB9B,UAKnD,6BACE,cAACvD,EAAD,CACEE,UACiC,KAA1B,OAALyE,QAAK,IAALA,OAAA,EAAAA,EAAOC,OAAO,GAAGS,WAEnBpB,QAAS,SAAC/C,GAAD,OAAOD,EAAYC,EAAGyD,EAAM7B,MAJvC,iCAjCJ,OAAS6B,QAAT,IAASA,OAAT,EAASA,EAAO7B,eAiD1B,cAACwC,EAAA,EAAD,CAAmB3D,QAASA,EAASD,KAAMA,EAAME,QAASA,S,4XEpOjD,SAAS2D,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,kBAAkB7D,EAAsB,EAAtBA,QAAQ8D,EAAc,EAAdA,aAQ5E,OACA,eAAC,IAAD,CAAYA,aAAcA,EAAelC,KAAK,sBAAsBmC,SAAU,SAACxE,GAAD,OAPvD,SAACA,GACvBA,EAAEyE,iBACEhE,EAAQ,GACZ6D,EAAkBtE,EAAEE,OAAOwE,OAIwDC,CAAa3E,IAAjG,UACA,cAAC,IAAD,CAAQ0E,MAAM,MAAd,mBACA,cAAC,IAAD,CAAQA,MAAM,SAAd,wBACA,cAAC,IAAD,CAAQA,MAAM,WAAd,2BCZe,SAASE,EAAT,GAA4D,IAAhCC,EAA+B,EAA/BA,iBAAiBN,EAAc,EAAdA,aAG5D,OACA,eAAC,IAAD,CAAaA,aAAcA,EAAclC,KAAK,gBAAgBmC,SAAU,SAACxE,GAAD,OAAO6E,EAAiB7E,EAAEE,OAAOwE,QAAzG,UACA,cAAC,IAAD,CAAQA,MAAM,aAAd,8BACA,cAAC,IAAD,CAAQA,MAAM,YAAd,6BACA,cAAC,IAAD,CAAQA,MAAM,QAAd,yBACA,cAAC,IAAD,CAAQA,MAAM,SAAd,4B,4BCQa3G,EAAOjB,IAAOgI,QAAV,8hBAQF,SAAC7G,GAAD,OAAYA,EAAMG,UAAY,QAAU,SAU/CC,IAOA0G,IAGAC,gBAIK1G,EAAYxB,IAAOyB,MAAV,qLASTI,EAAc7B,IAAO8B,MAAV,2ZAwBT,SAASqG,EAAT,GAAiD,IAAD,EChFhD,YAAoD,IAAD,EA0B5D5E,EA1BuCZ,EAAqB,EAArBA,kBACrCC,EAAUC,cACVuF,EAAWC,cAF+C,EAIhCvF,cAAxBjC,EAJwD,EAIxDA,MAAOkC,EAJiD,EAIjDA,aAJiD,EAahCU,mBAC9B,IAAID,gBAAgB4E,EAASE,SAdiC,mBAazDC,EAbyD,aAgBlC9E,mBAAS,KAhByB,mBAgBzDoC,EAhByD,KAgBhD2C,EAhBgD,OAiB1B/E,oBAAS,GAjBiB,mBAiBzDnC,EAjByD,KAiB9C+B,EAjB8C,OAkBxCI,mBAAS,GAlB+B,mBAkBzDC,EAlByD,KAkBnDC,EAlBmD,OAmBlCF,mBAAS,GAnByB,mBAmBzDG,EAnByD,KAmBhDC,EAnBgD,OAoBpCJ,mBAAS,IApB2B,mBAoBzDK,EApByD,KAoBjDC,EApBiD,OAqBtCN,mBAAS,OArB6B,mBAqBzD2D,EArByD,KAqBlDqB,EArBkD,OAsBlChF,mBAAS,cAtByB,mBAsBzDiF,EAtByD,KAsBhDC,EAtBgD,OAuBtBlF,oBAAS,GAvBa,mBAuBzDO,EAvByD,KAuB1CC,EAvB0C,OAwB1BR,mBAAS,GAxBiB,mBAwB3DS,EAxB2D,KAwB7CC,GAxB6C,KAyGhE,OA7EIH,EACFT,EAAQ,IAAIC,gBAAgB+E,EAASK,cAErCrF,EAAQ,IAAIC,iBACNY,OAAO,OAAQsE,GACrBnF,EAAMa,OAAO,OAAQV,GACrBH,EAAMa,OAAO,QAvBC,IA0BhBC,qBAAU,WACQ,KAAZwB,IACFtC,EAAMa,OAAO,UAAWyB,GACxB4C,EAAS,QAEG,QAAVrB,GACF7D,EAAMa,OAAO,QAASgD,GAGxBzD,EAAQ,KACP,CAACkC,EAASuB,EAAOsB,IAEpBrE,qBAAU,WACR1B,IACA,IAAM2B,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAyC1B,OAvCe,uCAAG,oCAAAjE,EAAA,6DAChB8C,GAAiB,GADD,UAIRoB,EAAU,IAAIC,SACZN,OAAO,SAAU,oBACzBK,EAAQL,OAAO,gBAAf,iBAA0CvD,IAEpC8D,EAAU,CACdC,OAAQ,MACRH,QAASA,EACTD,UAXY,SAcEK,MAAM,eAAD,OAAgBtB,GAASoB,GAdhC,cAcVI,EAdU,iBAeGA,EAAItE,OAfP,QAeVA,EAfU,OAiBdsD,EAAUtD,EAAKC,MAEXsE,EAAQC,SAASxE,EAAKuE,OAE1BnB,EAAWqB,KAAKC,KAAKH,EAhEX,IAkEVpC,EAAQkD,KAAR,4BAAkCvC,IAElC6B,SAASC,cAAc,QAAQC,SAAS,EAAG,IAC3CrB,GAAiB,GACjBZ,GAAiB,GA3BH,kDA6BG,eAAb,KAAIkC,KACN5E,QAAQC,IAAI,gCAEZD,QAAQC,IAAR,MAhCY,0DAAH,oDAqCf4E,GAEO,WACLlB,EAAWmB,WAEZ,CAACI,EAASuB,EAAO1D,EAAMgF,EAASxE,IAS5B,EAAP,CACE0B,WApGiB,SAACC,GAClB9C,GAAa,GACbH,EAAQkD,KAAR,4BAAkCD,KAmGlCvC,cAToB,WACpBa,GAAgBuB,KAAKC,OACrBhC,EAAQ,GACRgF,EAAW,cACXF,EAAS,QAMTD,aACAG,aACAF,WACA9E,UACAD,OACApC,YACAsC,UACAE,SACA4E,UACA1E,gBACA6B,WAbF,wBAcE6C,GAdF,sBAeEtB,GAfF,EDTIyB,CAAmB,CAAElG,kBAhBoC,EAArBA,oBAEtCiD,EAF2D,EAE3DA,WACAtC,EAH2D,EAG3DA,cACAkF,EAJ2D,EAI3DA,WACAG,EAL2D,EAK3DA,WACAhF,EAN2D,EAM3DA,QACA8E,EAP2D,EAO3DA,SACA/E,EAR2D,EAQ3DA,KACApC,EAT2D,EAS3DA,UACAsC,EAV2D,EAU3DA,QACAE,EAX2D,EAW3DA,OACA4E,EAZ2D,EAY3DA,QACA1E,EAb2D,EAa3DA,cACA6B,EAd2D,EAc3DA,QACAuB,EAf2D,EAe3DA,MAGF,OACE,eAACnG,EAAD,CAAMK,UAAWA,EAAjB,UACE,cAACwH,EAAA,EAAD,IACA,cAAC,eAAD,sBAEA,cAAC,IAAD,CACErB,aAAc5B,EACdkD,YAAY,wBACZC,UAAWR,IAEb,eAAC,eAAD,WACE,cAAC,EAAD,CACEf,aAAcL,EACdzD,QAASA,EACT6D,kBAAmBiB,IAErB,cAACX,EAAD,CACEL,aAAciB,EACdX,iBAAkBY,OAItB,cAAC,gBAAD,CACEM,cAAY,iBACZhD,QAAS,kBAAM3C,KAFjB,SAIE,cAAC,eAAD,CAAc4C,IAAKC,IAAcC,MAAM,0BAExC9E,EAAY,cAACC,EAAA,EAAD,IAAoB,KAEhCD,GAAa0C,GAAiB,cAAC5D,EAAA,EAAD,KAE7BkB,IAAc0C,GAAoC,KAAb,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQuC,SACvC,cAAC,IAAD,qEAKkB,KAAb,OAANvC,QAAM,IAANA,OAAA,EAAAA,EAAQuC,SACP,cAAC,eAAD,UACE,eAACxE,EAAD,WACE,cAACL,EAAD,UACE,+BACE,iDACA,uCACA,8CACA,uCACA,6CAGJ,uCACGsC,QADH,IACGA,OADH,EACGA,EAAQ4C,KAAI,SAACC,GAAD,OACX,qBAEEV,QAAS,SAAC/C,GAAD,OAAO0C,EAAU,OAACe,QAAD,IAACA,OAAD,EAACA,EAAO7B,MAFpC,UAIE,oCAAK6B,QAAL,IAAKA,OAAL,EAAKA,EAAOd,UACZ,+BACE,+BAEI,IAAIH,KAAKiB,EAAMC,OAAO,GAAGC,MACtBC,iBACAC,MAAM,KAAK,KAGlB,uBACA,+BAEI,IAAIrB,KAAKiB,EAAMC,OAAO,GAAGC,MACtBC,iBACAC,MAAM,KAAK,QAIpB,oCAAKJ,QAAL,IAAKA,OAAL,EAAKA,EAAOK,OAAO,GAAGC,UACtB,0CAAMN,QAAN,IAAMA,OAAN,EAAMA,EAAO3B,SACb,+BACG,IACD,4BAEI,mBAAI2B,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,QACRM,UACAC,MAAK,SAACC,GAAD,OAA+B,IAApBA,EAAMC,aAAoB9B,YA9BrD,OACOoB,QADP,IACOA,OADP,EACOA,EAAOd,mBAwCxB,cAACyB,EAAA,EAAD,CAAmB3D,QAASA,EAASD,KAAMA,EAAME,QAASA,S,qLEhMjD,2CAAArD,EAAA,6DACb2I,EADa,EACbA,iBACAC,EAFa,EAEbA,KACAC,EAHa,EAGbA,uBACAC,EAJa,EAIbA,sBACAxI,EALa,EAKbA,MACAP,EANa,EAMbA,iBAEA8I,GAAuB,GARV,kBAWgBE,YAAI,mBAAD,OACTJ,GACnBC,EACAtI,GAdS,mBAWH0I,EAXG,EAWHA,SAMRH,GAAuB,GAEC,MAApBG,EAASC,OAnBF,kCAoBHC,YAAiBnJ,GApBd,eAsBT+I,GAAsB,GACtBK,YAAW,WACTL,GAAsB,KACrB,KAzBM,6EA8BX1I,QAAQC,IAAR,MA9BW,2D,sBCAA,SAAe+I,EAA9B,kC,4CAAe,qCAAApJ,EAAA,6DACb2I,EADa,EACbA,iBACArI,EAFa,EAEbA,MACAP,EAHa,EAGbA,iBAHa,kBAMgBS,YAAO,mBAAD,OACZmI,GACnBrI,GARS,mBAWa,OALhB0I,EANG,EAMHA,UAKKC,OAXF,iCAYHC,YAAiBnJ,GAZd,4CAea,MAApBiJ,EAASC,OAfF,0CAgBFI,MAAM,oCAhBJ,0DAkBXjJ,QAAQC,IAAR,MAlBW,2D,kECAf,2CAAAL,EAAA,6DACEM,EADF,EACEA,MACAsI,EAFF,EAEEA,KACA7I,EAHF,EAGEA,iBACAuJ,EAJF,EAIEA,uBACAR,EALF,EAKEA,sBACAnG,EANF,EAMEA,EAEA2G,GAAuB,GARzB,kBAU+BC,YAAK,kBAAmBX,EAAMtI,GAV7D,mBAUY0I,EAVZ,EAUYA,SAERM,GAAuB,GAEC,MAApBN,EAASC,OAdjB,kCAeYC,YAAiBnJ,GAf7B,eAgBM4C,EAAEE,OAAO2G,YAAYnC,MAAQ,GAC7ByB,GAAsB,GACtBK,YAAW,WACTL,GAAsB,KACrB,KApBT,6EAwBI1I,QAAQC,IAAR,MAxBJ,2D,sBA2BeoJ,M,4CCtBA,SAASC,IAAqB,IAAD,EAEyBnH,cAA3DoH,EAFkC,EAElCA,WAAWb,EAFuB,EAEvBA,sBAAsBxI,EAFC,EAEDA,MAAMP,EAFL,EAEKA,iBAFL,EAIEmD,mBAAS,aAJX,mBAIpC0G,EAJoC,KAIpBC,EAJoB,OAKa3G,oBAAS,GALtB,mBAKlC4G,EALkC,KAKbjB,EALa,OAMgB3F,oBAAS,GANzB,mBAM/B6G,EAN+B,KAMVT,EANU,OAQKpG,mBAAS,IARd,mBAQnCyF,EARmC,KAQlBqB,EARkB,KAW5ClG,qBAAU,WAAK,IAAD,EAEVmG,EAAU,OAAGN,QAAH,IAAGA,GAAH,UAAGA,EAAY/C,MAAK,SAAAsD,GAAQ,OAAIA,EAASlF,OAAS4E,YAAlD,aAAG,EAAkErF,IAEnFyF,EAAoBC,KAElB,CAACL,EAAgBD,IAKnB,IAAMQ,EAAY,uCAAE,WAAOxH,GAAP,SAAA3C,EAAA,yDAClB2C,EAAEyE,iBACHzE,EAAEC,mBACkBwH,OAAOC,QAAQ,6FAHhB,gCAMZjB,EAAkB,CAACT,mBAAiBrI,QAAMP,qBAN9B,cAOlB8J,EAAmB,YAPD,8DAAF,sDAkChB,MAAO,CAACS,mBApBiB,SAAC3H,GAC3BA,EAAEyE,iBACFzE,EAAEC,kBAEA,IAAMgG,EAAM,CACf2B,gBAAkB5H,EAAEE,OAAO0H,gBAAgBlD,MAAMmD,SH9ClC,SAAf,2BGiDEC,CAAsB,CAAC9B,mBAAiBC,OAAKC,yBAAuBC,wBAAsBxI,QAAMP,qBAClG8J,EAAmB,aAWUa,mBATF,SAAC/H,GAC5BA,EAAEyE,iBACDzE,EAAEC,kBACH,IAAMgG,EAAO,CACXsB,SAAUvH,EAAEE,OAAO2G,YAAYnC,MAAMmD,QAEvCf,EAAkB,CAACnJ,QAAMsI,OAAK7I,mBAAiBuJ,yBAAuBR,wBAAsBnG,OAG5CkH,qBAAmBD,kBACnEO,eAAaL,sBAAoBC,sBAAoBJ,c,wDCvD/CgB,EAAiBlL,YAAOiB,OAAPjB,CAAH,oHACH,SAAAmB,GAAK,OAAIA,EAAMC,MAAMC,eAOhC8J,EAAQnL,YAAOoL,IAAPpL,CAAH,mFAEU,SAAAmB,GAAK,OAAIA,EAAMC,MAAMiK,kBAEpCC,EAAUtL,IAAOgI,QAAV,2MAkBPuD,EAAWvL,IAAOwL,QAAV,m2BAQO,SAAArK,GAAK,OAAIA,EAAMC,MAAMqK,kBAsCpCC,EAAe1L,IAAOiC,OAAV,4YAMA,SAAAd,GAAK,OAAIA,EAAMC,MAAMM,SAErB,SAAAP,GAAK,OAAIA,EAAMC,MAAMqK,kBAOxB,SAAAtK,GAAK,OAAIA,EAAMC,MAAMuK,UAqErBC,uBAlEf,WAA+B,IAAD,EAGwHC,IAA9IhB,EAHsB,EAGtBA,mBAAmBI,EAHG,EAGHA,mBAAoBP,EAHjB,EAGiBA,aAAaN,EAH9B,EAG8BA,mBAAmBD,EAHjD,EAGiDA,gBAAgBE,EAHjE,EAGiEA,oBAAoBC,EAHrF,EAGqFA,oBAAoBJ,EAHzG,EAGyGA,WAErI,OACE,eAACgB,EAAD,WACK,cAACpC,EAAA,EAAD,IACH,cAAC,eAAD,CAAc9C,OAAK,EAAnB,2BAEA,eAACsF,EAAD,WAEU,eAACC,EAAD,WAER,wDAEN,uBAAMhG,KAAK,eAAgBuG,SAAUjB,EAArC,UAGA,cAAC,IAAD,CAAYtF,KAAK,WAAWmC,SAAU,SAACxE,GAAD,OAAMkH,EAAmBlH,EAAEE,OAAOwE,QAAxE,gBAECsC,QAFD,IAECA,OAFD,EAECA,EAAYxD,KAAI,SAAAqF,GAAG,OAEtB,cAAC,IAAD,CAAwBnE,MAAK,OAAEmE,QAAF,IAAEA,OAAF,EAAEA,EAAKxG,KAApC,gBAA4CwG,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAKxG,MAAjD,OAAawG,QAAb,IAAaA,OAAb,EAAaA,EAAKjH,UAMA,cAAC4G,EAAD,CAAczF,QAASyE,EAAvB,sBAElB,uBAGwB,wDAEtB,cAACS,EAAD,CAAOpC,YAAW,oBAAeoB,GAAmB5E,KAAK,oBACpD8E,GAAwB,cAAC9I,EAAA,EAAD,CAAe+E,OAAK,IACnD,cAAC,IAAD,CAAYC,GAAG,QAAQyF,KAAK,SAASpE,MAAM,iBASnC,eAAC2D,EAAD,WACE,8DAEV,uBAAOhG,KAAK,iBAAkBuG,SAAUb,EAAxC,UAEE,cAACE,EAAD,CAAUpC,YAAY,wBAAwBxD,KAAK,gBAE5C+E,GAAwB,cAAC/I,EAAA,EAAD,CAAe+E,OAAK,IAErD,cAAC,IAAD,CAAYC,GAAG,QAAQyF,KAAK,SAASpE,MAAM","file":"static/js/13.37719d88.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Table = styled.div`\r\n  width: 100%;\r\n  max-width: 900px;\r\n  margin: 20px auto 0;\r\n  background: gray;\r\n  box-shadow: 1px 1px 5px #00000057;\r\n  background: #f3f3f3;\r\n`;\r\nconst TableHeader = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  background: #ccc;\r\n  box-shadow: 1px 1px 5px #00000057;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\nconst TableCells = styled.div`\r\nwith:100%;\r\nheight:50px;\r\nbackground:white;\r\nmargin: 1px 0;\r\nbackground:#fff;\r\nborder-bottom:1px solid #ccc;\r\nbox-shadow: 0 1px 3px #ccc;\r\n\r\n\r\n}\r\n`;\r\n\r\nexport default function OrdersTableSkeleton() {\r\n  return (\r\n    <Table>\r\n      <TableHeader />\r\n      <TableCells />\r\n      <TableCells />\r\n      <TableCells />\r\n      <TableCells />\r\n      <TableCells />\r\n    </Table>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/refresh.f1c42ba5.svg\";","import { GET } from \"../utils/http\";\r\n\r\nexport default async function getCategoryAPI(setAllCategories) {\r\n  try {\r\n    const { json } = await GET(\"/api/categories\");\r\n    setAllCategories(json.data);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import { DELETE } from \"../utils/http\";\r\nasync function deleteOrderAPI({ token, id }) {\r\n  try {\r\n    await DELETE(`/api/orders/${id}`, token);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default deleteOrderAPI;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useUserOrdersPage from \"../../hooks/useUserOrdersPage\";\r\nimport { ButtonPrimary } from \"../Buttons\";\r\nimport { SectionTitle } from \"../menu/Menu\";\r\nimport PaginationButtons from \"../PaginationButtons\";\r\nimport OrdersTableSkeleton from \"../OrdersTableSkeleton\";\r\nimport refreshIcone from \"../../img/refresh.svg\";\r\nimport { LoaderSpinner } from \"../LoaderSpinner\";\r\n\r\nconst Page = styled.main`\r\n  padding: 65px 5px;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  background: ${(props) => props.theme.lightYellow};\r\n  &:before {\r\n    display: ${(props) => (props.isLoading ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    content: \" \";\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: #ffffff57;\r\n    z-index: 400;\r\n  }\r\n  & > ${LoaderSpinner} {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    z-index: 500;\r\n    margin: -60px 0 0 -60px;\r\n  }\r\n`;\r\nexport const TableHead = styled.thead`\r\n  background-color: ${(props) => props.theme.black};\r\n  color: ${(props) => props.theme.darckYellow};\r\n  & > tr th {\r\n    padding: 10px 0;\r\n    font-family: \"Oswald\", sans-serif;\r\n    font-size: 19px;\r\n  }\r\n`;\r\nexport const TableWrapper = styled.div`\r\n  max-width: 900px;\r\n  margin: 0 auto 40px;\r\n  overflow-x: scroll;\r\n`;\r\nexport const OrdersTable = styled.table`\r\n  width: 900px;\r\n  margin: 20px auto 0;\r\n  border-spacing: 10px;\r\n  border-collapse: collapse;\r\n  border: 2px solid ${(props) => props.theme.black};\r\n  box-shadow: ${(props) => props.theme.lihgtBoxShadow};\r\n  text-transform: capitalize;\r\n  & > tbody {\r\n    background: #fff;\r\n  }\r\n  & > tbody td span + span {\r\n    margin-right: 5px;\r\n  }\r\n  & > tbody td {\r\n    padding: 10px 0;\r\n    cursor: pointer;\r\n  }\r\n  & > tbody tr {\r\n    border-bottom: 1px solid;\r\n  }\r\n`;\r\n\r\nconst CancelOrderButton = styled.button`\r\n  padding: 8px 5px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  margin: 5px;\r\n  border-radius: 10px 5px;\r\n  border: none;\r\n  font-family: \"Oswald\", sans-serif;\r\n  transition: all 0.5s;\r\n  opacity: ${(props) => (props.disabled ? \"0.4\" : \"1\")};\r\n  &:hover {\r\n    background: ${(props) => (props.disabled ? \"unset\" : \"#cdc8c8\")};\r\n  }\r\n`;\r\nconst NotFounMessage = styled.div`\r\n  padding: 30px 0;\r\n  & > h3 {\r\n    margin-bottom: 40px;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    font-size: 25px;\r\n  }\r\n  & > ${ButtonPrimary} {\r\n    padding: 15px 30px;\r\n  }\r\n`;\r\nconst NotFounIcone = styled.h2`\r\n  font-size: 50px;\r\n`;\r\nexport const RefreshButton = styled.div`\r\n  cursor: pointer;\r\n  padding: 0 10px;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  height: 40px;\r\n  box-shadow: ${(props) => props.theme.lihgtBoxShadow};\r\n  background: ${(props) => props.theme.black};\r\n\r\n  margin: -46px 0 10px auto;\r\n  width: max-content;\r\n  display: flex;\r\n  transform: scale(0.7);\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    transform: scale(0.75);\r\n  }\r\n`;\r\n\r\nexport const RefreshIcone = styled.img`\r\n  height: 50%;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default function UserOrdersPage({ closeNotification }) {\r\n  const {\r\n    seeDetails,\r\n    handleRefresh,\r\n    setPage,\r\n    page,\r\n    isLoading,\r\n    maxPage,\r\n    orders,\r\n    isFirstRender,\r\n    deleteOrder,\r\n  } = useUserOrdersPage({ closeNotification });\r\n\r\n  return (\r\n    <Page isLoading={isLoading}>\r\n      {isLoading ? <LoaderSpinner /> : null}\r\n\r\n      <SectionTitle light>Mis Pedidos</SectionTitle>\r\n\r\n      <RefreshButton onClick={() => handleRefresh()}>\r\n        <RefreshIcone\r\n          onClick={() => handleRefresh()}\r\n          src={refreshIcone}\r\n          title=\"Refrescar Página\"\r\n        />\r\n      </RefreshButton>\r\n\r\n      {isLoading && isFirstRender && <OrdersTableSkeleton />}\r\n\r\n      {!isLoading && !isFirstRender && orders?.length === 0 && (\r\n        <NotFounMessage>\r\n          <NotFounIcone>👩🏻&zwj;🍳</NotFounIcone>\r\n          <h3>Ningún pedido realizado, tienes hambre?</h3>\r\n\r\n          <ButtonPrimary small as={Link} to=\"/menu\">\r\n            Ver Menú\r\n          </ButtonPrimary>\r\n        </NotFounMessage>\r\n      )}\r\n\r\n      {orders?.length !== 0 && (\r\n        <TableWrapper>\r\n          <OrdersTable>\r\n            <TableHead>\r\n              <tr>\r\n                <th>Nº de Pedido</th>\r\n                <th>Fecha</th>\r\n                <th>Dirección</th>\r\n                <th>Total</th>\r\n                <th>Estado</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </TableHead>\r\n            <tbody>\r\n              {orders?.map((order) => (\r\n                <tr key={order?._id} onClick={(e) => seeDetails(order._id)}>\r\n                  <td>{order?.orderID}</td>\r\n                  <td>\r\n                    <span>\r\n                      {\r\n                        new Date(order?.states[0].date)\r\n                          .toLocaleString()\r\n                          ?.split(\" \")[0]\r\n                      }\r\n                    </span>\r\n                    <br></br>\r\n                    <span>\r\n                      {\r\n                        new Date(order?.states[0].date)\r\n                          .toLocaleString()\r\n                          ?.split(\" \")[1]\r\n                      }\r\n                    </span>\r\n                  </td>\r\n                  <td>{order.client[0].address}</td>\r\n                  <td>${order?.total}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <b>\r\n                      {\r\n                        [...order?.states]\r\n                          .reverse()\r\n                          .find((state) => state.confirmed === true).name\r\n                      }\r\n                    </b>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <CancelOrderButton\r\n                      disabled={\r\n                        order?.states[1].confirmed === true ? true : false\r\n                      }\r\n                      onClick={(e) => deleteOrder(e, order._id)}\r\n                    >\r\n                      Cancelar Pedido\r\n                    </CancelOrderButton>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </OrdersTable>\r\n        </TableWrapper>\r\n      )}\r\n\r\n      <PaginationButtons setPage={setPage} page={page} maxPage={maxPage} />\r\n    </Page>\r\n  );\r\n}\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useStorage } from \"../context/useStorage\";\r\nimport deleteOrderAPI from \"../API/deleteOrderAPI\";\r\n\r\nexport default function useUserOrdersPage({ closeNotification }) {\r\n  const history = useHistory();\r\n  const { token, setIsLoading, currentUser } = useStorage();\r\n\r\n  ////redirects to order details page with order id as url parameter\r\n\r\n  const seeDetails = (orderID) => {\r\n    setIsLoading(true);\r\n    history.push(`/myAccount/myOrders/${orderID}`);\r\n  };\r\n  const deleteOrder = async (e, id) => {\r\n    e.stopPropagation();\r\n\r\n    if (!e.target.disabled) {\r\n      setIsLoadingPage(true);\r\n      await deleteOrderAPI({ token, id });\r\n      handleRefresh();\r\n    }\r\n  };\r\n\r\n  let query = new URLSearchParams();\r\n  let sizeLimit = 5;\r\n\r\n  const [isLoading, setIsLoadingPage] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [maxPage, setMaxPage] = useState(1);\r\n  const [orders, setOrders] = useState([]);\r\n  const [isFirstRender, setIsFirstRender] = useState(true);\r\n  let [refreshCount, setRefreshCount] = useState(0);\r\n\r\n  ///add  search params to the url query\r\n\r\n  query.append(\"page\", page);\r\n  query.append(\"limit\", sizeLimit);\r\n  query.append(\"sort\", \"-createdAt\");\r\n\r\n  ////get all user orders\r\n\r\n  useEffect(() => {\r\n    closeNotification();\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n\r\n    const ordersAPI = async () => {\r\n      setIsLoadingPage(true);\r\n\r\n      try {\r\n        const headers = new Headers();\r\n        headers.append(\"Accept\", \"application/json\");\r\n        headers.append(\"Authorization\", `Bearer ${token}`);\r\n\r\n        const setting = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n          signal,\r\n        };\r\n\r\n        let res = await fetch(\r\n          `/api/orders/user/${currentUser._id}?${query}`,\r\n          setting\r\n        );\r\n        let json = await res.json();\r\n\r\n        setOrders(json.data);\r\n\r\n        let total = parseInt(json.total);\r\n\r\n        setMaxPage(Math.ceil(total / sizeLimit));\r\n\r\n        document.querySelector(\"body\").scrollTo(0, 60);\r\n        setIsFirstRender(false);\r\n        setIsLoadingPage(false);\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Fetch Canseled: caught abort\");\r\n        } else {\r\n          console.log(err);\r\n        }\r\n      }\r\n    };\r\n\r\n    ordersAPI();\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [page, refreshCount]);\r\n\r\n  const handleRefresh = () => {\r\n    setRefreshCount(Date.now());\r\n    setPage(1);\r\n  };\r\n\r\n  return {\r\n    seeDetails,\r\n    handleRefresh,\r\n    setPage,\r\n    page,\r\n    isLoading,\r\n    maxPage,\r\n    orders,\r\n    isFirstRender,\r\n    deleteOrder,\r\n  };\r\n}\r\n","\r\nimport {Option,OptionList} from './SortProductsOptions'\r\n\r\nexport default function FilterOrdersStateOptions({setStatePreferece,setPage,defaultValue}){\r\n\r\n  const handelChange = (e) =>{\r\n e.preventDefault()\r\n     setPage(1)\r\n setStatePreferece(e.target.value)\r\n}\r\n\r\nreturn(\r\n<OptionList defaultValue={defaultValue}  name=\"filterOrdersByState\" onChange={(e) =>handelChange(e)}>\r\n<Option value=\"all\" >Todos</Option>\r\n<Option value=\"finish\" >Liquidados</Option>\r\n<Option value=\"unfinish\" >Pendientes</Option>\r\n</OptionList>\r\n\r\n);\r\n\r\n}","\r\nimport {Option,OptionList} from './SortProductsOptions'\r\n\r\nexport default function SortOrdersOptions({setSortPreferece,defaultValue}){\r\n\r\n\r\nreturn(\r\n<OptionList  defaultValue={defaultValue} name=\"sortProductBy\" onChange={(e) => setSortPreferece(e.target.value)}>\r\n<Option value=\"-createdAt\" >Más recientes</Option>\r\n<Option value=\"createdAt\" >Más antiguos</Option>\r\n<Option value=\"total\" >Menor Monto</Option>\r\n<Option value=\"-total\">Mayor Monto</Option>\r\n\r\n</OptionList>\r\n\r\n);\r\n\r\n}","import styled from \"styled-components\";\r\nimport useDashboardOrders from \"../../hooks/useDashboardOrders\";\r\nimport DashboardNav from \"../DashboardNav\";\r\nimport refreshIcone from \"../../img/refresh.svg\";\r\nimport SearchBar from \"../MenuSearchBar\";\r\nimport {\r\n  RefreshButton,\r\n  RefreshIcone,\r\n  TableWrapper,\r\n} from \"../account/UserOrdersPage\";\r\nimport { LoaderSpinner } from \"./../LoaderSpinner\";\r\nimport { NotFaundMessage } from \"../menu/ProductsSection\";\r\nimport { SectionTitle } from \"../menu/Menu\";\r\nimport { FiltersBoard } from \"./DashboardProducts\";\r\nimport FilterOrderStateOptions from \"./../FilterOrderStateOptions\";\r\nimport SortOrdersOptions from \"./../SortOrdersOptions\";\r\nimport PaginationButtons from \"../PaginationButtons\";\r\nimport OrdersTableSkeleton from \"../OrdersTableSkeleton\";\r\n\r\nexport const Page = styled.section`\r\n  padding: 60px 05px;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  max-width: 1250px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  &:before {\r\n    display: ${(props) => (props.isLoading ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    content: \" \";\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: #ffffff57;\r\n    z-index: 400;\r\n  }\r\n  & > ${LoaderSpinner} {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    z-index: 500;\r\n    margin: -60px 0 0 -60px;\r\n  }\r\n  & > ${NotFaundMessage} {\r\n    padding: 0 5px;\r\n  }\r\n  & > ${FiltersBoard} {\r\n    margin: 30px 5px 0;\r\n  }\r\n`;\r\nexport const TableHead = styled.thead`\r\n  background-color: #171717;\r\n  color: #fcba1c;\r\n  & > tr th {\r\n    padding: 10px 0;\r\n    font-family: \"Oswald\", sans-serif;\r\n    font-size: 19px;\r\n  }\r\n`;\r\nexport const OrdersTable = styled.table`\r\n  width: 900px;\r\n  margin: 20px auto 0;\r\n  border-spacing: 10px;\r\n  border-collapse: collapse;\r\n  border: 2px solid #171717;\r\n  text-transform: capitalize;\r\n\r\n  & > tbody {\r\n    background: #fff;\r\n  }\r\n\r\n  & > tbody tr td {\r\n    padding: 10px 0;\r\n    cursor: pointer;\r\n  }\r\n  & > tbody tr {\r\n    border-bottom: 1px solid;\r\n  }\r\n  & > tbody tr td small {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport default function DashboardOrders({ closeNotification }) {\r\n  const {\r\n    seeDetails,\r\n    handleRefresh,\r\n    setOrderID,\r\n    setSorting,\r\n    setPage,\r\n    setState,\r\n    page,\r\n    isLoading,\r\n    maxPage,\r\n    orders,\r\n    sorting,\r\n    isFirstRender,\r\n    orderID,\r\n    state,\r\n  } = useDashboardOrders({ closeNotification });\r\n\r\n  return (\r\n    <Page isLoading={isLoading}>\r\n      <DashboardNav />\r\n      <SectionTitle>Pedidos</SectionTitle>\r\n\r\n      <SearchBar\r\n        defaultValue={orderID}\r\n        placeholder=\"Número de orden...\"\r\n        setSearch={setOrderID}\r\n      />\r\n      <FiltersBoard>\r\n        <FilterOrderStateOptions\r\n          defaultValue={state}\r\n          setPage={setPage}\r\n          setStatePreferece={setState}\r\n        />\r\n        <SortOrdersOptions\r\n          defaultValue={sorting}\r\n          setSortPreferece={setSorting}\r\n        />\r\n      </FiltersBoard>\r\n\r\n      <RefreshButton\r\n        data-testid=\"refresh-button\"\r\n        onClick={() => handleRefresh()}\r\n      >\r\n        <RefreshIcone src={refreshIcone} title=\"Refrescar Página\" />\r\n      </RefreshButton>\r\n      {isLoading ? <LoaderSpinner /> : null}\r\n\r\n      {isLoading && isFirstRender && <OrdersTableSkeleton />}\r\n\r\n      {!isLoading && !isFirstRender && orders?.length === 0 && (\r\n        <NotFaundMessage>\r\n          No se han encontrado coincidencias, intenta de nuevo!!\r\n        </NotFaundMessage>\r\n      )}\r\n\r\n      {orders?.length !== 0 && (\r\n        <TableWrapper>\r\n          <OrdersTable>\r\n            <TableHead>\r\n              <tr>\r\n                <th>Nº de Pedido</th>\r\n                <th>Fecha</th>\r\n                <th>Dirección</th>\r\n                <th>Total</th>\r\n                <th>Estado</th>\r\n              </tr>\r\n            </TableHead>\r\n            <tbody>\r\n              {orders?.map((order) => (\r\n                <tr\r\n                  key={order?.orderID}\r\n                  onClick={(e) => seeDetails(order?._id)}\r\n                >\r\n                  <td>{order?.orderID}</td>\r\n                  <td>\r\n                    <span>\r\n                      {\r\n                        new Date(order.states[0].date)\r\n                          .toLocaleString()\r\n                          .split(\" \")[0]\r\n                      }\r\n                    </span>\r\n                    <br></br>\r\n                    <span>\r\n                      {\r\n                        new Date(order.states[0].date)\r\n                          .toLocaleString()\r\n                          .split(\" \")[1]\r\n                      }\r\n                    </span>\r\n                  </td>\r\n                  <td>{order?.client[0].address}</td>\r\n                  <td>${order?.total}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <b>\r\n                      {\r\n                        [...order?.states]\r\n                          .reverse()\r\n                          .find((state) => state.confirmed === true).name\r\n                      }\r\n                    </b>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </OrdersTable>\r\n        </TableWrapper>\r\n      )}\r\n\r\n      <PaginationButtons setPage={setPage} page={page} maxPage={maxPage} />\r\n    </Page>\r\n  );\r\n}\r\n","import { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useStorage } from \"../context/useStorage\";\r\n\r\nexport default function useDashboardOrders({ closeNotification }) {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const { token, setIsLoading } = useStorage();\r\n\r\n  const seeDetails = (orderID) => {\r\n    setIsLoading(true);\r\n    history.push(`/dashboard/orders/${orderID}`);\r\n  };\r\n\r\n  let sizeLimit = 5;\r\n\r\n  const [oldQuery, setOldQuery] = useState(\r\n    new URLSearchParams(location.search)\r\n  );\r\n  const [orderID, setOrderID] = useState(\"\");\r\n  const [isLoading, setIsLoadingPage] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [maxPage, setMaxPage] = useState(1);\r\n  const [orders, setOrders] = useState([]);\r\n  const [state, setState] = useState(\"all\");\r\n  const [sorting, setSorting] = useState(\"-createdAt\");\r\n  const [isFirstRender, setIsFirstRender] = useState(true);\r\n  let [refreshCount, setRefreshCount] = useState(0);\r\n\r\n  let query;\r\n\r\n  if (isFirstRender) {\r\n    query = new URLSearchParams(oldQuery.toString());\r\n  } else {\r\n    query = new URLSearchParams();\r\n    query.append(\"sort\", sorting);\r\n    query.append(\"page\", page);\r\n    query.append(\"limit\", sizeLimit);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (orderID !== \"\") {\r\n      query.append(\"orderID\", orderID);\r\n      setState(\"all\");\r\n    }\r\n    if (state !== \"all\") {\r\n      query.append(\"state\", state);\r\n    }\r\n\r\n    setPage(1);\r\n  }, [orderID, state, sorting]);\r\n\r\n  useEffect(() => {\r\n    closeNotification();\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n\r\n    const ordersAPI = async () => {\r\n      setIsLoadingPage(true);\r\n\r\n      try {\r\n        const headers = new Headers();\r\n        headers.append(\"Accept\", \"application/json\");\r\n        headers.append(\"Authorization\", `Bearer ${token}`);\r\n\r\n        const setting = {\r\n          method: \"GET\",\r\n          headers: headers,\r\n          signal,\r\n        };\r\n\r\n        let res = await fetch(`/api/orders?${query}`, setting);\r\n        let json = await res.json();\r\n\r\n        setOrders(json.data);\r\n\r\n        let total = parseInt(json.total);\r\n\r\n        setMaxPage(Math.ceil(total / sizeLimit));\r\n\r\n        history.push(`/dashboard/orders?${query}`);\r\n\r\n        document.querySelector(\"body\").scrollTo(0, 60);\r\n        setIsFirstRender(false);\r\n        setIsLoadingPage(false);\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Fetch Canseled: caught abort\");\r\n        } else {\r\n          console.log(err);\r\n        }\r\n      }\r\n    };\r\n\r\n    ordersAPI();\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [orderID, state, page, sorting, refreshCount]);\r\n\r\n  const handleRefresh = () => {\r\n    setRefreshCount(Date.now());\r\n    setPage(1);\r\n    setSorting(\"-createdAt\");\r\n    setState(\"all\");\r\n  };\r\n\r\n  return {\r\n    seeDetails,\r\n    handleRefresh,\r\n    setOrderID,\r\n    setSorting,\r\n    setState,\r\n    setPage,\r\n    page,\r\n    isLoading,\r\n    maxPage,\r\n    orders,\r\n    sorting,\r\n    isFirstRender,\r\n    orderID,\r\n    sorting,\r\n    state,\r\n  };\r\n}\r\n","import getCategoriesAPI from \"./getCategoriesAPI\";\r\nimport { PUT } from \"../utils/http\";\r\n\r\nexport default async function updateCategoryNameAPI({\r\n  categorySelectId,\r\n  info,\r\n  setIsRenameFormLoading,\r\n  setIsSuccessfullySend,\r\n  token,\r\n  setAllCategories,\r\n}) {\r\n  setIsRenameFormLoading(true);\r\n\r\n  try {\r\n    const { response } = await PUT(\r\n      `/api/categories/${categorySelectId}`,\r\n      info,\r\n      token\r\n    );\r\n\r\n    setIsRenameFormLoading(false);\r\n\r\n    if (response.status === 200) {\r\n      await getCategoriesAPI(setAllCategories);\r\n\r\n      setIsSuccessfullySend(true);\r\n      setTimeout(() => {\r\n        setIsSuccessfullySend(false);\r\n      }, 3000);\r\n\r\n      return;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import { DELETE } from \"../utils/http\";\r\nimport getCategoriesAPI from \"./getCategoriesAPI\";\r\n\r\nexport default async function deleteCategoryAPI({\r\n  categorySelectId,\r\n  token,\r\n  setAllCategories,\r\n}) {\r\n  try {\r\n    const { response } = await DELETE(\r\n      `/api/categories/${categorySelectId}`,\r\n      token\r\n    );\r\n\r\n    if (response.status === 204) {\r\n      await getCategoriesAPI(setAllCategories);\r\n      return;\r\n    }\r\n    if (response.status === 403)\r\n      return alert(\"Se require rol de Administrador\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import getCategoriesAPI from \"./getCategoriesAPI\";\r\nimport { POST } from \"../utils/http\";\r\n\r\nasync function createCategoryAPI({\r\n  token,\r\n  info,\r\n  setAllCategories,\r\n  setIsCreateFormLoading,\r\n  setIsSuccessfullySend,\r\n  e,\r\n}) {\r\n  setIsCreateFormLoading(true);\r\n  try {\r\n    const { response } = await POST(\"/api/categories\", info, token);\r\n\r\n    setIsCreateFormLoading(false);\r\n\r\n    if (response.status === 201) {\r\n      await getCategoriesAPI(setAllCategories);\r\n      e.target.newCategory.value = \"\";\r\n      setIsSuccessfullySend(true);\r\n      setTimeout(() => {\r\n        setIsSuccessfullySend(false);\r\n      }, 3000);\r\n      return;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport default createCategoryAPI;\r\n","import {useState,useEffect} from 'react'\r\nimport {useStorage} from '../context/useStorage'\r\n import updateCategoryNameAPI from '../API/updateCategoryNameAPI'\r\nimport deleteCategoryAPI  from '../API/deleteCategoryAPI'\r\nimport createCategoryAPI from '../API/createCategoryAPI'\r\n\r\n\r\n \r\nexport default function useCategoriesForms(){\r\n\r\n   const {categories,setIsSuccessfullySend,token,setAllCategories} = useStorage()\r\n\r\n const [editingCategory,setEditingCategory] = useState('categoria')\r\n   const [isRenameFormLoading, setIsRenameFormLoading] = useState(false)\r\n      const [isCreateFormLoading, setIsCreateFormLoading] = useState(false)\r\n\r\n  const [categorySelectId,setCategorySelectId] = useState('')\r\n\r\n\r\nuseEffect(()=>{\r\n\r\nlet categoryId = categories?.find(category => category.name === editingCategory )?._id\r\n\r\nsetCategorySelectId(categoryId)\r\n\r\n},[editingCategory,categories])\r\n\r\n\r\n\r\n\r\nconst handleDelete =async (e) =>{\r\n  e.preventDefault()\r\n e.stopPropagation()\r\n const confirmation =window.confirm('Al eliminar la categoría se eliminarn todos los productos de la misma, está deguro?')\r\n\r\nif(confirmation) {\r\n  await deleteCategoryAPI({categorySelectId,token,setAllCategories})\r\n  setEditingCategory('category')\r\n  return\r\n}\r\n\r\n}\r\n\r\n\r\nconst handleRenameSubmit = (e) =>{\r\n e.preventDefault()\r\n e.stopPropagation()\r\n\r\n   const info ={\r\ncategoryNewName : e.target.categoryNewName.value.trim()\r\n   }\r\n\r\n  updateCategoryNameAPI({categorySelectId,info,setIsRenameFormLoading,setIsSuccessfullySend,token,setAllCategories})\r\nsetEditingCategory('category')\r\n}\r\nconst handleCreateSubmit = (e) =>{\r\ne.preventDefault()\r\n e.stopPropagation()\r\nconst info = {\r\n  category: e.target.newCategory.value.trim()\r\n}\r\ncreateCategoryAPI({token,info,setAllCategories,setIsCreateFormLoading,setIsSuccessfullySend,e})\r\n\r\n}\r\n  return {handleRenameSubmit,handleCreateSubmit,setEditingCategory,editingCategory,\r\nhandleDelete,isRenameFormLoading,isCreateFormLoading,categories} \r\n  \r\n}","import styled  from 'styled-components'\r\nimport { withError } from './../withError'\r\nimport {Page} from './DashboardOrders'\r\nimport useDashboardCategories from '../../hooks/useDashboardCategories'\r\nimport {SectionTitle} from '../menu/Menu'\r\nimport DashboardNav from '../DashboardNav'\r\nimport {TextInput,LoadButton,OptionList,Option} from './CreateNewProductForm'\r\nimport {LoaderSpinner} from './../LoaderSpinner'\r\n\r\n\r\nconst CategoriesPage = styled(Page)`\r\n    background:${props => props.theme.lightYellow};\r\npadding: 65px 5px;\r\n    max-height: max-content;\r\nmin-width:100%;\r\n`\r\n\r\n\r\nconst Input = styled(TextInput)`\r\nbackground: rgb(0 0 0 / 7%);\r\n      box-shadow: :${props => props.theme.inputBoxShadow};\r\n`\r\nconst Wrapper = styled.section`\r\nwidth:100%:\r\nmax-width:1250px;\r\nmargin:30px auto;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\njustify-content:center;\r\ngap:10px;\r\n&> article{\r\n  flex: 1 1 400px;\r\n  width: 100%;\r\n}\r\n\r\n\r\n`\r\n\r\n\r\n\r\nconst FormCard = styled.article`\r\n    padding: 20px 15px;\r\n    margin-bottom: 20px;\r\n    border-radius: 10px;\r\n    max-width: 400px;\r\n        padding: 20px 15px 40px;\r\n        height:max-content;\r\n        background:#fff;\r\n        box-shadow:${props => props.theme.lightBoxShadow};\r\n& > h4{\r\n      margin: 10px 0 24px;\r\n        font-size: 25px;\r\n}\r\n& >form  h4{\r\n      margin: 10px 0 24px;\r\n        font-size: 25px;\r\n}\r\n      \r\n    & > form select {\r\n     min-width:95%;\r\n    }\r\n    & > form small {\r\n       position: absolute;\r\n    margin-top: -18px;\r\n    margin-left: 10px;\r\n    }\r\n\r\n & > form buttons {\r\n   transfor:scale(0.8);\r\n       position: absolute;\r\n    margin-top: -18px;\r\n    margin-left: 10px;\r\n    }\r\n  @media screen and (max-width: 450px){\r\n    & > h4{\r\n     line-height:  24px;\r\n        font-size: 20px;\r\n}\r\n   & > form h4{\r\n      line-height:  24px;\r\n        font-size: 20px;\r\n}\r\n  \r\n  }\r\n\r\n`\r\nconst DeleteButton = styled.button`\r\n    padding: 11px 25px 12px;\r\n    transition: all 0.5s;\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    background: ${props => props.theme.black};\r\n    border: none;\r\n    box-shadow: ${props => props.theme.lightBoxShadow};\r\n    color: white;\r\n    letter-spacing: 1px;\r\nfont-size: 15px;\r\n    font-family: \"Oswald\",sans-serif;\r\n    border-radius: 4px;\r\n    &:hover{\r\n  background:${props => props.theme.orange};\r\n    }\r\n `\r\nfunction DashboardCategories(){\r\n\r\n\r\nconst  {handleRenameSubmit,handleCreateSubmit ,handleDelete,setEditingCategory,editingCategory,isRenameFormLoading,isCreateFormLoading,categories}  = useDashboardCategories()\r\n\r\n  return(\r\n    <CategoriesPage>\r\n         <DashboardNav/>\r\n      <SectionTitle light>Categorías</SectionTitle>\r\n\r\n      <Wrapper>\r\n\r\n                <FormCard>\r\n\r\n        <h4>Elimeinar categoría</h4>\r\n\r\n  <form name=\"editCategory\"  onSubmit={handleRenameSubmit}>\r\n\r\n\r\n  <OptionList name=\"category\" onChange={(e) =>setEditingCategory(e.target.value)}>\r\n \r\n  {categories?.map(cat =>\r\n\r\n<Option key={cat?._id } value={cat?.name} >{cat?.name}</Option>\r\n\r\n  )}\r\n\r\n</OptionList>\r\n\r\n                  <DeleteButton onClick={handleDelete}>Eliminar</DeleteButton>\r\n     \r\n<hr></hr>\r\n\r\n\r\n                        <h4>Remombrar categoría</h4>\r\n\r\n  <Input placeholder={`Renombrar ${editingCategory}`} name=\"categoryNewName\"   />\r\n      {isRenameFormLoading  && <LoaderSpinner small />  }\r\n<LoadButton as=\"input\" type=\"submit\" value=\"Editar\"/>\r\n\r\n\r\n</form>\r\n\r\n        </FormCard>\r\n\r\n\r\n\r\n        <FormCard>\r\n          <h4>Crear una nueva categoría</h4>\r\n\r\n<form  name=\"createCategory\"  onSubmit={handleCreateSubmit}>\r\n\r\n  <Input    placeholder=\"Nueva categoría...\"    name=\"newCategory\"      />\r\n\r\n        {isCreateFormLoading  && <LoaderSpinner small />  }\r\n\r\n<LoadButton as=\"input\" type=\"submit\" value=\"Cargar\"/>\r\n\r\n</form>\r\n\r\n        </FormCard>\r\n\r\n      </Wrapper>\r\n    </CategoriesPage>\r\n  )\r\n}\r\nexport default withError(DashboardCategories)"],"sourceRoot":""}