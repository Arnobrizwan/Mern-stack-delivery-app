{"version":3,"sources":["components/Buttons.js","API/contactAPI.js","components/contact/ContactForm.js","hooks/useContactForm.js","API/signUpAPI.js","components/auth/SignUpForm.js","hooks/useSignUpForm.js","img/burger-icon.png","API/postProductAPI.js","img/tray.svg","components/dashboard/CreateNewProductForm.js","hooks/usePostNewProductForm.js"],"names":["Button","styled","a","props","theme","lightBoxShadow","darckYellow","small","black","ButtonPrimary","orange","contactAPI","info","e","POST","response","status","target","reset","console","log","StyledContact","article","FormSection","div","Form","form","InfoSection","TextInput","input","Textarea","textarea","ErrorMessage","ContactTitle","h2","ContactLink","Link","ContactForm","useForm","mode","data","preventDefault","userName","userEmail","userMessage","subject","register","handleSubmit","errors","formState","onSubmit","useContactForm","message","type","placeholder","name","ref","required","pattern","value","style","borderColor","meassage","maxLength","as","src","phoneIcone","alt","emailcone","setIsFormLoading","setServerError","history","json","redirect","id","localStorage","setItem","setTimeout","push","singUpAPI","FormCard","Logo","img","inputShadow","LoaderSpinner","ErrorServerMessage","FormLink","UserNameInput","defaultValue","data-testid","UserLastNameInput","userLastName","UserEmailInput","UserPasswordInput","autocomplete","minLength","UserNewPasswordInput","userNewPassword","SingupForm","useState","serverError","isFormLoading","useHistory","toLowerCase","lastName","email","password","userPassword","signUpAPI","useSignUpForm","burgerIcon","to","token","formData","setIsSuccessfullySend","setFormIsLoading","postProductAPI","StyledSection","section","FormTitle","CheckboxWrapper","ThisFormCard","ThisForm","attrs","ButtonsWrapper","LoadButton","ResetButton","Description","DropZone","OptionList","select","Option","option","CategoriesOptionsInput","categories","map","cat","_id","ProductNameInput","role","productName","ProductSizeInput","size","ProductDescriptionTextArea","description","ProductPriceInput","productPrice","ImageUploader","isNotRequired","productImg","FormButtons","ProductState","state","htmlFor","defaultChecked","UpdateNewProductForm","useStorage","formIsLoading","FormData","active","checked","price","parseInt","append","files","category","usePostNewProductForm","trayIcon"],"mappings":"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","file":"static/js/1.63957ee4.chunk.js","sourcesContent":["\r\nimport styled  from 'styled-components'\r\n\r\n   export  const Button= styled.a`\r\n     box-shadow: ${props => props.theme.lightBoxShadow};\r\npadding: 15px 40px;\r\ncolor:#fff;\r\nwidth:max-content;\r\n  background:${props => props.theme.darckYellow};\r\n  text-transform: uppercase;\r\n  text-align:center;\r\n  font-size: 16px;\r\n  font-family: \"Oswald\", sans-serif;\r\n  font-weight:600px;\r\n line-height:23.5px;\r\n  cursor:pointer;\r\n  letter-spacing:2px;\r\n  border-radius:4px;\r\n    text-decoration: none;\r\n\r\n    transform:'${(props)=>(props.small ? \"scale(0.7)\" : \"scale(1)\")}';\r\n  transition:all 0.5s ease;\r\n  &:hover{\r\n    background-color:${props => props.theme.black};\r\n  }\r\n  & > * {\r\n    cursor:pointer;\r\n  }\r\n    @media screen and (max-width: 550px){\r\n   transform:scale(0.8);\r\n`;\r\nexport const ButtonPrimary = styled(Button)`\r\n  background:${props => props.theme.orange};\r\n`;\r\n\r\n\r\n\r\n","import { POST } from \"../utils/http\";\r\n\r\nconst contactAPI = async ({ info, e }) => {\r\n  try {\r\n    const { response } = await POST(\"/api/contact\", info);\r\n\r\n    if (response.status === 200) {\r\n      e.target.reset();\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default contactAPI;\r\n","import styled  from 'styled-components'\r\nimport useContactForm from '../../hooks/useContactForm'\r\nimport SocilasMenu from '../SocialsMenu'\r\nimport {ButtonPrimary} from '../Buttons'\r\nimport phoneIcone from '../../img/phone-alt-solid.svg'\r\nimport emailcone from '../../img/envelope-regular.svg'\r\n\r\nimport {Link, Icone,ListItem,List} from  '../Footer'\r\n\r\n\r\n const StyledContact = styled.article`\r\nbox-sizing:border-box:\r\nmax-width:100%;\r\npadding:20px 0;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\n& > * {\r\npadding:10px  15px;\r\nheight:100%;\r\n}\r\n`;\r\nconst FormSection = styled.div`\r\nwidth:100%;\r\n  flex: 1 1 450px;\r\n\r\n  @media screen and (min-width: 550px){\r\n  padding:10px  32px ;\r\n\r\n  }\r\n\r\n`;\r\nconst Form = styled.form`\r\nwidth:100%;\r\nheight:100%;\r\ndisplay:flex;\r\nflex-flow:column;\r\n& > small {\r\n      margin: -10px auto 4px 0;\r\n}\r\n@media screen and (max-width: 550px){\r\n & >${ButtonPrimary}{\r\n        margin-left: auto;\r\n                margin-right: auto;\r\n  }\r\n}\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\ndisplay:flex;\r\nflex-flow:column;\r\njustify-content:space-evenly;\r\n  flex: 1 0 1;\r\n  min-height:460px;\r\n width: 40%;\r\n @media screen and (max-width:750px){\r\n    width: 100%;\r\n     padding:0  25px;\r\n       min-height:350px;\r\n }\r\n`;\r\nexport const TextInput= styled.input`\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n  }\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\nwidth:100%;\r\npadding: 12px 15px;\r\n`;\r\n\r\n;\r\nconst Textarea= styled.textarea`\r\n  &::resizer {\r\n  display: none;\r\n}\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n\r\n  }\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\npadding: 10px 15px;\r\n  min-height:250px;\r\n  max-height:250px;\r\n  margin-bottom:25px;\r\n  min-width:100%;\r\n  max-width:100%;\r\n\r\n`;\r\nexport const ErrorMessage = styled.small`\r\ncolor:#bf0000;\r\nmargin:-10px auto 4px 5%;\r\n    display: block;\r\n`;\r\nconst ContactTitle = styled.h2`\r\n\r\n @media screen and (min-width:750px){\r\n    margin-top: -40px;\r\n }\r\n`;\r\nconst ContactLink = styled(Link)`\r\ncolor:#000;\r\n`;\r\n\r\nexport default  function ContactForm() {\r\n\r\n    const {register,handleSubmit,errors,onSubmit}= useContactForm()\r\n\r\n  return(\r\n    <StyledContact>\r\n      <FormSection>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n           {errors.userName && <ErrorMessage>{errors.userName.message}</ErrorMessage>}\r\n          <  TextInput\r\n          type='text'\r\n          placeholder='Tu Nombre Completo...'\r\n          name=\"userName\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n\r\n              pattern:{\r\n                   value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü\\s\\w]+$/,\r\n                    message:'*Nombre no valido'\r\n                      }\r\n\r\n          })}\r\n                 style={{ borderColor: errors.userName && \"#bf0000\" }}\r\n          />\r\n                                {errors.userEmail && <ErrorMessage>{errors.userEmail.message}</ErrorMessage>}\r\n          <TextInput\r\n          type='email'\r\n          placeholder='Tu email...'\r\n          name=\"userEmail\"\r\n          ref={register({\r\n                                required: \"*El campo es requrido\",\r\n\r\n                      pattern:{\r\n                        value:/^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n                       meassage:'*Email no valido'\r\n                      }\r\n          })}\r\n           style={{ borderColor: errors.userEmail && \"#bf0000\" }}\r\n          />\r\n               {errors.subject && <ErrorMessage>{errors.subject.message}</ErrorMessage>}\r\n\r\n\r\n           <TextInput\r\n           type='text'\r\n          placeholder='Asunto...'\r\n          name=\"subject\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n\r\n          })}\r\n                 style={{ borderColor: errors.subject && \"#bf0000\" }}\r\n          />\r\n            {errors.userMessage && <ErrorMessage>{errors.userMessage.message}</ErrorMessage>}\r\n          <Textarea\r\n          placeholder='Tu mensaje...'\r\n          name=\"userMessage\"\r\n\r\n          ref={register({\r\n          required: '*El campo es requerido',\r\n           maxLength:{\r\n                        value:255,\r\n                         message:'*Tu mensaje no debe exceder los 255 carácteres'\r\n                      }\r\n          })}\r\n                 style={{ borderColor: errors.userMessage && \"#bf0000\" }}\r\n          />\r\n      <ButtonPrimary as=\"input\" type=\"submit\" value=\"Enviar mensaje\"/>\r\n        </Form>\r\n      </FormSection>\r\n      <InfoSection>\r\n\r\n        <ContactTitle>Contactenos</ContactTitle>\r\n         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan metus.\r\n           Ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan.\r\n         </p>\r\n          <List>\r\n<ListItem><Icone><img src={phoneIcone} alt=\"phone\"></img></Icone> <ContactLink>+66 396 847 2637</ContactLink></ListItem>\r\n<ListItem><Icone><img src={emailcone} alt=\"email\"></img></Icone> <ContactLink>Hello@Burger.Com</ContactLink></ListItem>\r\n  </List>\r\n  <SocilasMenu/>\r\n      </InfoSection>\r\n    </StyledContact>\r\n  );\r\n}","import { useForm } from \"react-hook-form\";\r\nimport contactAPI from \"../API/contactAPI.js\";\r\n\r\nexport default function useContactForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  async function onSubmit(data, e) {\r\n    e.preventDefault();\r\n\r\n    const info = {\r\n      userName: data.userName,\r\n      userEmail: data.userEmail,\r\n      userMessage: data.userMessage,\r\n      subject: data.subject,\r\n    };\r\n\r\n    await contactAPI({ info, e });\r\n  }\r\n\r\n  return { register, handleSubmit, errors, onSubmit };\r\n}\r\n","import { POST } from \"../utils/http\";\r\n\r\nasync function singUpAPI({\r\n  setIsFormLoading,\r\n  setServerError,\r\n\r\n  history,\r\n  info,\r\n}) {\r\n  try {\r\n    const { response, json } = await POST(\"/api/auth/signUp\", info);\r\n\r\n    setIsFormLoading(false);\r\n\r\n    if (response.status === 201 || 302) {\r\n      setServerError(\"\");\r\n\r\n      const { redirect, id } = json;\r\n\r\n      localStorage.setItem(\"toConfirmUser\", id);\r\n\r\n      setTimeout(() => {\r\n        return history.push(redirect);\r\n      }, 1000);\r\n    }\r\n\r\n    if (response.status === 400) {\r\n      setServerError(json.message);\r\n      return;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default singUpAPI;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\nimport useSignUpForm from \"../../hooks/useSignUpForm\";\r\nimport { ButtonPrimary } from \"../Buttons\";\r\nimport burgerIcon from \"../../img/burger-icon.png\";\r\nimport { TextInput, ErrorMessage } from \"../contact/ContactForm\";\r\nimport { LoaderSpinner } from \"../LoaderSpinner\";\r\n\r\nexport const FormCard = styled.article`\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);\r\n\r\n  margin: 30px auto;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  min-heght: 600px;\r\n  background: rgb(252, 175, 1);\r\n  background: linear-gradient(\r\n    218deg,\r\n    rgb(252 175 1 / 60%) 0%,\r\n    rgb(255 165 0 / 58%) 100%\r\n  );\r\n  box-box-shadow: 2px 2px 6px #000;\r\n\r\n  @media screen and (max-width: 400px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const Logo = styled.img`\r\n  width: 120px;\r\n  margin-bottom: 20px;\r\n  height: auto;\r\n`;\r\nexport const Form = styled.form`\r\n  width: 90%;\r\n  margin-left: -10px;\r\n  padding-bottom: 25px;\r\n  display: flex;\r\n  margin: 0 auto;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  & > input {\r\n    width: 90%;\r\n    margin-bottom: 15px;\r\n    border: none;\r\n    box-shadow: ${(props) => props.theme.inputShadow};\r\n  }\r\n\r\n  & > ${LoaderSpinner} {\r\n    margin-bottom: 10px;\r\n  }\r\n  & > input:focus,\r\n  & > textarea:focus {\r\n    outline: 2px solid ${(props) => props.theme.darckYellow};\r\n    outline-style: auto;\r\n  }\r\n  & > input[type=\"submit\"] {\r\n    box-shadow: none;\r\n    outline: none;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    width: 90%;\r\n    & > input {\r\n      width: 95%;\r\n    }\r\n  }\r\n`;\r\nexport const ErrorServerMessage = styled(ErrorMessage)`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  margin: 5px 0 15px;\r\n`;\r\nexport const FormLink = styled(Link)`\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  transition: all 0.5s esea;\r\n  color: ${(props) => props.theme.black};\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\nexport function UserNameInput({ register, errors, defaultValue }) {\r\n  return (\r\n    <Fragment>\r\n      {errors.userName && (\r\n        <ErrorMessage>{errors.userName.message}</ErrorMessage>\r\n      )}\r\n      <TextInput\r\n        placeholder=\"Tu nombre...\"\r\n        name=\"userName\"\r\n        type=\"text\"\r\n        defaultValue={defaultValue || \"\"}\r\n        data-testid=\"nameInput\"\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n          pattern: {\r\n            value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü]+$/,\r\n            message: \"*Nombre no valido\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors.userName && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserLastNameInput({ register, errors, defaultValue }) {\r\n  return (\r\n    <Fragment>\r\n      {errors.userLastName && (\r\n        <ErrorMessage>{errors.userLastName.message}</ErrorMessage>\r\n      )}\r\n      <TextInput\r\n        type=\"text\"\r\n        placeholder=\"Tu apellido ...\"\r\n        data-testid=\"lastNameInput\"\r\n        defaultValue={defaultValue || \"\"}\r\n        name=\"userLastName\"\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n          pattern: {\r\n            value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü]+$/,\r\n            message: \"*Apellido no valido\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors.userLastName && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserEmailInput({ register, errors }) {\r\n  return (\r\n    <Fragment>\r\n      {errors.userEmail && (\r\n        <ErrorMessage>{errors.userEmail.message}</ErrorMessage>\r\n      )}\r\n      <TextInput\r\n        type=\"email\"\r\n        placeholder=\"Tu email...\"\r\n        name=\"userEmail\"\r\n        data-testid=\"emailInput\"\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n\r\n          pattern: {\r\n            value:\r\n              /^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n            message: \"*Email no valido\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors.userEmail && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserPasswordInput({\r\n  register,\r\n  errors,\r\n  placeholder,\r\n  name = \"userPassword\",\r\n}) {\r\n  return (\r\n    <Fragment>\r\n      {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\r\n\r\n      <TextInput\r\n        placeholder={placeholder}\r\n        type=\"password\"\r\n        name={name}\r\n        data-testid=\"passwordInput\"\r\n        autocomplete={false}\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n          minLength: {\r\n            value: 5,\r\n            message: \"*El largo mínimo es de 5 carácteres\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors[name] && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserNewPasswordInput({ register, errors, placeholder }) {\r\n  return (\r\n    <Fragment>\r\n      {errors.userNewPassword && (\r\n        <ErrorMessage>{errors.userNewPassword.message}</ErrorMessage>\r\n      )}\r\n\r\n      <TextInput\r\n        placeholder={placeholder}\r\n        type=\"password\"\r\n        name=\"userNewPassword\"\r\n        ref={register({\r\n          required: \"*El campo es requrido\",\r\n          minLength: {\r\n            value: 5,\r\n            message: \"*El largo mínimo es de 5 carácteres\",\r\n          },\r\n        })}\r\n        style={{ borderColor: errors.userNewPassword && \"#bf0000\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport default function SingupForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    onSubmit,\r\n    isFormLoading,\r\n    serverError,\r\n  } = useSignUpForm();\r\n  return (\r\n    <FormCard>\r\n      <Logo src={burgerIcon} alt=\"LogoBrand\"></Logo>\r\n      <Form data-testid=\"singUpForm\" onSubmit={handleSubmit(onSubmit)}>\r\n        <UserNameInput errors={errors} register={register} />\r\n        <UserLastNameInput errors={errors} register={register} />\r\n        <UserEmailInput errors={errors} register={register} />\r\n        <UserPasswordInput\r\n          errors={errors}\r\n          register={register}\r\n          placeholder=\"Tu contraseña...\"\r\n        />\r\n\r\n        <ErrorServerMessage>{serverError}</ErrorServerMessage>\r\n\r\n        <FormLink to=\"/authentication/login\">\r\n          ¿Ya tienes una cuenta? <b>Login</b>{\" \"}\r\n        </FormLink>\r\n        <ButtonPrimary as=\"input\" type=\"submit\" value=\"Sing Up\" />\r\n        {isFormLoading && <LoaderSpinner data-testid=\"spinner\" small />}\r\n      </Form>\r\n    </FormCard>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport signUpAPI from \"../API/signUpAPI\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useSingupForm() {\r\n  const [serverError, setServerError] = useState(\"\");\r\n  const [isFormLoading, setIsFormLoading] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  async function onSubmit(data, e) {\r\n    e.preventDefault();\r\n\r\n    await setIsFormLoading(true);\r\n\r\n    const info = {\r\n      name: data.userName.toLowerCase(),\r\n      lastName: data.userLastName.toLowerCase(),\r\n      email: data.userEmail,\r\n      password: data.userPassword,\r\n    };\r\n\r\n    await signUpAPI({\r\n      setServerError,\r\n      info,\r\n      history,\r\n      setIsFormLoading,\r\n    });\r\n  }\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    onSubmit,\r\n    serverError,\r\n    isFormLoading,\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/burger-icon.4ba9750a.png\";","import { POST } from \"../utils/http\";\r\nasync function postProductAPI({\r\n  token,\r\n  e,\r\n  formData,\r\n  setIsSuccessfullySend,\r\n  setFormIsLoading,\r\n}) {\r\n  try {\r\n    const { response } = await POST(\r\n      \"/api/products\",\r\n      formData,\r\n      token,\r\n      \"formData\"\r\n    );\r\n    setFormIsLoading(false);\r\n    if (response.status === 201) {\r\n      setIsSuccessfullySend(true);\r\n      e.target.reset();\r\n\r\n      setTimeout(() => {\r\n        setIsSuccessfullySend(false);\r\n      }, 2000);\r\n      return;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default postProductAPI;\r\n","export default __webpack_public_path__ + \"static/media/tray.fe877925.svg\";","import styled  from 'styled-components'\r\nimport usePostNewProductForm from '../../hooks/usePostNewProductForm'\r\nimport {Fragment } from 'react'\r\nimport {LoaderSpinner} from './../LoaderSpinner'\r\nimport {ErrorMessage} from '../contact/ContactForm';\r\nimport trayIcon from '../../img/tray.svg';\r\nimport {FormCard,Form,Logo} from '../auth/SignUpForm'\r\nimport {ButtonPrimary,Button} from '../Buttons'\r\n\r\n\r\n export const StyledSection = styled.section`\r\nposition:relative;\r\nmin-height:100vh;\r\nwidth:100vw;\r\nmargin: 0 0 40px;\r\nbackground-size: 100%  100%;\r\n`;\r\nexport const FormTitle= styled.h2`\r\n\r\ntext-transform: uppercase;\r\n\r\n}\r\nfont-size: 25px;\r\n\r\nmargin-bottom: 20px;\r\nmargin-top: -10px;\r\n@media screen and (min-width:760px){\r\n\r\n  font-size: 45px;\r\n}\r\n`;\r\nexport  const CheckboxWrapper = styled.div`\r\ndisplay:flex;\r\nmargin: 10px auto;\r\nalign-items:center;\r\n&> input{\r\ntransform: scale(1.5);\r\nmargin: 5px 10px 0;\r\n    cursor: pointer;\r\n}\r\n\r\n& > small {\r\n  margin-left: 5%;\r\n}\r\n& > input[type=\"file\"]{\r\n  width:50%;\r\n}\r\n& > label{\r\nfont-weight:600;\r\nfont-size:20px;\r\n}\r\n`;\r\nexport const ThisFormCard = styled(FormCard)`\r\nwidth:100%;\r\nmax-width:900px;\r\nmargin: 0 auto;\r\nbackground:#fff;\r\nbox-shadow:none;\r\n`\r\nexport const  ThisForm = styled(Form)`\r\nmax-width:95%;\r\nwidth:95%;\r\nmargin: 0 auto;\r\n& > input {\r\n  background :#f0f0f0;\r\n\r\n}\r\n\r\n& > input:focus, & > textarea:focus{\r\n  outline: 2px solid #ccc;\r\n    outline-style: auto;\r\n}\r\n`\r\n export const TextInput= styled.input.attrs(props => ({\r\n  type: 'text',\r\n\r\n\r\n}))`\r\n\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   font-size: 16px;\r\n   letter-spacing: 1px;\r\n  }\r\nbackground:#f0f0f0;\r\nborder:none;\r\n  border-radius:5px;\r\n  outline:none;\r\n   margin-bottom:15px;\r\n  width:95%;\r\npadding: 12px 15px;\r\n\r\n`;\r\nexport const ButtonsWrapper = styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\nwidth:100%;\r\n@media screen and (max-width:450px){\r\n  & >input {\r\n transform:scale(0.8);\r\n  }\r\n}\r\n`;\r\nexport const LoadButton = styled(ButtonPrimary)`\r\ntransform:scale(0.9);\r\n`\r\nexport const ResetButton = styled(Button)\r\n`\r\n  box-shadow: 0 0 4px rgba(0,0,0,0.5);\r\ntransform:scale(0.9);\r\noutline:none;\r\nborder:none;\r\n`\r\n export const Description =styled.textarea`\r\nmax-width: 90%;\r\n    width: 90%;\r\n  border:none;\r\n  outline:none;\r\nbox-shadow: inset 1px 1px 6px 0px #ccc;\r\npadding: 12px 10px 12px 20px;\r\nmin-height: 200px;\r\nmax-height: 200px;\r\nborder:none;\r\nbackground:#f0f0f0;\r\nborder-radius: 5px;\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   font-size: 17px;\r\n   letter-spacing: 1px;\r\n  }\r\n@media screen and (max-width: 500px) {\r\n  min-width: 95%;\r\n}\r\n`\r\n export const DropZone = styled.input`\r\n  box-shadow: 0 0 4px rgba(0,0,0,0.5);\r\n  position:relative;\r\nmax-width: 50%;\r\nmin-width: 200px;\r\n  height: 45px;\r\n  display: inline-block;\r\n  margin:25px auto;\r\n  cursor:pointer;\r\n  outline:none;\r\ntransition: all 0.5s ease;\r\n  &:before{\r\n     background-color: ${props => props.theme.black};\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size:17px;\r\n  font-weight:600;\r\n  align-items: center;\r\n  border-radius: 3px;\r\n  content: 'Seleccionar Imagen';\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n\r\n  }\r\n    &:hover{\r\n      transform:scale(1.05);\r\n    }\r\n  `;\r\n\r\nexport const OptionList = styled.select`\r\n    color: rgb(0 0 0 / 50%);\r\n    padding: 10px;\r\n    width: 90%;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    margin: 0;\r\n    border: none;\r\n    margin-bottom: 20px;\r\n    background: #f3f3f3;\r\n box-shadow: ${props => props.theme.inputShadow};\r\n    text-transform: capitalize;\r\n@media screen and (max-width: 500px) {\r\n  min-width: 95%;\r\n}\r\n`\r\nexport const Option = styled.option`\r\n&:checked{\r\n   background: #fcba1c;\r\n}\r\n`\r\nexport  function CategoriesOptionsInput({register,categories,defaultValue}){\r\n\r\nreturn(\r\n\r\n\r\n<OptionList\r\nname=\"category\"\r\nvalue={defaultValue || categories[0]}\r\n          ref={register({\r\n       required: '*El campo es requrido',\r\n\r\n          })}\r\n>\r\n  {categories?.map(cat =>\r\n\r\n<Option key={cat?._id } value={cat?.name} >{cat?.name}</Option>\r\n\r\n  )}\r\n\r\n</OptionList>\r\n\r\n);\r\n\r\n}\r\nexport function ProductNameInput({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n        {errors.name && <ErrorMessage  role=\"alert\">{errors.name.message}</ErrorMessage>}\r\n\r\n <TextInput\r\n style={{ borderColor: errors.productName && \"#bf0000\" }  }\r\n          placeholder=\"Nombre...\"\r\n    data-testid=\"name\"\r\n      defaultValue={defaultValue || \"\"}\r\n                       name=\"name\"\r\n          ref={register({\r\n             required: '*El campo es requrido',\r\n\r\n          })}\r\n          />\r\n\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport function ProductSizeInput({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n          {errors.size && <ErrorMessage  role=\"alert\">{errors.size.message}</ErrorMessage>}\r\n          <TextInput\r\n           style={{ borderColor: errors.size && \"#bf0000\" }  }\r\n          placeholder=\"Cantidad/Tamaño...\"\r\n                 data-testid=\"size\"\r\n                name='size'\r\n                defaultValue={defaultValue || \"\"}\r\n          ref={register({\r\n              required:'*El campo es requerido' ,\r\n             pattern:{\r\n               value: /^(?:[0-9]+\\s\\w+[a-z]|[a-z]+[0-9])[a-z0-9]*$/i,\r\n              message:'*Se require de un valor y unidad'\r\n             }\r\n          })}\r\n          />\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport function ProductDescriptionTextArea({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n           {errors.description && <ErrorMessage  role=\"alert\">{errors.description.message}</ErrorMessage>}\r\n      <Description\r\n      placeholder=\"Descripción...\"\r\n       style={{ borderColor: errors.description && \"#bf0000\" }  }\r\n     defaultValue={defaultValue || \"\"}\r\n                      name=\"description\"\r\n              data-testid=\"description\"\r\n          ref={register({\r\n      required:'*El campo es requerido' ,\r\n\r\n          })}\r\n      >\r\n\r\n      </Description>\r\n    </Fragment>\r\n  );\r\n\r\n}\r\nexport function ProductPriceInput({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n         {errors.productPrice && <ErrorMessage  role=\"alert\">{errors.productPrice.message}</ErrorMessage>}\r\n\r\n\r\n             <TextInput placeholder=\"Precio...\"\r\n           style={{ borderColor: errors.productPrice && \"#bf0000\" }  }\r\n                 name=\"price\"\r\n                     data-testid=\"price\"\r\n           defaultValue={defaultValue || \"\"}\r\n                  ref={register({\r\n                    required:'*El campo es requerido' ,\r\n                  pattern:{\r\n               value:  /\\d+/,\r\n               message:'*Se admiten solo números'\r\n               }\r\n                  })}\r\n\r\n\r\n\r\n\r\n          />\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n export function ImageUploader({register,errors,isNotRequired}){\r\n\r\n  return(\r\n    <Fragment>\r\n      {errors.productImg && <ErrorMessage  role=\"alert\">*El Campo es requerido</ErrorMessage>}\r\n\r\n          <DropZone id=\"imgInput\" type=\"file\" name=\"img\"    ref={register({\r\n             required: (isNotRequired) ? false:true,\r\n\r\n          })}></DropZone>\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\nexport function FormButtons(){\r\n    return(\r\n          <ButtonsWrapper >\r\n<LoadButton as=\"input\" type=\"submit\" value=\"Cargar\"/>\r\n<ResetButton as=\"input\" type=\"reset\" value=\"Abortar\"/>\r\n          </ButtonsWrapper>\r\n    )\r\n  }\r\nexport function ProductState(props){\r\n\r\n  let state = props?.state || false\r\n\r\n   return(\r\n          <CheckboxWrapper >\r\n<label htmlFor=\"state\">Publicar:</label>\r\n<input\r\nid=\"state\" type=\"checkbox\" defaultChecked={state} name=\"state\" />\r\n          </CheckboxWrapper>\r\n    )\r\n  }\r\nexport default  function UpdateNewProductForm() {\r\n\r\n\r\n\r\n   const  {register,handleSubmit,errors,onSubmit,formIsLoading,categories} =   usePostNewProductForm()\r\n\r\n  return(\r\n    <StyledSection>\r\n\r\n      <ThisFormCard>\r\n  <Logo src = {trayIcon} alt=\"new-product\"></Logo>\r\n        <ThisForm id='productsFactory' name='productsFactory' onSubmit={handleSubmit(onSubmit)}>\r\n             <FormTitle>Cargar nuevos productos</FormTitle>\r\n\r\n  <ProductNameInput register={register} errors={errors}/>\r\n\r\n\r\n\r\n\r\n<ProductSizeInput register={register} errors={errors}/>\r\n\r\n<ProductPriceInput register={register} errors={errors}/>\r\n  <CategoriesOptionsInput register={register} errors={errors} categories={categories}/>\r\n<ProductDescriptionTextArea register={register} errors={errors}  />\r\n\r\n<ProductState state=\"checked\"/>\r\n\r\n\r\n\r\n      <ImageUploader  register={register} errors={errors}/>\r\n   {formIsLoading  &&  <LoaderSpinner small  data-testid='spinner'/> }\r\n <FormButtons/>\r\n\r\n\r\n        </ThisForm>\r\n      </ThisFormCard>\r\n    </StyledSection>\r\n  );\r\n}","import {useForm} from 'react-hook-form'\r\nimport {useState} from 'react'\r\nimport postProductAPI from '../API/postProductAPI'\r\nimport {useStorage} from '../context/useStorage'\r\n\r\n\r\n\r\nexport default function usePostNewProductForm(){\r\n\r\n const {token,setIsSuccessfullySend,categories} = useStorage()\r\n \r\n  const [formIsLoading,setFormIsLoading] = useState(false);\r\n\r\nconst { register, handleSubmit, formState: { errors } } = useForm({\r\n  mode: \"onBlur\",\r\n});\r\n    \r\n const onSubmit =  async(data,e) =>{\r\nsetFormIsLoading(true)\r\n        e.preventDefault()\r\n\r\nconst formData = new FormData()\r\nlet active =  e.target.state.checked ? true : false ;\r\nlet price =parseInt(e.target.price.value)\r\n        formData.append('img', e.target.img?.files[0])\r\n        formData.append('name', e.target.name.value)\r\n        formData.append('category', e.target.category.value)\r\n        formData.append('size', e.target.size.value)\r\n        formData.append('description', e.target.description.value)\r\n        formData.append('price', price)\r\n        formData.append('active', active)\r\n\r\n\r\n     await   postProductAPI({token,e,formData,setIsSuccessfullySend,setFormIsLoading})\r\n\r\n\r\n  }\r\nreturn   {register,handleSubmit,errors,onSubmit,formIsLoading,categories}\r\n}"],"sourceRoot":""}