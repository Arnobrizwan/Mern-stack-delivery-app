{"version":3,"sources":["components/OrdersTableSkeleton.js","img/refresh.svg","API/deleteOrderAPI.js","components/account/UserOrdersPage.js","hooks/useUserOrdersPage.js","components/FilterOrderStateOptions.js","components/SortOrdersOptions.js","components/dashboard/DashboardOrders.js","hooks/useDashboardOrders.js","API/updateCategoryNameAPI.js","API/deleteCategoryAPI.js","API/createCategoryAPI.js","hooks/useDashboardCategories.js","components/dashboard/DashboardCategories.js"],"names":["Table","styled","div","TableHeader","TableCells","OrdersTableSkeleton","a","token","id","DELETE","console","log","deleteOrderAPI","Page","main","props","theme","lightYellow","isLoading","LoaderSpinner","TableHead","thead","black","darckYellow","TableWrapper","OrdersTable","table","lihgtBoxShadow","CancelOrderButton","button","disabled","NotFounMessage","ButtonPrimary","NotFounIcone","h2","RefreshButton","RefreshIcone","img","UserOrdersPage","setNotification","history","useHistory","useStorage","setIsLoading","currentUser","deleteOrder","e","stopPropagation","target","setIsLoadingPage","handleRefresh","query","URLSearchParams","useState","page","setPage","maxPage","setMaxPage","orders","setOrders","isFirstRender","setIsFirstRender","refreshCount","setRefreshCount","append","useEffect","controller","AbortController","signal","headers","Headers","setting","method","fetch","_id","res","json","data","total","parseInt","Math","ceil","document","querySelector","scrollTo","name","ordersAPI","abort","Date","now","seeDetails","orderID","push","useUserOrdersPage","light","onClick","src","refreshIcone","title","length","small","as","Link","to","map","order","states","date","toLocaleString","split","client","address","reverse","find","state","confirmed","PaginationButtons","FilterOrdersStateOptions","setStatePreferece","defaultValue","onChange","preventDefault","value","handelChange","SortOrdersOptions","setSortPreferece","section","NotFaundMessage","FiltersBoard","DashboardOrders","location","useLocation","search","oldQuery","setOrderID","setState","sorting","setSorting","toString","useDashboardOrders","DashboardNav","placeholder","setSearch","data-testid","categorySelectId","info","setIsRenameFormLoading","setIsSuccessfullySend","setAllCategories","PUT","response","status","getCategoriesAPI","setTimeout","deleteCategoryAPI","alert","setIsCreateFormLoading","POST","newCategory","createCategoryAPI","useCategoriesForms","categories","editingCategory","setEditingCategory","isRenameFormLoading","isCreateFormLoading","setCategorySelectId","categoryId","category","handleDelete","window","confirm","handleRenameSubmit","categoryNewName","trim","updateCategoryNameAPI","handleCreateSubmit","CategoriesPage","Input","TextInput","inputBoxShadow","Wrapper","FormCard","article","lightBoxShadow","DeleteButton","orange","withError","useDashboardCategories","onSubmit","cat","type"],"mappings":"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","file":"static/js/16.8b741019.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Table = styled.div`\r\n  width: 100%;\r\n  max-width: 900px;\r\n  margin: 20px auto 0;\r\n  background: gray;\r\n  box-shadow: 1px 1px 5px #00000057;\r\n  background: #f3f3f3;\r\n`;\r\nconst TableHeader = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  background: #ccc;\r\n  box-shadow: 1px 1px 5px #00000057;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\nconst TableCells = styled.div`\r\nwith:100%;\r\nheight:50px;\r\nbackground:white;\r\nmargin: 1px 0;\r\nbackground:#fff;\r\nborder-bottom:1px solid #ccc;\r\nbox-shadow: 0 1px 3px #ccc;\r\n\r\n\r\n}\r\n`;\r\n\r\nexport default function OrdersTableSkeleton() {\r\n  return (\r\n    <Table>\r\n      <TableHeader />\r\n      <TableCells />\r\n      <TableCells />\r\n      <TableCells />\r\n      <TableCells />\r\n      <TableCells />\r\n    </Table>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/refresh.f1c42ba5.svg\";","import { DELETE } from \"../utils/http\";\r\nasync function deleteOrderAPI({ token, id }) {\r\n  try {\r\n    await DELETE(`/api/orders/${id}`, token);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default deleteOrderAPI;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useUserOrdersPage from \"../../hooks/useUserOrdersPage\";\r\nimport { ButtonPrimary } from \"../Buttons\";\r\nimport { SectionTitle } from \"../menu/Menu\";\r\nimport PaginationButtons from \"../PaginationButtons\";\r\nimport OrdersTableSkeleton from \"../OrdersTableSkeleton\";\r\nimport refreshIcone from \"../../img/refresh.svg\";\r\nimport { LoaderSpinner } from \"../LoaderSpinner\";\r\n\r\nconst Page = styled.main`\r\n  padding: 65px 5px;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  background: ${(props) => props.theme.lightYellow};\r\n  &:before {\r\n    display: ${(props) => (props.isLoading ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    content: \" \";\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: #ffffff57;\r\n    z-index: 400;\r\n  }\r\n  & > ${LoaderSpinner} {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    z-index: 500;\r\n    margin: -60px 0 0 -60px;\r\n  }\r\n`;\r\nexport const TableHead = styled.thead`\r\n  background-color: ${(props) => props.theme.black};\r\n  color: ${(props) => props.theme.darckYellow};\r\n  & > tr th {\r\n    padding: 10px 0;\r\n    font-family: \"Oswald\", sans-serif;\r\n    font-size: 19px;\r\n  }\r\n`;\r\nexport const TableWrapper = styled.div`\r\n  max-width: 900px;\r\n  margin: 0 auto 40px;\r\n  overflow-x: scroll;\r\n`;\r\nexport const OrdersTable = styled.table`\r\n  width: 900px;\r\n  margin: 20px auto 0;\r\n  border-spacing: 10px;\r\n  border-collapse: collapse;\r\n  border: 2px solid ${(props) => props.theme.black};\r\n  box-shadow: ${(props) => props.theme.lihgtBoxShadow};\r\n  text-transform: capitalize;\r\n  & > tbody {\r\n    background: #fff;\r\n  }\r\n  & > tbody td span + span {\r\n    margin-right: 5px;\r\n  }\r\n  & > tbody td {\r\n    padding: 10px 0;\r\n    cursor: pointer;\r\n  }\r\n  & > tbody tr {\r\n    border-bottom: 1px solid;\r\n  }\r\n`;\r\n\r\nconst CancelOrderButton = styled.button`\r\n  padding: 8px 5px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  margin: 5px;\r\n  border-radius: 10px 5px;\r\n  border: none;\r\n  font-family: \"Oswald\", sans-serif;\r\n  transition: all 0.5s;\r\n  opacity: ${(props) => (props.disabled ? \"0.4\" : \"1\")};\r\n  &:hover {\r\n    background: ${(props) => (props.disabled ? \"unset\" : \"#cdc8c8\")};\r\n  }\r\n`;\r\nconst NotFounMessage = styled.div`\r\n  padding: 30px 0;\r\n  & > h3 {\r\n    margin-bottom: 40px;\r\n  }\r\n  @media screen and (max-width: 450px) {\r\n    font-size: 25px;\r\n  }\r\n  & > ${ButtonPrimary} {\r\n    padding: 15px 30px;\r\n  }\r\n`;\r\nconst NotFounIcone = styled.h2`\r\n  font-size: 50px;\r\n`;\r\nexport const RefreshButton = styled.div`\r\n  cursor: pointer;\r\n  padding: 0 10px;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  height: 40px;\r\n  box-shadow: ${(props) => props.theme.lihgtBoxShadow};\r\n  background: ${(props) => props.theme.black};\r\n\r\n  margin: -46px 0 10px auto;\r\n  width: max-content;\r\n  display: flex;\r\n  transform: scale(0.7);\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    transform: scale(0.75);\r\n  }\r\n`;\r\n\r\nexport const RefreshIcone = styled.img`\r\n  height: 50%;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default function UserOrdersPage({ setNotification }) {\r\n  const {\r\n    seeDetails,\r\n    handleRefresh,\r\n    setPage,\r\n    page,\r\n    isLoading,\r\n    maxPage,\r\n    orders,\r\n    isFirstRender,\r\n    deleteOrder,\r\n  } = useUserOrdersPage({ setNotification });\r\n\r\n  return (\r\n    <Page isLoading={isLoading}>\r\n      {isLoading ? <LoaderSpinner /> : null}\r\n\r\n      <SectionTitle light>Mis Pedidos</SectionTitle>\r\n\r\n      <RefreshButton onClick={() => handleRefresh()}>\r\n        <RefreshIcone\r\n          onClick={() => handleRefresh()}\r\n          src={refreshIcone}\r\n          title=\"Refrescar Página\"\r\n        />\r\n      </RefreshButton>\r\n\r\n      {isLoading && isFirstRender && <OrdersTableSkeleton />}\r\n\r\n      {!isLoading && !isFirstRender && orders?.length === 0 && (\r\n        <NotFounMessage>\r\n          <NotFounIcone>👩🏻&zwj;🍳</NotFounIcone>\r\n          <h3>Ningún pedido realizado, tienes hambre?</h3>\r\n\r\n          <ButtonPrimary small as={Link} to=\"/menu\">\r\n            Ver Menú\r\n          </ButtonPrimary>\r\n        </NotFounMessage>\r\n      )}\r\n\r\n      {orders?.length !== 0 && (\r\n        <TableWrapper>\r\n          <OrdersTable>\r\n            <TableHead>\r\n              <tr>\r\n                <th>Nº de Pedido</th>\r\n                <th>Fecha</th>\r\n                <th>Dirección</th>\r\n                <th>Total</th>\r\n                <th>Estado</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </TableHead>\r\n            <tbody>\r\n              {orders?.map((order) => (\r\n                <tr key={order?._id} onClick={(e) => seeDetails(order._id)}>\r\n                  <td>{order?.orderID}</td>\r\n                  <td>\r\n                    <span>\r\n                      {\r\n                        new Date(order?.states[0].date)\r\n                          .toLocaleString()\r\n                          ?.split(\" \")[0]\r\n                      }\r\n                    </span>\r\n                    <br></br>\r\n                    <span>\r\n                      {\r\n                        new Date(order?.states[0].date)\r\n                          .toLocaleString()\r\n                          ?.split(\" \")[1]\r\n                      }\r\n                    </span>\r\n                  </td>\r\n                  <td>{order.client[0].address}</td>\r\n                  <td>${order?.total}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <b>\r\n                      {\r\n                        [...order?.states]\r\n                          .reverse()\r\n                          .find((state) => state.confirmed === true).name\r\n                      }\r\n                    </b>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <CancelOrderButton\r\n                      disabled={\r\n                        order?.states[1].confirmed === true ? true : false\r\n                      }\r\n                      onClick={(e) => deleteOrder(e, order._id)}\r\n                    >\r\n                      Cancelar Pedido\r\n                    </CancelOrderButton>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </OrdersTable>\r\n        </TableWrapper>\r\n      )}\r\n\r\n      <PaginationButtons setPage={setPage} page={page} maxPage={maxPage} />\r\n    </Page>\r\n  );\r\n}\r\n","import {useHistory} from 'react-router-dom'\r\nimport {useState, useEffect } from 'react'\r\nimport {useStorage} from '../context/useStorage'\r\nimport deleteOrderAPI from '../API/deleteOrderAPI'\r\n\r\nexport default function useUserOrdersPage({setNotification}){\r\n\r\nconst history = useHistory()\r\nconst {token,setIsLoading,currentUser} = useStorage()\r\n\r\n\r\n////redirects to order details page with order id as url parameter\r\n\r\nconst seeDetails = (orderID) =>{\r\nsetIsLoading(true)\r\n history.push(`/myAccount/myOrders/${orderID}` )\r\n}\r\nconst deleteOrder = async(e,id) =>{\r\n e.stopPropagation();\r\n\r\nif (!e.target.disabled ){\r\n\r\nsetIsLoadingPage(true)\r\nawait deleteOrderAPI({token,id})\r\nhandleRefresh()\r\n\r\n\r\n}\r\n}\r\n\r\n  let query = new URLSearchParams();\r\n    let sizeLimit = 5\r\n\r\n  const[isLoading,setIsLoadingPage] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [maxPage, setMaxPage] = useState(1)\r\n    const [orders, setOrders] = useState([])\r\nconst [isFirstRender, setIsFirstRender] = useState(true)\r\nlet [refreshCount,setRefreshCount] = useState(0)\r\n\r\n///add  search params to the url query\r\n\r\n   query.append('page',page)\r\n   query.append('limit',sizeLimit)\r\n   query.append('sort',\"-createdAt\")\r\n\r\n\r\n////get all user orders\r\n\r\nuseEffect(() => {\r\n     setNotification(0)\r\n  const controller = new AbortController()\r\n const signal = controller.signal\r\n\r\nconst ordersAPI = async () =>{\r\n    setIsLoadingPage(true)\r\n\r\n  try{\r\n\r\n\r\n       const headers = new Headers();\r\n      headers.append('Accept', 'application/json');\r\n      headers.append('Authorization', `Bearer ${token}`);\r\n\r\n\r\n    const setting = {\r\n          method: 'GET',\r\n          headers: headers,\r\nsignal,\r\n        }\r\n\r\n     let res = await fetch(`/api/orders/user/${currentUser._id}?${query}`,setting)\r\n     let json = await res.json()\r\n\r\n    setOrders(json.data)\r\n\r\n    let total = parseInt(json.total)\r\n\r\n     setMaxPage(Math.ceil(total/sizeLimit))\r\n\r\n\r\ndocument.querySelector('body').scrollTo(0,60)\r\n        setIsFirstRender(false)\r\n     setIsLoadingPage(false)\r\n\r\n  }catch(err){\r\n    if(err.name === 'AbortError'){\r\n   console.log('Fetch Canseled: caught abort')\r\n }else{\r\n\r\n     console.log(err)\r\n\r\n  }\r\n}\r\n  }\r\n\r\n  ordersAPI()\r\n\r\n     return () =>{\r\n     controller.abort()\r\n   }\r\n\r\n },[page,refreshCount])\r\n\r\n\r\n\r\n const handleRefresh = () =>{\r\n\r\nsetRefreshCount( Date.now())\r\nsetPage(1)\r\n}\r\n\r\nreturn {seeDetails,handleRefresh,setPage,page,isLoading,maxPage,orders,isFirstRender,deleteOrder}\r\n\r\n}","\r\nimport {Option,OptionList} from './SortProductsOptions'\r\n\r\nexport default function FilterOrdersStateOptions({setStatePreferece,setPage,defaultValue}){\r\n\r\n  const handelChange = (e) =>{\r\n e.preventDefault()\r\n     setPage(1)\r\n setStatePreferece(e.target.value)\r\n}\r\n\r\nreturn(\r\n<OptionList defaultValue={defaultValue}  name=\"filterOrdersByState\" onChange={(e) =>handelChange(e)}>\r\n<Option value=\"all\" >Todos</Option>\r\n<Option value=\"finish\" >Liquidados</Option>\r\n<Option value=\"unfinish\" >Pendientes</Option>\r\n</OptionList>\r\n\r\n);\r\n\r\n}","\r\nimport {Option,OptionList} from './SortProductsOptions'\r\n\r\nexport default function SortOrdersOptions({setSortPreferece,defaultValue}){\r\n\r\n\r\nreturn(\r\n<OptionList  defaultValue={defaultValue} name=\"sortProductBy\" onChange={(e) => setSortPreferece(e.target.value)}>\r\n<Option value=\"-createdAt\" >Más recientes</Option>\r\n<Option value=\"createdAt\" >Más antiguos</Option>\r\n<Option value=\"total\" >Menor Monto</Option>\r\n<Option value=\"-total\">Mayor Monto</Option>\r\n\r\n</OptionList>\r\n\r\n);\r\n\r\n}","import styled from \"styled-components\";\r\nimport useDashboardOrders from \"../../hooks/useDashboardOrders\";\r\nimport DashboardNav from \"../DashboardNav\";\r\nimport refreshIcone from \"../../img/refresh.svg\";\r\nimport SearchBar from \"../MenuSearchBar\";\r\nimport {\r\n  RefreshButton,\r\n  RefreshIcone,\r\n  TableWrapper,\r\n} from \"../account/UserOrdersPage\";\r\nimport { LoaderSpinner } from \"./../LoaderSpinner\";\r\nimport { NotFaundMessage } from \"../menu/ProductsSection\";\r\nimport { SectionTitle } from \"../menu/Menu\";\r\nimport { FiltersBoard } from \"./DashboardProducts\";\r\nimport FilterOrderStateOptions from \"./../FilterOrderStateOptions\";\r\nimport SortOrdersOptions from \"./../SortOrdersOptions\";\r\nimport PaginationButtons from \"../PaginationButtons\";\r\nimport OrdersTableSkeleton from \"../OrdersTableSkeleton\";\r\n\r\nexport const Page = styled.section`\r\n  padding: 60px 05px;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  max-width: 1250px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  &:before {\r\n    display: ${(props) => (props.isLoading ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    content: \" \";\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: #ffffff57;\r\n    z-index: 400;\r\n  }\r\n  & > ${LoaderSpinner} {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    z-index: 500;\r\n    margin: -60px 0 0 -60px;\r\n  }\r\n  & > ${NotFaundMessage} {\r\n    padding: 0 5px;\r\n  }\r\n  & > ${FiltersBoard} {\r\n    margin: 30px 5px 0;\r\n  }\r\n`;\r\nexport const TableHead = styled.thead`\r\n  background-color: #171717;\r\n  color: #fcba1c;\r\n  & > tr th {\r\n    padding: 10px 0;\r\n    font-family: \"Oswald\", sans-serif;\r\n    font-size: 19px;\r\n  }\r\n`;\r\nexport const OrdersTable = styled.table`\r\n  width: 900px;\r\n  margin: 20px auto 0;\r\n  border-spacing: 10px;\r\n  border-collapse: collapse;\r\n  border: 2px solid #171717;\r\n  text-transform: capitalize;\r\n\r\n  & > tbody {\r\n    background: #fff;\r\n  }\r\n\r\n  & > tbody tr td {\r\n    padding: 10px 0;\r\n    cursor: pointer;\r\n  }\r\n  & > tbody tr {\r\n    border-bottom: 1px solid;\r\n  }\r\n  & > tbody tr td small {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport default function DashboardOrders({ setNotification }) {\r\n  const {\r\n    seeDetails,\r\n    handleRefresh,\r\n    setOrderID,\r\n    setSorting,\r\n    setPage,\r\n    setState,\r\n    page,\r\n    isLoading,\r\n    maxPage,\r\n    orders,\r\n    sorting,\r\n    isFirstRender,\r\n    orderID,\r\n    state,\r\n  } = useDashboardOrders({ setNotification });\r\n\r\n  return (\r\n    <Page isLoading={isLoading}>\r\n      <DashboardNav />\r\n      <SectionTitle>Pedidos</SectionTitle>\r\n\r\n      <SearchBar\r\n        defaultValue={orderID}\r\n        placeholder=\"Número de orden...\"\r\n        setSearch={setOrderID}\r\n      />\r\n      <FiltersBoard>\r\n        <FilterOrderStateOptions\r\n          defaultValue={state}\r\n          setPage={setPage}\r\n          setStatePreferece={setState}\r\n        />\r\n        <SortOrdersOptions\r\n          defaultValue={sorting}\r\n          setSortPreferece={setSorting}\r\n        />\r\n      </FiltersBoard>\r\n\r\n      <RefreshButton\r\n        data-testid=\"refresh-button\"\r\n        onClick={() => handleRefresh()}\r\n      >\r\n        <RefreshIcone src={refreshIcone} title=\"Refrescar Página\" />\r\n      </RefreshButton>\r\n      {isLoading ? <LoaderSpinner /> : null}\r\n\r\n      {isLoading && isFirstRender && <OrdersTableSkeleton />}\r\n\r\n      {!isLoading && !isFirstRender && orders?.length === 0 && (\r\n        <NotFaundMessage>\r\n          No se han encontrado coincidencias, intenta de nuevo!!\r\n        </NotFaundMessage>\r\n      )}\r\n\r\n      {orders?.length !== 0 && (\r\n        <TableWrapper>\r\n          <OrdersTable>\r\n            <TableHead>\r\n              <tr>\r\n                <th>Nº de Pedido</th>\r\n                <th>Fecha</th>\r\n                <th>Dirección</th>\r\n                <th>Total</th>\r\n                <th>Estado</th>\r\n              </tr>\r\n            </TableHead>\r\n            <tbody>\r\n              {orders?.map((order) => (\r\n                <tr\r\n                  key={order?.orderID}\r\n                  onClick={(e) => seeDetails(order?._id)}\r\n                >\r\n                  <td>{order?.orderID}</td>\r\n                  <td>\r\n                    <span>\r\n                      {\r\n                        new Date(order.states[0].date)\r\n                          .toLocaleString()\r\n                          .split(\" \")[0]\r\n                      }\r\n                    </span>\r\n                    <br></br>\r\n                    <span>\r\n                      {\r\n                        new Date(order.states[0].date)\r\n                          .toLocaleString()\r\n                          .split(\" \")[1]\r\n                      }\r\n                    </span>\r\n                  </td>\r\n                  <td>{order?.client[0].address}</td>\r\n                  <td>${order?.total}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <b>\r\n                      {\r\n                        [...order?.states]\r\n                          .reverse()\r\n                          .find((state) => state.confirmed === true).name\r\n                      }\r\n                    </b>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </OrdersTable>\r\n        </TableWrapper>\r\n      )}\r\n\r\n      <PaginationButtons setPage={setPage} page={page} maxPage={maxPage} />\r\n    </Page>\r\n  );\r\n}\r\n","import {useHistory,useLocation} from 'react-router-dom'\r\nimport {useState, useEffect } from 'react'\r\nimport {useStorage} from '../context/useStorage'\r\n\r\n\r\nexport default function useDashboardOrders({setNotification}){\r\nconst history = useHistory()\r\nconst location = useLocation()\r\n\r\n\r\n\r\nconst {token,setIsLoading} = useStorage()\r\n\r\n\r\nconst seeDetails = (orderID) =>{\r\n      setIsLoading(true)\r\n history.push(`/dashboard/orders/${orderID}` )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let sizeLimit = 5\r\n\r\n\r\n  const [oldQuery, setOldQuery] = useState( new URLSearchParams(location.search))\r\n  const [orderID, setOrderID] = useState(\"\")\r\n  const[isLoading,setIsLoadingPage] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [maxPage, setMaxPage] = useState(1)\r\n    const [orders, setOrders] = useState([])\r\n    const [state,setState] =useState('all')\r\n  const [sorting, setSorting] = useState(\"-createdAt\")\r\nconst [isFirstRender, setIsFirstRender] = useState(true)\r\nlet [refreshCount,setRefreshCount] = useState(0)\r\n\r\n\r\n let query ;\r\n\r\nif(isFirstRender){\r\nquery = new URLSearchParams(oldQuery.toString())\r\n}else{\r\n query = new URLSearchParams() ;\r\n  query.append('sort', sorting)\r\n  query.append('page', page)\r\n  query.append('limit', sizeLimit)\r\n}\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n\r\nif(orderID !==\"\"){\r\nquery.append('orderID',orderID)\r\nsetState('all')\r\n}\r\nif(state !==\"all\"){\r\nquery.append('state',state)\r\n}\r\n\r\nsetPage(1)\r\n\r\n},[orderID,state,sorting])\r\n\r\n\r\nuseEffect(() => {\r\n    setNotification(0)\r\n  const controller = new AbortController()\r\n const signal = controller.signal\r\n\r\n\r\n\r\nconst ordersAPI = async () =>{\r\n    setIsLoadingPage(true)\r\n\r\n  try{\r\n\r\n\r\n       const headers = new Headers();\r\n      headers.append('Accept', 'application/json');\r\n      headers.append('Authorization', `Bearer ${token}`);\r\n\r\n\r\n    const setting = {\r\n          method: 'GET',\r\n          headers: headers,\r\nsignal,\r\n        }\r\n\r\n     let res = await fetch(`/api/orders?${query}`,setting)\r\n     let json = await res.json()\r\n\r\n    setOrders(json.data)\r\n\r\n    let total = parseInt(json.total)\r\n\r\n     setMaxPage(Math.ceil(total/sizeLimit))\r\n\r\n  history.push(`/dashboard/orders?${query}`)\r\n\r\ndocument.querySelector('body').scrollTo(0,60)\r\n        setIsFirstRender(false)\r\n     setIsLoadingPage(false)\r\n\r\n  }catch(err){\r\n    if(err.name === 'AbortError'){\r\n   console.log('Fetch Canseled: caught abort')\r\n }else{\r\n\r\n     console.log(err)\r\n\r\n  }\r\n}\r\n  }\r\n\r\n  ordersAPI()\r\n\r\n\r\n     return () =>{\r\n     controller.abort()\r\n   }\r\n }, [orderID,state,page,sorting,refreshCount])\r\n\r\n\r\n\r\n\r\n const handleRefresh = () =>{\r\nsetRefreshCount(Date.now())\r\nsetPage(1)\r\nsetSorting('-createdAt')\r\nsetState('all')\r\n}\r\n\r\n\r\nreturn {seeDetails,handleRefresh,setOrderID,setSorting,setState,setPage,page,isLoading,maxPage,orders,sorting,isFirstRender,orderID,sorting,state}\r\n\r\n\r\n}","import getCategoriesAPI from \"./getCategoriesAPI\";\r\nimport { PUT } from \"../utils/http\";\r\n\r\nexport default async function updateCategoryNameAPI({\r\n  categorySelectId,\r\n  info,\r\n  setIsRenameFormLoading,\r\n  setIsSuccessfullySend,\r\n  token,\r\n  setAllCategories,\r\n}) {\r\n  setIsRenameFormLoading(true);\r\n\r\n  try {\r\n    const { response } = await PUT(\r\n      `/api/categories/${categorySelectId}`,\r\n      info,\r\n      token\r\n    );\r\n\r\n    setIsRenameFormLoading(false);\r\n\r\n    if (response.status === 200) {\r\n      await getCategoriesAPI(setAllCategories);\r\n\r\n      setIsSuccessfullySend(true);\r\n      setTimeout(() => {\r\n        setIsSuccessfullySend(false);\r\n      }, 3000);\r\n\r\n      return;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import { DELETE } from \"../utils/http\";\r\nimport getCategoriesAPI from \"./getCategoriesAPI\";\r\n\r\nexport default async function deleteCategoryAPI({\r\n  categorySelectId,\r\n  token,\r\n  setAllCategories,\r\n}) {\r\n  try {\r\n    const { response } = await DELETE(\r\n      `/api/categories/${categorySelectId}`,\r\n      token\r\n    );\r\n\r\n    if (response.status === 204) {\r\n      await getCategoriesAPI(setAllCategories);\r\n      return;\r\n    }\r\n    if (response.status === 403)\r\n      return alert(\"Se require rol de Administrador\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import getCategoriesAPI from \"./getCategoriesAPI\";\r\nimport { POST } from \"../utils/http\";\r\n\r\nasync function createCategoryAPI({\r\n  token,\r\n  info,\r\n  setAllCategories,\r\n  setIsCreateFormLoading,\r\n  setIsSuccessfullySend,\r\n  e,\r\n}) {\r\n  setIsCreateFormLoading(true);\r\n  try {\r\n    const { response } = await POST(\"/api/categories\", info, token);\r\n\r\n    setIsCreateFormLoading(false);\r\n\r\n    if (response.status === 201) {\r\n      await getCategoriesAPI(setAllCategories);\r\n      e.target.newCategory.value = \"\";\r\n      setIsSuccessfullySend(true);\r\n      setTimeout(() => {\r\n        setIsSuccessfullySend(false);\r\n      }, 3000);\r\n      return;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport default createCategoryAPI;\r\n","import {useState,useEffect} from 'react'\r\nimport {useStorage} from '../context/useStorage'\r\n import updateCategoryNameAPI from '../API/updateCategoryNameAPI'\r\nimport deleteCategoryAPI  from '../API/deleteCategoryAPI'\r\nimport createCategoryAPI from '../API/createCategoryAPI'\r\n\r\n\r\n \r\nexport default function useCategoriesForms(){\r\n\r\n   const {categories,setIsSuccessfullySend,token,setAllCategories} = useStorage()\r\n\r\n const [editingCategory,setEditingCategory] = useState('categoria')\r\n   const [isRenameFormLoading, setIsRenameFormLoading] = useState(false)\r\n      const [isCreateFormLoading, setIsCreateFormLoading] = useState(false)\r\n\r\n  const [categorySelectId,setCategorySelectId] = useState('')\r\n\r\n\r\nuseEffect(()=>{\r\n\r\nlet categoryId = categories?.find(category => category.name === editingCategory )?._id\r\n\r\nsetCategorySelectId(categoryId)\r\n\r\n},[editingCategory,categories])\r\n\r\n\r\n\r\n\r\nconst handleDelete =async (e) =>{\r\n  e.preventDefault()\r\n e.stopPropagation()\r\n const confirmation =window.confirm('Al eliminar la categoría se eliminarn todos los productos de la misma, está deguro?')\r\n\r\nif(confirmation) {\r\n  await deleteCategoryAPI({categorySelectId,token,setAllCategories})\r\n  setEditingCategory('category')\r\n  return\r\n}\r\n\r\n}\r\n\r\n\r\nconst handleRenameSubmit = (e) =>{\r\n e.preventDefault()\r\n e.stopPropagation()\r\n\r\n   const info ={\r\ncategoryNewName : e.target.categoryNewName.value.trim()\r\n   }\r\n\r\n  updateCategoryNameAPI({categorySelectId,info,setIsRenameFormLoading,setIsSuccessfullySend,token,setAllCategories})\r\nsetEditingCategory('category')\r\n}\r\nconst handleCreateSubmit = (e) =>{\r\ne.preventDefault()\r\n e.stopPropagation()\r\nconst info = {\r\n  category: e.target.newCategory.value.trim()\r\n}\r\ncreateCategoryAPI({token,info,setAllCategories,setIsCreateFormLoading,setIsSuccessfullySend,e})\r\n\r\n}\r\n  return {handleRenameSubmit,handleCreateSubmit,setEditingCategory,editingCategory,\r\nhandleDelete,isRenameFormLoading,isCreateFormLoading,categories} \r\n  \r\n}","import styled  from 'styled-components'\r\nimport { withError } from './../withError'\r\nimport {Page} from './DashboardOrders'\r\nimport useDashboardCategories from '../../hooks/useDashboardCategories'\r\nimport {SectionTitle} from '../menu/Menu'\r\nimport DashboardNav from '../DashboardNav'\r\nimport {TextInput,LoadButton,OptionList,Option} from './CreateNewProductForm'\r\nimport {LoaderSpinner} from './../LoaderSpinner'\r\n\r\n\r\nconst CategoriesPage = styled(Page)`\r\n    background:${props => props.theme.lightYellow};\r\npadding: 65px 5px;\r\n    max-height: max-content;\r\nmin-width:100%;\r\n`\r\n\r\n\r\nconst Input = styled(TextInput)`\r\nbackground: rgb(0 0 0 / 7%);\r\n      box-shadow: :${props => props.theme.inputBoxShadow};\r\n`\r\nconst Wrapper = styled.section`\r\nwidth:100%:\r\nmax-width:1250px;\r\nmargin:30px auto;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\njustify-content:center;\r\ngap:10px;\r\n&> article{\r\n  flex: 1 1 400px;\r\n  width: 100%;\r\n}\r\n\r\n\r\n`\r\n\r\n\r\n\r\nconst FormCard = styled.article`\r\n    padding: 20px 15px;\r\n    margin-bottom: 20px;\r\n    border-radius: 10px;\r\n    max-width: 400px;\r\n        padding: 20px 15px 40px;\r\n        height:max-content;\r\n        background:#fff;\r\n        box-shadow:${props => props.theme.lightBoxShadow};\r\n& > h4{\r\n      margin: 10px 0 24px;\r\n        font-size: 25px;\r\n}\r\n& >form  h4{\r\n      margin: 10px 0 24px;\r\n        font-size: 25px;\r\n}\r\n      \r\n    & > form select {\r\n     min-width:95%;\r\n    }\r\n    & > form small {\r\n       position: absolute;\r\n    margin-top: -18px;\r\n    margin-left: 10px;\r\n    }\r\n\r\n & > form buttons {\r\n   transfor:scale(0.8);\r\n       position: absolute;\r\n    margin-top: -18px;\r\n    margin-left: 10px;\r\n    }\r\n  @media screen and (max-width: 450px){\r\n    & > h4{\r\n     line-height:  24px;\r\n        font-size: 20px;\r\n}\r\n   & > form h4{\r\n      line-height:  24px;\r\n        font-size: 20px;\r\n}\r\n  \r\n  }\r\n\r\n`\r\nconst DeleteButton = styled.button`\r\n    padding: 11px 25px 12px;\r\n    transition: all 0.5s;\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    background: ${props => props.theme.black};\r\n    border: none;\r\n    box-shadow: ${props => props.theme.lightBoxShadow};\r\n    color: white;\r\n    letter-spacing: 1px;\r\nfont-size: 15px;\r\n    font-family: \"Oswald\",sans-serif;\r\n    border-radius: 4px;\r\n    &:hover{\r\n  background:${props => props.theme.orange};\r\n    }\r\n `\r\nfunction DashboardCategories(){\r\n\r\n\r\nconst  {handleRenameSubmit,handleCreateSubmit ,handleDelete,setEditingCategory,editingCategory,isRenameFormLoading,isCreateFormLoading,categories}  = useDashboardCategories()\r\n\r\n  return(\r\n    <CategoriesPage>\r\n         <DashboardNav/>\r\n      <SectionTitle light>Categorías</SectionTitle>\r\n\r\n      <Wrapper>\r\n\r\n                <FormCard>\r\n\r\n        <h4>Elimeinar categoría</h4>\r\n\r\n  <form name=\"editCategory\"  onSubmit={handleRenameSubmit}>\r\n\r\n\r\n  <OptionList name=\"category\" onChange={(e) =>setEditingCategory(e.target.value)}>\r\n \r\n  {categories?.map(cat =>\r\n\r\n<Option key={cat?._id } value={cat?.name} >{cat?.name}</Option>\r\n\r\n  )}\r\n\r\n</OptionList>\r\n\r\n                  <DeleteButton onClick={handleDelete}>Eliminar</DeleteButton>\r\n     \r\n<hr></hr>\r\n\r\n\r\n                        <h4>Remombrar categoría</h4>\r\n\r\n  <Input placeholder={`Renombrar ${editingCategory}`} name=\"categoryNewName\"   />\r\n      {isRenameFormLoading  && <LoaderSpinner small />  }\r\n<LoadButton as=\"input\" type=\"submit\" value=\"Editar\"/>\r\n\r\n\r\n</form>\r\n\r\n        </FormCard>\r\n\r\n\r\n\r\n        <FormCard>\r\n          <h4>Crear una nueva categoría</h4>\r\n\r\n<form  name=\"createCategory\"  onSubmit={handleCreateSubmit}>\r\n\r\n  <Input    placeholder=\"Nueva categoría...\"    name=\"newCategory\"      />\r\n\r\n        {isCreateFormLoading  && <LoaderSpinner small />  }\r\n\r\n<LoadButton as=\"input\" type=\"submit\" value=\"Cargar\"/>\r\n\r\n</form>\r\n\r\n        </FormCard>\r\n\r\n      </Wrapper>\r\n    </CategoriesPage>\r\n  )\r\n}\r\nexport default withError(DashboardCategories)"],"sourceRoot":""}