{"version":3,"sources":["components/Buttons.js","API/contactAPI.js","components/contact/ContactForm.js","hooks/useContactForm.js","API/singUpAPI.js","components/auth/SingupForm.js","hooks/useSingupForm.js","img/burger-icon.png","API/postProductAPI.js","img/tray.svg","components/dashboard/CreateNewProductForm.js","hooks/usePostNewProductForm.js"],"names":["Button","styled","a","props","theme","lightBoxShadow","darckYellow","small","black","ButtonPrimary","orange","contactAPI","info","headers","Headers","append","setting","method","body","JSON","stringify","fetch","res","status","json","message","console","log","StyledContact","article","FormSection","div","Form","form","InfoSection","TextInput","input","Textarea","textarea","ErrorMessage","ContactTitle","h2","ContactLink","Link","ContactForm","useForm","mode","data","e","preventDefault","userName","userEmail","userMessage","subject","register","handleSubmit","errors","formState","onSubmit","useContactForm","type","placeholder","name","ref","required","pattern","value","style","borderColor","meassage","maxLength","as","src","phoneIcone","alt","emailcone","setIsFormLoading","setServerError","history","redirect","id","localStorage","setItem","setTimeout","push","singUpAPI","FormCard","Logo","img","inputShadow","LoaderSpinner","ErrorServerMessage","FormLink","UserNameInput","defaultValue","data-testid","UserLastNameInput","userLastName","UserEmailInput","UserPasswordInput","autocomplete","minLength","UserNewPasswordInput","userNewPassword","SingupForm","useState","serverError","isFormLoading","useHistory","toLowerCase","lastName","email","password","userPassword","useSingupForm","burgerIcon","to","token","formData","setIsSuccessfullySend","setFormIsLoading","target","reset","postProductAPI","StyledSection","section","FormTitle","CheckboxWrapper","ThisFormCard","ThisForm","attrs","ButtonsWrapper","LoadButton","ResetButton","Description","DropZone","OptionList","select","Option","option","CategoriesOptionsInput","categories","map","cat","_id","ProductNameInput","role","productName","ProductSizeInput","size","ProductDescriptionTextArea","description","ProductPriceInput","productPrice","ImageUploader","isNotRequired","productImg","FormButtons","ProductState","state","htmlFor","defaultChecked","UpdateNewProductForm","useStorage","formIsLoading","FormData","active","checked","price","parseInt","files","category","usePostNewProductForm","trayIcon"],"mappings":"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","file":"static/js/1.1952c844.chunk.js","sourcesContent":["\r\nimport styled  from 'styled-components'\r\n\r\n   export  const Button= styled.a`\r\n     box-shadow: ${props => props.theme.lightBoxShadow};\r\npadding: 15px 40px;\r\ncolor:#fff;\r\nwidth:max-content;\r\n  background:${props => props.theme.darckYellow};\r\n  text-transform: uppercase;\r\n  text-align:center;\r\n  font-size: 16px;\r\n  font-family: \"Oswald\", sans-serif;\r\n  font-weight:600px;\r\n line-height:23.5px;\r\n  cursor:pointer;\r\n  letter-spacing:2px;\r\n  border-radius:4px;\r\n    text-decoration: none;\r\n\r\n    transform:'${(props)=>(props.small ? \"scale(0.7)\" : \"scale(1)\")}';\r\n  transition:all 0.5s ease;\r\n  &:hover{\r\n    background-color:${props => props.theme.black};\r\n  }\r\n  & > * {\r\n    cursor:pointer;\r\n  }\r\n    @media screen and (max-width: 550px){\r\n   transform:scale(0.8);\r\n`;\r\nexport const ButtonPrimary = styled(Button)`\r\n  background:${props => props.theme.orange};\r\n`;\r\n\r\n\r\n\r\n","\r\nconst contactAPI = async (info) =>{\r\n\r\n  const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\nheaders.append('Content-Type', 'application/json');\r\n\r\n            const setting = {\r\n          method: 'POST',\r\n                 headers: headers,\r\n                  body: JSON.stringify(info),\r\n   \r\n\r\n        }\r\n\r\n  try{\r\n  \r\n  \r\nlet res  = await fetch(\"/api/contact\",setting)\r\nif(res.status === 200){\r\n\r\n  let {message} = res.json()\r\n      console.log(message)\r\n}\r\n\r\n\r\nreturn res\r\n\r\n  }catch(err){\r\n    console.log(\"There was a problem submitting contact form\")\r\n    console.log(err)\r\n  }\r\n\r\n}\r\n\r\n export default contactAPI","import styled  from 'styled-components'\r\nimport useContactForm from '../../hooks/useContactForm'\r\nimport SocilasMenu from '../SocialsMenu'\r\nimport {ButtonPrimary} from '../Buttons'\r\nimport phoneIcone from '../../img/phone-alt-solid.svg'\r\nimport emailcone from '../../img/envelope-regular.svg'\r\n\r\nimport {Link, Icone,ListItem,List} from  '../Footer'\r\n\r\n\r\n const StyledContact = styled.article`\r\nbox-sizing:border-box:\r\nmax-width:100%;\r\npadding:20px 0;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\n& > * {\r\npadding:10px  15px;\r\nheight:100%;\r\n}\r\n`;\r\nconst FormSection = styled.div`\r\nwidth:100%;\r\n  flex: 1 1 450px;\r\n\r\n  @media screen and (min-width: 550px){\r\n  padding:10px  32px ;\r\n\r\n  }\r\n\r\n`;\r\nconst Form = styled.form`\r\nwidth:100%;\r\nheight:100%;\r\ndisplay:flex;\r\nflex-flow:column;\r\n& > small {\r\n      margin: -10px auto 4px 0;\r\n}\r\n@media screen and (max-width: 550px){\r\n & >${ButtonPrimary}{\r\n        margin-left: auto;\r\n                margin-right: auto;\r\n  }\r\n}\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\ndisplay:flex;\r\nflex-flow:column;\r\njustify-content:space-evenly;\r\n  flex: 1 0 1;\r\n  min-height:460px;\r\n width: 40%;\r\n @media screen and (max-width:750px){\r\n    width: 100%;\r\n     padding:0  25px;\r\n       min-height:350px;\r\n }\r\n`;\r\nexport const TextInput= styled.input`\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n  }\r\n    text-transform: capitalize;\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\nwidth:100%;\r\npadding: 12px 15px;\r\n`;\r\n\r\n;\r\nconst Textarea= styled.textarea`\r\n  &::resizer {\r\n  display: none;\r\n}\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n\r\n  }\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\npadding: 10px 15px;\r\n  min-height:250px; \r\n  max-height:250px; \r\n  margin-bottom:25px;\r\n  min-width:100%;\r\n  max-width:100%;\r\n  \r\n`;\r\nexport const ErrorMessage = styled.small`\r\ncolor:#bf0000;\r\nmargin:-10px auto 4px 5%;\r\n    display: block;\r\n`;\r\nconst ContactTitle = styled.h2`\r\n\r\n @media screen and (min-width:750px){\r\n    margin-top: -40px;\r\n }\r\n`;\r\nconst ContactLink = styled(Link)`\r\ncolor:#000;\r\n`;\r\n\r\nexport default  function ContactForm() {\r\n\r\n    const {register,handleSubmit,errors,onSubmit}= useContactForm()\r\n  \r\n  return(\r\n    <StyledContact>\r\n      <FormSection>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n     \r\n           {errors.userName && <ErrorMessage>{errors.userName.message}</ErrorMessage>}\r\n          <  TextInput \r\n          type='text'\r\n          placeholder='Tu Nombre Completo...'\r\n          name=\"userName\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n\r\n              pattern:{\r\n                   value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü\\s\\w]+$/,\r\n                    message:'*Nombre no valido'\r\n                      }\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.userName && \"#bf0000\" }}\r\n          />\r\n                                {errors.userEmail && <ErrorMessage>{errors.userEmail.message}</ErrorMessage>}\r\n          <TextInput \r\n          type='email'\r\n          placeholder='Tu email...'\r\n          name=\"userEmail\"\r\n          ref={register({\r\n                                required: \"*El campo es requrido\",\r\n                \r\n                      pattern:{\r\n                        value:/^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n                       meassage:'*Email no valido'\r\n                      }\r\n          })}\r\n           style={{ borderColor: errors.userEmail && \"#bf0000\" }}\r\n          />\r\n               {errors.subject && <ErrorMessage>{errors.subject.message}</ErrorMessage>}\r\n\r\n\r\n           <TextInput \r\n           type='text'\r\n          placeholder='Asunto...'\r\n          name=\"subject\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.subject && \"#bf0000\" }}\r\n          />     \r\n            {errors.userMessage && <ErrorMessage>{errors.userMessage.message}</ErrorMessage>}\r\n          <Textarea \r\n          placeholder='Tu mensaje...'\r\n          name=\"userMessage\"\r\n          \r\n          ref={register({\r\n          required: '*El campo es requerido',\r\n           maxLength:{\r\n                        value:255,\r\n                         message:'*Tu mensaje no debe exceder los 255 carácteres'\r\n                      }\r\n          })}\r\n                 style={{ borderColor: errors.userMessage && \"#bf0000\" }}\r\n          />\r\n      <ButtonPrimary as=\"input\" type=\"submit\" value=\"Enviar mensaje\"/>\r\n        </Form>\r\n      </FormSection>\r\n      <InfoSection>\r\n   \r\n        <ContactTitle>Contactenos</ContactTitle>\r\n         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan metus.\r\n           Ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan.\r\n         </p>\r\n          <List>\r\n<ListItem><Icone><img src={phoneIcone} alt=\"phone\"></img></Icone> <ContactLink>+66 396 847 2637</ContactLink></ListItem>\r\n<ListItem><Icone><img src={emailcone} alt=\"email\"></img></Icone> <ContactLink>Hello@Burger.Com</ContactLink></ListItem>\r\n  </List>\r\n  <SocilasMenu/>\r\n      </InfoSection>\r\n    </StyledContact>\r\n  );\r\n}","import {useForm} from 'react-hook-form'\r\nimport contactAPI from '../API/contactAPI.js'\r\n\r\nexport default function useContactForm(){\r\n\r\n\r\n const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\nasync function onSubmit(data,e) {\r\n    e.preventDefault()\r\n    \r\nconst info = {\r\nuserName: data.userName,\r\nuserEmail: data.userEmail,\r\nuserMessage: data.userMessage,\r\nsubject: data.subject,\r\n}\r\n\r\n   await contactAPI(info)\r\n     \r\n}\r\n\r\n  return {register,handleSubmit,errors,onSubmit}\r\n}","\r\n\r\nasync function singUpAPI({\r\nsetIsFormLoading,\r\nsetServerError,\r\n\r\nhistory,\r\ninfo\r\n}){\r\ntry{\r\n\r\n\r\n     const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\nheaders.append('Content-Type', 'application/json');\r\n\r\n\r\n        const setting = {\r\n          method: 'POST',\r\n          headers: headers,\r\n            body: JSON.stringify(info),\r\n        }\r\n\r\n\r\n\r\n        let res = await fetch(\"/api/auth/singUp\", setting);\r\n            let  json = await res.json()\r\nsetIsFormLoading(false)\r\n\r\n         if(res.status === 201 || 302) {\r\n      setServerError(\"\")\r\n\r\n    \r\n\r\n        const {redirect,id} = json \r\n\r\n       localStorage.setItem('toConfirmUser', id)\r\n\r\n setTimeout(() => {\r\n       return history.push(redirect)\r\n  }, 1000);\r\n      }\r\n\r\n       if(res.status === 400) {\r\n  const {message} = json\r\n   console.log(message)\r\n      setServerError(message)\r\nreturn\r\n }\r\n \r\n\r\n      \r\n}catch(err){\r\n\r\n  console.log(err)\r\n\r\n\r\n}\r\n\r\n}\r\n\r\nexport default singUpAPI","import styled  from 'styled-components'\r\nimport {Link} from 'react-router-dom'\r\nimport {Fragment} from 'react' \r\nimport useSingupForm from '../../hooks/useSingupForm'\r\nimport {ButtonPrimary} from '../Buttons'\r\nimport burgerIcon from '../../img/burger-icon.png'\r\nimport {TextInput,ErrorMessage} from '../contact/ContactForm';\r\nimport {LoaderSpinner} from './../LoaderSpinner'\r\n\r\nexport const FormCard =  styled.article`\r\n  box-shadow: 0 0 4px rgba(0,0,0,0.5);\r\n\r\nmargin: 30px auto;\r\nborder-radius:10px;\r\nwidth: 100%;\r\n    max-width: 400px;\r\ndisplay:flex;\r\nflex-flow:column;\r\nalign-items:center;\r\ntext-align:center;\r\nmin-heght:600px;\r\nbackground: rgb(252,175,1);\r\n    background: linear-gradient(\r\n218deg\r\n, rgb(252 175 1 / 60%) 0%, rgb(255 165 0 / 58%) 100%);\r\nbox-box-shadow: 2px 2px 6px #000;\r\n\r\n@media screen and  (max-width:400px){\r\n width: 100%;\r\n\r\n}\r\n`;\r\nexport const Logo = styled.img`\r\nwidth:120px;\r\nmargin-bottom:20px;\r\nheight:auto;\r\n`;\r\nexport const Form = styled.form`\r\nwidth:90%;\r\nmargin-left: -10px;\r\npadding-bottom:25px;\r\ndisplay:flex;\r\nmargin:0 auto;\r\nflex-flow:column;\r\nalign-items:center;\r\n& > input {\r\n      width: 90%;\r\n     margin-bottom:15px;\r\n      border:none;\r\n    box-shadow: ${props => props.theme.inputShadow};\r\n}\r\n\r\n& >${LoaderSpinner}{\r\n  margin-bottom: 10px;\r\n}\r\n& > input:focus, & > textarea:focus{\r\n  outline: 2px solid ${props => props.theme.darckYellow};\r\n    outline-style: auto;\r\n}\r\n& > input[type=\"submit\"] {\r\n    box-shadow: none;\r\n      outline: none;\r\n}\r\n@media screen and  (max-width:500px){\r\nwidth: 90%;\r\n& > input {\r\n      width: 95%;\r\n  \r\n}\r\n}\r\n`;\r\nexport const ErrorServerMessage = styled(ErrorMessage)`\r\ntext-align:center;\r\nfont-size:20px;\r\nmargin: 5px 0 15px;\r\n`\r\nexport const FormLink = styled(Link)`\r\nmargin-bottom: 20px;\r\ncursor:pointer;\r\ntext-decoration:none;\r\ntransition:all 0.5s esea;\r\n  color:${props=> props.theme.black};\r\n&:hover{\r\n\r\n  color:#fff;\r\n}\r\n`;\r\nexport function UserNameInput({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n       {errors.userName && <ErrorMessage >{errors.userName.message }</ErrorMessage>}\r\n    <  TextInput \r\n        placeholder='Tu nombre...'\r\n          name=\"userName\"\r\n          type='text'\r\n       defaultValue={defaultValue || ''}\r\n       \r\n          data-testid='nameInput'\r\n          ref={register({\r\n               required: '*El campo es requrido',\r\n              pattern:{\r\n                        value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü]+$/\r\n,\r\n                         message:\"*Nombre no valido\"\r\n                      }\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.userName&& \"#bf0000\" }}\r\n          />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserLastNameInput({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n       {errors.userLastName && <ErrorMessage>{errors.userLastName.message }</ErrorMessage>}\r\n    <  TextInput \r\n    type='text'\r\n        placeholder='Tu apellido ...'\r\n        data-testid='lastNameInput'\r\n        defaultValue={defaultValue || ''}\r\n          name=\"userLastName\"\r\n          ref={register({\r\n               required: '*El campo es requrido',\r\n              pattern:{\r\n                        value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü]+$/\r\n,\r\n                         message:\"*Apellido no valido\"\r\n                      }\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.userLastName && \"#bf0000\" }}\r\n          />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserEmailInput({register,errors}){\r\n\r\n  return(\r\n    <Fragment>\r\n                    {errors.userEmail && <ErrorMessage>{errors.userEmail.message}</ErrorMessage>}\r\n          <TextInput \r\n          type='email'\r\n          placeholder='Tu email...'\r\n          name=\"userEmail\"\r\n          data-testid='emailInput'\r\n          ref={register({\r\n                     required: '*El campo es requrido',\r\n                \r\n                      pattern:{\r\n                        value:/^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n                             message:\"*Email no valido\"\r\n                      }\r\n          })}\r\n           style={{ borderColor: errors.userEmail && \"#bf0000\" }  }\r\n          />\r\n    </Fragment>\r\n  );\r\n}\r\n export function UserPasswordInput({register,errors,placeholder,name = 'userPassword'}){\r\n\r\n  return(\r\n    <Fragment>\r\n       {errors[name] && <ErrorMessage  >{errors[name].message}</ErrorMessage>}\r\n\r\n<TextInput\r\nplaceholder={placeholder}\r\ntype='password'\r\nname ={name}\r\ndata-testid='passwordInput'\r\nautocomplete={false}\r\n          ref={register({\r\n                  required: '*El campo es requrido' ,\r\n                     minLength: {\r\n            value: 5,\r\n            message: \"*El largo mínimo es de 5 carácteres\"\r\n          } \r\n          })}\r\n           style={{ borderColor: errors[name] && \"#bf0000\" }}/>\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserNewPasswordInput({register,errors,placeholder,}){\r\n \r\n\r\n  return(\r\n    <Fragment>\r\n       {errors.userNewPassword && <ErrorMessage  >{errors.userNewPassword.message}</ErrorMessage>}\r\n\r\n<TextInput\r\nplaceholder={placeholder}\r\ntype='password'\r\n name='userNewPassword'\r\n          ref={register({\r\n             required:  '*El campo es requrido' ,\r\n                     minLength: {\r\n            value: 5,\r\n            message: \"*El largo mínimo es de 5 carácteres\"\r\n          } \r\n          })}\r\n           style={{ borderColor: errors.userNewPassword && \"#bf0000\" }}/>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\nexport default function SingupForm(){\r\n\r\n\r\n\r\n   const {register,handleSubmit,errors,onSubmit,isFormLoading,serverError} = useSingupForm()\r\n  return(\r\n    <FormCard>\r\n             <Logo src={burgerIcon} alt=\"LogoBrand\"></Logo>\r\n      <Form data-testid=\"singUpForm\" onSubmit={handleSubmit(onSubmit)}>\r\n     \r\n     <UserNameInput  errors={errors} register={register}/>\r\n          <UserLastNameInput  errors={errors} register={register}/>\r\n     <UserEmailInput  errors={errors} register={register}/>\r\n     <UserPasswordInput   errors={errors} register={register} placeholder=\"Tu contraseña...\"  />\r\n\r\n\r\n         <ErrorServerMessage>{serverError}</ErrorServerMessage>\r\n\r\n \r\n           <FormLink to= \"/authentication/login\" >¿Ya tienes una cuenta? <b>Login</b> </FormLink>\r\n <ButtonPrimary as=\"input\" type=\"submit\" value=\"Sing Up\"/>\r\n     {isFormLoading && <LoaderSpinner data-testid=\"spinner\"small />}\r\n      </Form>\r\n    </FormCard>\r\n  );\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport singUpAPI from '../API/singUpAPI'\r\nimport {useState} from 'react' \r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport default function useSingupForm(){\r\n\r\n\r\nconst [serverError,setServerError] = useState(\"\")\r\nconst [isFormLoading,setIsFormLoading] = useState(false)\r\n\r\n    \r\n  const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\nconst history = useHistory()\r\n\r\nasync function onSubmit(data,e) {\r\n\r\n e.preventDefault()\r\n\r\nawait setIsFormLoading(true)\r\n\r\nconst info ={\r\nname: data.userName.toLowerCase(),\r\nlastName: data.userLastName.toLowerCase(),\r\nemail:data.userEmail,\r\npassword:data.userPassword\r\n}\r\n\r\n\r\nawait singUpAPI({\r\nsetServerError,\r\ninfo,\r\nhistory,\r\nsetIsFormLoading\r\n})\r\n\r\n\r\n  }\r\n\r\n\r\n  return {register,handleSubmit,errors,onSubmit,\r\n  serverError,isFormLoading\r\n  } \r\n\r\n  \r\n}","export default __webpack_public_path__ + \"static/media/burger-icon.4ba9750a.png\";"," \r\n  async function postProductAPI({token,e,formData,setIsSuccessfullySend,setFormIsLoading}){\r\n\r\n      \r\n       const headers = new Headers();\r\n       \r\n        headers.append('Accept', 'application/json');\r\n      headers.append('Authorization', `Bearer ${token}`);\r\n\r\n\r\n        const setting = {\r\n          method: 'POST',\r\n            body: formData,\r\n          headers: headers,\r\n\r\n        }\r\n\r\n        \r\n  try {\r\n\r\n     let res = await fetch(\"/api/products\", setting);\r\n       setFormIsLoading(false)\r\n        if(res.status === 201 ){\r\n  setIsSuccessfullySend(true)\r\ne.target.reset()\r\n \r\n        setTimeout(() => {\r\n   setIsSuccessfullySend(false)\r\n\r\n            }, 2000);\r\n            return\r\n      }     \r\n      \r\n} catch (err) {\r\n\r\n        console.log(err)\r\n      }\r\n  }\r\n\r\n \r\n\r\nexport default postProductAPI\r\n\r\n","export default __webpack_public_path__ + \"static/media/tray.fe877925.svg\";","import styled  from 'styled-components'\r\nimport usePostNewProductForm from '../../hooks/usePostNewProductForm'\r\nimport {Fragment } from 'react'\r\nimport {LoaderSpinner} from './../LoaderSpinner'\r\nimport {ErrorMessage} from '../contact/ContactForm';\r\nimport trayIcon from '../../img/tray.svg';\r\nimport {FormCard,Form,Logo} from '../auth/SingupForm'\r\nimport {ButtonPrimary,Button} from '../Buttons'\r\n\r\n\r\n export const StyledSection = styled.section`\r\nposition:relative;\r\nmin-height:100vh;\r\nwidth:100vw;\r\nmargin: 0 0 40px;\r\nbackground-size: 100%  100%;\r\n`;\r\nexport const FormTitle= styled.h2`\r\n\r\ntext-transform: uppercase;\r\n\r\n}\r\nfont-size: 25px;\r\n\r\nmargin-bottom: 20px;\r\nmargin-top: -10px;\r\n@media screen and (min-width:760px){\r\n\r\n  font-size: 45px;\r\n}\r\n`;\r\nexport  const CheckboxWrapper = styled.div`\r\ndisplay:flex;\r\nmargin: 10px auto;\r\nalign-items:center;\r\n&> input{\r\ntransform: scale(1.5);\r\nmargin: 5px 10px 0;\r\n    cursor: pointer;\r\n}\r\n\r\n& > small {\r\n  margin-left: 5%;\r\n}\r\n& > input[type=\"file\"]{\r\n  width:50%;\r\n}\r\n& > label{\r\nfont-weight:600;\r\nfont-size:20px;\r\n}\r\n`;\r\nexport const ThisFormCard = styled(FormCard)`\r\nwidth:100%;\r\nmax-width:900px;\r\nmargin: 0 auto;\r\nbackground:#fff;\r\nbox-shadow:none;\r\n`\r\nexport const  ThisForm = styled(Form)`\r\nmax-width:95%;\r\nwidth:95%;\r\nmargin: 0 auto;\r\n& > input {\r\n  background :#f0f0f0;\r\n\r\n}\r\n\r\n& > input:focus, & > textarea:focus{\r\n  outline: 2px solid #ccc;\r\n    outline-style: auto;\r\n}\r\n`\r\n export const TextInput= styled.input.attrs(props => ({\r\n  type: 'text',\r\n\r\n\r\n}))`\r\n\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   font-size: 16px;\r\n   letter-spacing: 1px;\r\n  }\r\nbackground:#f0f0f0;\r\nborder:none;\r\n  border-radius:5px;\r\n  outline:none;\r\n   margin-bottom:15px;\r\n  width:95%;\r\npadding: 12px 15px;\r\n\r\n`;\r\nexport const ButtonsWrapper = styled.div`\r\ndisplay:flex;\r\njustify-content:center;\r\nwidth:100%;\r\n@media screen and (max-width:450px){\r\n  & >input {\r\n transform:scale(0.8);\r\n  }\r\n}\r\n`;\r\nexport const LoadButton = styled(ButtonPrimary)`\r\ntransform:scale(0.9);\r\n`\r\nexport const ResetButton = styled(Button)\r\n`\r\n  box-shadow: 0 0 4px rgba(0,0,0,0.5);\r\ntransform:scale(0.9);\r\noutline:none;\r\nborder:none;\r\n`\r\n export const Description =styled.textarea`\r\nmax-width: 90%;\r\n    width: 90%;\r\n  border:none;\r\n  outline:none;\r\nbox-shadow: inset 1px 1px 6px 0px #ccc;\r\npadding: 12px 10px 12px 20px;\r\nmin-height: 200px;\r\nmax-height: 200px;\r\nborder:none;\r\nbackground:#f0f0f0;\r\nborder-radius: 5px;\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   font-size: 17px;\r\n   letter-spacing: 1px;\r\n  }\r\n@media screen and (max-width: 500px) {\r\n  min-width: 95%;\r\n}\r\n`\r\n export const DropZone = styled.input`\r\n  box-shadow: 0 0 4px rgba(0,0,0,0.5);\r\n  position:relative;\r\nmax-width: 50%;\r\nmin-width: 200px;\r\n  height: 45px;\r\n  display: inline-block;\r\n  margin:25px auto;\r\n  cursor:pointer;\r\n  outline:none;\r\ntransition: all 0.5s ease;\r\n  &:before{\r\n     background-color: ${props => props.theme.black};\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size:17px;\r\n  font-weight:600;\r\n  align-items: center;\r\n  border-radius: 3px;\r\n  content: 'Seleccionar Imagen';\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n\r\n  }\r\n    &:hover{\r\n      transform:scale(1.05);\r\n    }\r\n  `;\r\n\r\nexport const OptionList = styled.select`\r\n    color: rgb(0 0 0 / 50%);\r\n    padding: 10px;\r\n    width: 90%;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    margin: 0;\r\n    border: none;\r\n    margin-bottom: 20px;\r\n    background: #f3f3f3;\r\n box-shadow: ${props => props.theme.inputShadow};\r\n    text-transform: capitalize;\r\n@media screen and (max-width: 500px) {\r\n  min-width: 95%;\r\n}\r\n`\r\nexport const Option = styled.option`\r\n&:checked{\r\n   background: #fcba1c;\r\n}\r\n`\r\nexport  function CategoriesOptionsInput({register,categories,defaultValue}){\r\n\r\nreturn(\r\n\r\n\r\n<OptionList\r\nname=\"category\"\r\nvalue={defaultValue || categories[0]}\r\n          ref={register({\r\n       required: '*El campo es requrido',\r\n\r\n          })}\r\n>\r\n  {categories?.map(cat =>\r\n\r\n<Option key={cat?._id } value={cat?.name} >{cat?.name}</Option>\r\n\r\n  )}\r\n\r\n</OptionList>\r\n\r\n);\r\n\r\n}\r\nexport function ProductNameInput({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n        {errors.name && <ErrorMessage  role=\"alert\">{errors.name.message}</ErrorMessage>}\r\n\r\n <TextInput\r\n style={{ borderColor: errors.productName && \"#bf0000\" }  }\r\n          placeholder=\"Nombre...\"\r\n    data-testid=\"name\"\r\n      defaultValue={defaultValue || \"\"}\r\n                       name=\"name\"\r\n          ref={register({\r\n             required: '*El campo es requrido',\r\n\r\n          })}\r\n          />\r\n\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport function ProductSizeInput({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n          {errors.size && <ErrorMessage  role=\"alert\">{errors.size.message}</ErrorMessage>}\r\n          <TextInput\r\n           style={{ borderColor: errors.size && \"#bf0000\" }  }\r\n          placeholder=\"Cantidad/Tamaño...\"\r\n                 data-testid=\"size\"\r\n                name='size'\r\n                defaultValue={defaultValue || \"\"}\r\n          ref={register({\r\n              required:'*El campo es requerido' ,\r\n             pattern:{\r\n               value: /^(?:[0-9]+\\s\\w+[a-z]|[a-z]+[0-9])[a-z0-9]*$/i,\r\n              message:'*Se require de un valor y unidad'\r\n             }\r\n          })}\r\n          />\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport function ProductDescriptionTextArea({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n           {errors.description && <ErrorMessage  role=\"alert\">{errors.description.message}</ErrorMessage>}\r\n      <Description\r\n      placeholder=\"Descripción...\"\r\n       style={{ borderColor: errors.description && \"#bf0000\" }  }\r\n     defaultValue={defaultValue || \"\"}\r\n                      name=\"description\"\r\n              data-testid=\"description\"\r\n          ref={register({\r\n      required:'*El campo es requerido' ,\r\n\r\n          })}\r\n      >\r\n\r\n      </Description>\r\n    </Fragment>\r\n  );\r\n\r\n}\r\nexport function ProductPriceInput({register,errors,defaultValue}){\r\n\r\n  return(\r\n    <Fragment>\r\n         {errors.productPrice && <ErrorMessage  role=\"alert\">{errors.productPrice.message}</ErrorMessage>}\r\n\r\n\r\n             <TextInput placeholder=\"Precio...\"\r\n           style={{ borderColor: errors.productPrice && \"#bf0000\" }  }\r\n                 name=\"price\"\r\n                     data-testid=\"price\"\r\n           defaultValue={defaultValue || \"\"}\r\n                  ref={register({\r\n                    required:'*El campo es requerido' ,\r\n                  pattern:{\r\n               value:  /\\d+/,\r\n               message:'*Se admiten solo números'\r\n               }\r\n                  })}\r\n\r\n\r\n\r\n\r\n          />\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n export function ImageUploader({register,errors,isNotRequired}){\r\n\r\n  return(\r\n    <Fragment>\r\n      {errors.productImg && <ErrorMessage  role=\"alert\">*El Campo es requerido</ErrorMessage>}\r\n\r\n          <DropZone id=\"imgInput\" type=\"file\" name=\"img\"    ref={register({\r\n             required: (isNotRequired) ? false:true,\r\n\r\n          })}></DropZone>\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\nexport function FormButtons(){\r\n    return(\r\n          <ButtonsWrapper >\r\n<LoadButton as=\"input\" type=\"submit\" value=\"Cargar\"/>\r\n<ResetButton as=\"input\" type=\"reset\" value=\"Abortar\"/>\r\n          </ButtonsWrapper>\r\n    )\r\n  }\r\nexport function ProductState(props){\r\n\r\n  let state = props?.state || false\r\n\r\n   return(\r\n          <CheckboxWrapper >\r\n<label htmlFor=\"state\">Publicar:</label>\r\n<input\r\nid=\"state\" type=\"checkbox\" defaultChecked={state} name=\"state\" />\r\n          </CheckboxWrapper>\r\n    )\r\n  }\r\nexport default  function UpdateNewProductForm() {\r\n\r\n\r\n\r\n   const  {register,handleSubmit,errors,onSubmit,formIsLoading,categories} =   usePostNewProductForm()\r\n\r\n  return(\r\n    <StyledSection>\r\n\r\n      <ThisFormCard>\r\n  <Logo src = {trayIcon} alt=\"new-product\"></Logo>\r\n        <ThisForm id='productsFactory' name='productsFactory' onSubmit={handleSubmit(onSubmit)}>\r\n             <FormTitle>Cargar nuevos productos</FormTitle>\r\n\r\n  <ProductNameInput register={register} errors={errors}/>\r\n\r\n\r\n\r\n\r\n<ProductSizeInput register={register} errors={errors}/>\r\n\r\n<ProductPriceInput register={register} errors={errors}/>\r\n  <CategoriesOptionsInput register={register} errors={errors} categories={categories}/>\r\n<ProductDescriptionTextArea register={register} errors={errors}  />\r\n\r\n<ProductState state=\"checked\"/>\r\n\r\n\r\n\r\n      <ImageUploader  register={register} errors={errors}/>\r\n   {formIsLoading  &&  <LoaderSpinner small  data-testid='spinner'/> }\r\n <FormButtons/>\r\n\r\n\r\n        </ThisForm>\r\n      </ThisFormCard>\r\n    </StyledSection>\r\n  );\r\n}","import {useForm} from 'react-hook-form'\r\nimport {useState} from 'react'\r\nimport postProductAPI from '../API/postProductAPI'\r\nimport {useStorage} from '../context/useStorage'\r\n\r\n\r\n\r\nexport default function usePostNewProductForm(){\r\n\r\n const {token,setIsSuccessfullySend,categories} = useStorage()\r\n \r\n  const [formIsLoading,setFormIsLoading] = useState(false);\r\n\r\nconst { register, handleSubmit, formState: { errors } } = useForm({\r\n  mode: \"onBlur\",\r\n});\r\n    \r\n const onSubmit =  async(data,e) =>{\r\nsetFormIsLoading(true)\r\n        e.preventDefault()\r\n\r\nconst formData = new FormData()\r\nlet active =  e.target.state.checked ? true : false ;\r\nlet price =parseInt(e.target.price.value)\r\n        formData.append('img', e.target.img?.files[0])\r\n        formData.append('name', e.target.name.value)\r\n        formData.append('category', e.target.category.value)\r\n        formData.append('size', e.target.size.value)\r\n        formData.append('description', e.target.description.value)\r\n        formData.append('price', price)\r\n        formData.append('active', active)\r\n\r\n\r\n     await   postProductAPI({token,e,formData,setIsSuccessfullySend,setFormIsLoading})\r\n\r\n\r\n  }\r\nreturn   {register,handleSubmit,errors,onSubmit,formIsLoading,categories}\r\n}"],"sourceRoot":""}