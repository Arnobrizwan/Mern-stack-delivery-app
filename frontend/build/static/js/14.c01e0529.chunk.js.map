{"version":3,"sources":["API/resetPasswordAPI.js","img/pizza-background.jpg","components/auth/ResetPassword.js","hooks/useResetPassword.js","components/Buttons.js","API/contactAPI.js","components/contact/ContactForm.js","hooks/useContactForm.js","API/singUpAPI.js","components/auth/SingupForm.js","hooks/useSingupForm.js","img/burger-icon.png"],"names":["a","setIsFormLoading","setServerError","info","token","history","setIsSingUp","headers","Headers","append","setting","method","body","JSON","stringify","fetch","res","json","status","message","push","console","log","resetPasswordAPI","StyledInitSession","styled","main","pizzaBackgroun","ForgotPassword","useParams","useHistory","useState","isFormLoading","serverError","useForm","mode","data","e","newPassword","target","userPassword","value","confirmPassword","register","handleSubmit","onSubmit","errors","formState","useResetPassword","placeholder","name","as","type","LoaderSpinner","small","Button","props","theme","lightBoxShadow","darckYellow","black","ButtonPrimary","orange","contactAPI","StyledContact","article","FormSection","div","Form","form","InfoSection","TextInput","input","Textarea","textarea","ErrorMessage","ContactTitle","h2","ContactLink","Link","ContactForm","preventDefault","userName","userEmail","userMessage","subject","useContactForm","ref","required","pattern","style","borderColor","meassage","maxLength","src","phoneIcone","alt","emailcone","redirect","id","localStorage","setItem","setTimeout","singUpAPI","FormCard","Logo","img","inputShadow","ErrorServerMessage","FormLink","UserNameInput","data-testid","UserLastNameInput","userLastName","UserEmailInput","UserPasswordInput","minLength","UserNewPasswordInput","userNewPassword","SingupForm","toLowerCase","lastName","email","password","useSingupForm","burgerIcon","to"],"mappings":"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","file":"static/js/14.c01e0529.chunk.js","sourcesContent":["async function resetPasswordAPI({\r\nsetIsFormLoading,\r\nsetServerError,\r\ninfo,\r\ntoken,\r\nhistory,\r\nsetIsSingUp\r\n}){\r\ntry{\r\n  setIsFormLoading(true)\r\n\r\n\r\n  \r\n\r\n\r\n\r\n     const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\nheaders.append('Content-Type', 'application/json');\r\n\r\n\r\n        const setting = {\r\n          method: 'POST',\r\n          headers: headers,\r\n            body: JSON.stringify(info),\r\n        }\r\n\r\n\r\n\r\n        let res = await fetch(`/api/auth/resetPassword/${token}`, setting);\r\n            let  json = await res.json()\r\n\r\n      setIsFormLoading(false)\r\n\r\n      if(res.status >= 400){\r\n       setServerError(json.message)\r\n       return\r\n      }else{\r\n               setIsSingUp()\r\n               return history.push('/authentication')\r\n      }\r\n\r\n \r\n\r\n      \r\n}catch(err){\r\n\r\n  console.log(err)\r\n\r\n\r\n}\r\n\r\n}\r\n\r\nexport default resetPasswordAPI","export default __webpack_public_path__ + \"static/media/pizza-background.9e7cb026.jpg\";","import styled  from 'styled-components'\r\nimport useResetPassword from '../../hooks/useResetPassword'\r\nimport {ButtonPrimary} from '../Buttons'\r\nimport {LoaderSpinner} from '../LoaderSpinner'\r\nimport pizzaBackgroun from'../../img/pizza-background.jpg'\r\nimport {FormCard, Form,UserPasswordInput,ErrorServerMessage} from './SingupForm'\r\n\r\n\r\nconst StyledInitSession = styled.main`\r\n    min-height: 100vh;\r\nbackground: url(${pizzaBackgroun}) center bottom ;\r\n    background-size: cover;\r\ndisplay: flex;\r\njustify-content:center;\r\nalign-items: center;\r\nwidth:100vw;\r\npadding:15px;\r\npadding-top:60px;\r\ntext-aling:center;\r\n& > article form {\r\n  padding-top:25px;\r\n}\r\n& > article form h3 {\r\n  font-size:25px;\r\n      line-height: 35px;\r\n}\r\n& > article form h2 {\r\n  font-size:45px;\r\n}\r\n// @media screen and (min-width:500px){\r\n//   & > article form h3 {\r\n//   font-size:30px;\r\n// }\r\n}\r\n`;\r\n\r\nexport default function ForgotPassword(){\r\n\r\nconst {isFormLoading,serverError,register, handleSubmit,onSubmit, errors}=useResetPassword()\r\n  return(\r\n\r\n        <StyledInitSession>\r\n<FormCard>\r\n<Form onSubmit={handleSubmit(onSubmit)}>\r\n  <h2>🔑</h2>\r\n<h3>Establecer nueva contraseña</h3> \r\n<UserPasswordInput  register={register} errors={errors} placeholder='Nueva contraseña...'/>\r\n<UserPasswordInput  register={register} errors={errors} name='confirmPassword' placeholder='Confirnmar contraseña...'/>\r\n  <ErrorServerMessage >{serverError}</ErrorServerMessage >\r\n      \r\n\r\n\r\n <ButtonPrimary as=\"input\" type=\"submit\" value=\"Enviar\"/>\r\n      {(isFormLoading) && <LoaderSpinner small /> }\r\n</Form>\r\n</FormCard>\r\n        </StyledInitSession>\r\n  )\r\n}","import {useState} from 'react' \r\nimport {useParams,useHistory} from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport resetPasswordAPI from '../API/resetPasswordAPI'\r\n\r\nexport default function useResetPassword(){\r\nlet {token} = useParams()\r\nconst history = useHistory()\r\n\r\n\r\nconst [isFormLoading,setIsFormLoading]= useState(false)\r\nconst [serverError, setServerError] = useState(\"\")\r\n\r\n  const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\n async function onSubmit(data,e) {\r\n\r\nconst newPassword =e.target.userPassword.value,\r\nconfirmPassword = e.target.confirmPassword.value\r\n\r\nif(newPassword!== confirmPassword ) return  setServerError(\"Passwords dosen't match\")\r\nsetIsFormLoading(true)\r\nconst info ={\r\nnewPassword,\r\nconfirmPassword,\r\n}\r\n\r\nawait resetPasswordAPI({\r\n  setIsFormLoading,\r\nsetServerError,\r\ninfo,\r\ntoken,\r\nhistory\r\n  })\r\n}\r\n\r\n  return {isFormLoading,serverError,register, handleSubmit,onSubmit, errors}\r\n\r\n\r\n}","\r\nimport styled  from 'styled-components'\r\n\r\n   export  const Button= styled.a`\r\n     box-shadow: ${props => props.theme.lightBoxShadow};\r\npadding: 15px 40px;\r\ncolor:#fff;\r\nwidth:max-content;\r\n  background:${props => props.theme.darckYellow};\r\n  text-transform: uppercase;\r\n  text-align:center;\r\n  font-size: 16px;\r\n  font-family: \"Oswald\", sans-serif;\r\n  font-weight:600px;\r\n line-height:23.5px;\r\n  cursor:pointer;\r\n  letter-spacing:2px;\r\n  border-radius:4px;\r\n    text-decoration: none;\r\n\r\n    transform:'${(props)=>(props.small ? \"scale(0.7)\" : \"scale(1)\")}';\r\n  transition:all 0.5s ease;\r\n  &:hover{\r\n    background-color:${props => props.theme.black};\r\n  }\r\n  & > * {\r\n    cursor:pointer;\r\n  }\r\n    @media screen and (max-width: 550px){\r\n   transform:scale(0.8);\r\n`;\r\nexport const ButtonPrimary = styled(Button)`\r\n  background:${props => props.theme.orange};\r\n`;\r\n\r\n\r\n\r\n","\r\nconst contactAPI = async (info) =>{\r\n\r\n  const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\nheaders.append('Content-Type', 'application/json');\r\n\r\n            const setting = {\r\n          method: 'POST',\r\n                 headers: headers,\r\n                  body: JSON.stringify(info),\r\n   \r\n\r\n        }\r\n\r\n  try{\r\n  \r\n  \r\nlet res  = await fetch(\"/api/contact\",setting)\r\nif(res.status === 200){\r\n\r\n  let {message} = res.json()\r\n      console.log(message)\r\n}\r\n\r\n\r\nreturn res\r\n\r\n  }catch(err){\r\n    console.log(\"There was a problem submitting contact form\")\r\n    console.log(err)\r\n  }\r\n\r\n}\r\n\r\n export default contactAPI","import styled  from 'styled-components'\r\nimport useContactForm from '../../hooks/useContactForm'\r\nimport SocilasMenu from '../SocialsMenu'\r\nimport {ButtonPrimary} from '../Buttons'\r\nimport phoneIcone from '../../img/phone-alt-solid.svg'\r\nimport emailcone from '../../img/envelope-regular.svg'\r\n\r\nimport {Link, Icone,ListItem,List} from  '../Footer'\r\n\r\n\r\n const StyledContact = styled.article`\r\nbox-sizing:border-box:\r\nmax-width:100%;\r\npadding:20px 0;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\n& > * {\r\npadding:10px  15px;\r\nheight:100%;\r\n}\r\n`;\r\nconst FormSection = styled.div`\r\nwidth:100%;\r\n  flex: 1 1 450px;\r\n\r\n  @media screen and (min-width: 550px){\r\n  padding:10px  32px ;\r\n\r\n  }\r\n\r\n`;\r\nconst Form = styled.form`\r\nwidth:100%;\r\nheight:100%;\r\ndisplay:flex;\r\nflex-flow:column;\r\n& > small {\r\n      margin: -10px auto 4px 0;\r\n}\r\n@media screen and (max-width: 550px){\r\n & >${ButtonPrimary}{\r\n        margin-left: auto;\r\n                margin-right: auto;\r\n  }\r\n}\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\ndisplay:flex;\r\nflex-flow:column;\r\njustify-content:space-evenly;\r\n  flex: 1 0 1;\r\n  min-height:460px;\r\n width: 40%;\r\n @media screen and (max-width:750px){\r\n    width: 100%;\r\n     padding:0  25px;\r\n       min-height:350px;\r\n }\r\n`;\r\nexport const TextInput= styled.input`\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n  }\r\n\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\nwidth:100%;\r\npadding: 12px 15px;\r\n`;\r\n\r\n;\r\nconst Textarea= styled.textarea`\r\n  &::resizer {\r\n  display: none;\r\n}\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n\r\n  }\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\npadding: 10px 15px;\r\n  min-height:250px; \r\n  max-height:250px; \r\n  margin-bottom:25px;\r\n  min-width:100%;\r\n  max-width:100%;\r\n  \r\n`;\r\nexport const ErrorMessage = styled.small`\r\ncolor:#bf0000;\r\nmargin:-10px auto 4px 5%;\r\n    display: block;\r\n`;\r\nconst ContactTitle = styled.h2`\r\n\r\n @media screen and (min-width:750px){\r\n    margin-top: -40px;\r\n }\r\n`;\r\nconst ContactLink = styled(Link)`\r\ncolor:#000;\r\n`;\r\n\r\nexport default  function ContactForm() {\r\n\r\n    const {register,handleSubmit,errors,onSubmit}= useContactForm()\r\n  \r\n  return(\r\n    <StyledContact>\r\n      <FormSection>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n     \r\n           {errors.userName && <ErrorMessage>{errors.userName.message}</ErrorMessage>}\r\n          <  TextInput \r\n          type='text'\r\n          placeholder='Tu Nombre Completo...'\r\n          name=\"userName\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n\r\n              pattern:{\r\n                   value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü\\s\\w]+$/,\r\n                    message:'*Nombre no valido'\r\n                      }\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.userName && \"#bf0000\" }}\r\n          />\r\n                                {errors.userEmail && <ErrorMessage>{errors.userEmail.message}</ErrorMessage>}\r\n          <TextInput \r\n          type='email'\r\n          placeholder='Tu email...'\r\n          name=\"userEmail\"\r\n          ref={register({\r\n                                required: \"*El campo es requrido\",\r\n                \r\n                      pattern:{\r\n                        value:/^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n                       meassage:'*Email no valido'\r\n                      }\r\n          })}\r\n           style={{ borderColor: errors.userEmail && \"#bf0000\" }}\r\n          />\r\n               {errors.subject && <ErrorMessage>{errors.subject.message}</ErrorMessage>}\r\n\r\n\r\n           <TextInput \r\n           type='text'\r\n          placeholder='Asunto...'\r\n          name=\"subject\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.subject && \"#bf0000\" }}\r\n          />     \r\n            {errors.userMessage && <ErrorMessage>{errors.userMessage.message}</ErrorMessage>}\r\n          <Textarea \r\n          placeholder='Tu mensaje...'\r\n          name=\"userMessage\"\r\n          \r\n          ref={register({\r\n          required: '*El campo es requerido',\r\n           maxLength:{\r\n                        value:255,\r\n                         message:'*Tu mensaje no debe exceder los 255 carácteres'\r\n                      }\r\n          })}\r\n                 style={{ borderColor: errors.userMessage && \"#bf0000\" }}\r\n          />\r\n      <ButtonPrimary as=\"input\" type=\"submit\" value=\"Enviar mensaje\"/>\r\n        </Form>\r\n      </FormSection>\r\n      <InfoSection>\r\n   \r\n        <ContactTitle>Contactenos</ContactTitle>\r\n         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan metus.\r\n           Ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan.\r\n         </p>\r\n          <List>\r\n<ListItem><Icone><img src={phoneIcone} alt=\"phone\"></img></Icone> <ContactLink>+66 396 847 2637</ContactLink></ListItem>\r\n<ListItem><Icone><img src={emailcone} alt=\"email\"></img></Icone> <ContactLink>Hello@Burger.Com</ContactLink></ListItem>\r\n  </List>\r\n  <SocilasMenu/>\r\n      </InfoSection>\r\n    </StyledContact>\r\n  );\r\n}","import {useForm} from 'react-hook-form'\r\nimport contactAPI from '../API/contactAPI.js'\r\n\r\nexport default function useContactForm(){\r\n\r\n\r\n const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\nasync function onSubmit(data,e) {\r\n    e.preventDefault()\r\n    \r\nconst info = {\r\nuserName: data.userName,\r\nuserEmail: data.userEmail,\r\nuserMessage: data.userMessage,\r\nsubject: data.subject,\r\n}\r\n\r\n   await contactAPI(info)\r\n     \r\n}\r\n\r\n  return {register,handleSubmit,errors,onSubmit}\r\n}","\r\n\r\nasync function singUpAPI({\r\nsetIsFormLoading,\r\nsetServerError,\r\n\r\nhistory,\r\ninfo\r\n}){\r\ntry{\r\n\r\n\r\n     const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\nheaders.append('Content-Type', 'application/json');\r\n\r\n\r\n        const setting = {\r\n          method: 'POST',\r\n          headers: headers,\r\n            body: JSON.stringify(info),\r\n        }\r\n\r\n\r\n\r\n        let res = await fetch(\"/api/auth/singUp\", setting);\r\n            let  json = await res.json()\r\nsetIsFormLoading(false)\r\n\r\n         if(res.status === 201 || 302) {\r\n      setServerError(\"\")\r\n\r\n    \r\n\r\n        const {redirect,id} = json \r\n\r\n       localStorage.setItem('toConfirmUser', id)\r\n\r\n setTimeout(() => {\r\n       return history.push(redirect)\r\n  }, 1000);\r\n      }\r\n\r\n       if(res.status === 400) {\r\n  const {message} = json\r\n   console.log(message)\r\n      setServerError(message)\r\nreturn\r\n }\r\n \r\n\r\n      \r\n}catch(err){\r\n\r\n  console.log(err)\r\n\r\n\r\n}\r\n\r\n}\r\n\r\nexport default singUpAPI","import styled  from 'styled-components'\r\nimport {Link} from 'react-router-dom'\r\nimport {Fragment} from 'react' \r\nimport useSingupForm from '../../hooks/useSingupForm'\r\nimport {ButtonPrimary} from '../Buttons'\r\nimport burgerIcon from '../../img/burger-icon.png'\r\nimport {TextInput,ErrorMessage} from '../contact/ContactForm';\r\nimport {LoaderSpinner} from './../LoaderSpinner'\r\n\r\nexport const FormCard =  styled.article`\r\n  box-shadow: 0 0 4px rgba(0,0,0,0.5);\r\n\r\nmargin: 30px auto;\r\nborder-radius:10px;\r\nwidth: 100%;\r\n    max-width: 400px;\r\ndisplay:flex;\r\nflex-flow:column;\r\nalign-items:center;\r\ntext-align:center;\r\nmin-heght:600px;\r\nbackground: rgb(252,175,1);\r\n    background: linear-gradient(\r\n218deg\r\n, rgb(252 175 1 / 60%) 0%, rgb(255 165 0 / 58%) 100%);\r\nbox-box-shadow: 2px 2px 6px #000;\r\n\r\n@media screen and  (max-width:400px){\r\n width: 100%;\r\n\r\n}\r\n`;\r\nexport const Logo = styled.img`\r\nwidth:120px;\r\nmargin-bottom:20px;\r\nheight:auto;\r\n`;\r\nexport const Form = styled.form`\r\nwidth:90%;\r\nmargin-left: -10px;\r\npadding-bottom:25px;\r\ndisplay:flex;\r\nmargin:0 auto;\r\nflex-flow:column;\r\nalign-items:center;\r\n& > input {\r\n      width: 90%;\r\n     margin-bottom:15px;\r\n      border:none;\r\n    box-shadow: ${props => props.theme.inputShadow};\r\n}\r\n\r\n& >${LoaderSpinner}{\r\n  margin-bottom: 10px;\r\n}\r\n& > input:focus, & > textarea:focus{\r\n  outline: 2px solid ${props => props.theme.darckYellow};\r\n    outline-style: auto;\r\n}\r\n& > input[type=\"submit\"] {\r\n    box-shadow: none;\r\n      outline: none;\r\n}\r\n@media screen and  (max-width:500px){\r\nwidth: 90%;\r\n& > input {\r\n      width: 95%;\r\n  \r\n}\r\n}\r\n`;\r\nexport const ErrorServerMessage = styled(ErrorMessage)`\r\ntext-align:center;\r\nfont-size:20px;\r\nmargin: 5px 0 15px;\r\n`\r\nexport const FormLink = styled(Link)`\r\nmargin-bottom: 20px;\r\ncursor:pointer;\r\ntext-decoration:none;\r\ntransition:all 0.5s esea;\r\n  color:${props=> props.theme.black};\r\n&:hover{\r\n\r\n  color:#fff;\r\n}\r\n`;\r\nexport function UserNameInput({register,errors}){\r\n\r\n  return(\r\n    <Fragment>\r\n       {errors.userName && <ErrorMessage >{errors.userName.message }</ErrorMessage>}\r\n    <  TextInput \r\n        placeholder='Tu nombre...'\r\n          name=\"userName\"\r\n          type='text'\r\n          \r\n          data-testid='nameInput'\r\n          ref={register({\r\n               required: '*El campo es requrido',\r\n              pattern:{\r\n                        value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü]+$/\r\n,\r\n                         message:\"*Nombre no valido\"\r\n                      }\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.userName&& \"#bf0000\" }}\r\n          />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserLastNameInput({register,errors}){\r\n\r\n  return(\r\n    <Fragment>\r\n       {errors.userLastName && <ErrorMessage>{errors.userLastName.message }</ErrorMessage>}\r\n    <  TextInput \r\n    type='text'\r\n        placeholder='Tu apellido ...'\r\n        data-testid='lastNameInput'\r\n          name=\"userLastName\"\r\n          ref={register({\r\n               required: '*El campo es requrido',\r\n              pattern:{\r\n                        value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü]+$/\r\n,\r\n                         message:\"*Apellido no valido\"\r\n                      }\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.userLastName && \"#bf0000\" }}\r\n          />\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserEmailInput({register,errors}){\r\n\r\n  return(\r\n    <Fragment>\r\n                    {errors.userEmail && <ErrorMessage>{errors.userEmail.message}</ErrorMessage>}\r\n          <TextInput \r\n          type='email'\r\n          placeholder='Tu email...'\r\n          name=\"userEmail\"\r\n          data-testid='emailInput'\r\n          ref={register({\r\n                     required: '*El campo es requrido',\r\n                \r\n                      pattern:{\r\n                        value:/^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n                             message:\"*Email no valido\"\r\n                      }\r\n          })}\r\n           style={{ borderColor: errors.userEmail && \"#bf0000\" }  }\r\n          />\r\n    </Fragment>\r\n  );\r\n}\r\n export function UserPasswordInput({register,errors,placeholder,name = 'userPassword'}){\r\n\r\n  return(\r\n    <Fragment>\r\n       {errors[name] && <ErrorMessage  >{errors[name].message}</ErrorMessage>}\r\n\r\n<TextInput\r\nplaceholder={placeholder}\r\ntype='password'\r\nname ={name}\r\ndata-testid='passwordInput'\r\n\r\n          ref={register({\r\n                  required: '*El campo es requrido' ,\r\n                     minLength: {\r\n            value: 5,\r\n            message: \"*El largo mínimo es de 5 carácteres\"\r\n          } \r\n          })}\r\n           style={{ borderColor: errors[name] && \"#bf0000\" }}/>\r\n    </Fragment>\r\n  );\r\n}\r\nexport function UserNewPasswordInput({register,errors,placeholder,}){\r\n \r\n\r\n  return(\r\n    <Fragment>\r\n       {errors.userNewPassword && <ErrorMessage  >{errors.userNewPassword.message}</ErrorMessage>}\r\n\r\n<TextInput\r\nplaceholder={placeholder}\r\ntype='password'\r\n name='userNewPassword'\r\n          ref={register({\r\n             required:  '*El campo es requrido' ,\r\n                     minLength: {\r\n            value: 5,\r\n            message: \"*El largo mínimo es de 5 carácteres\"\r\n          } \r\n          })}\r\n           style={{ borderColor: errors.userNewPassword && \"#bf0000\" }}/>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\nexport default function SingupForm(){\r\n\r\n\r\n\r\n   const {register,handleSubmit,errors,onSubmit,isFormLoading,serverError} = useSingupForm()\r\n  return(\r\n    <FormCard>\r\n             <Logo src={burgerIcon} alt=\"LogoBrand\"></Logo>\r\n      <Form data-testid=\"singUpForm\" onSubmit={handleSubmit(onSubmit)}>\r\n     \r\n     <UserNameInput  errors={errors} register={register}/>\r\n          <UserLastNameInput  errors={errors} register={register}/>\r\n     <UserEmailInput  errors={errors} register={register}/>\r\n     <UserPasswordInput   errors={errors} register={register} placeholder=\"Tu contraseña...\"  />\r\n\r\n\r\n         <ErrorServerMessage>{serverError}</ErrorServerMessage>\r\n\r\n \r\n           <FormLink to= \"/authentication/login\" >¿Ya tienes una cuenta? <b>Login</b> </FormLink>\r\n <ButtonPrimary as=\"input\" type=\"submit\" value=\"Sing Up\"/>\r\n     {isFormLoading && <LoaderSpinner data-testid=\"spinner\"small />}\r\n      </Form>\r\n    </FormCard>\r\n  );\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport singUpAPI from '../API/singUpAPI'\r\nimport {useState} from 'react' \r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport default function useSingupForm(){\r\n\r\n\r\nconst [serverError,setServerError] = useState(\"\")\r\nconst [isFormLoading,setIsFormLoading] = useState(false)\r\n\r\n    \r\n  const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\nconst history = useHistory()\r\n\r\nasync function onSubmit(data,e) {\r\n\r\n e.preventDefault()\r\n\r\nawait setIsFormLoading(true)\r\n\r\nconst info ={\r\nname: data.userName.toLowerCase(),\r\nlastName: data.userLastName.toLowerCase(),\r\nemail:data.userEmail,\r\npassword:data.userPassword\r\n}\r\n\r\n\r\nawait singUpAPI({\r\nsetServerError,\r\ninfo,\r\nhistory,\r\nsetIsFormLoading\r\n})\r\n\r\n\r\n  }\r\n\r\n\r\n  return {register,handleSubmit,errors,onSubmit,\r\n  serverError,isFormLoading\r\n  } \r\n\r\n  \r\n}","export default __webpack_public_path__ + \"static/media/burger-icon.4ba9750a.png\";"],"sourceRoot":""}