{"version":3,"sources":["components/Buttons.js","API/contactAPI.js","components/contact/ContactForm.js","hooks/useContactForm.js","API/newsletterSubscribtionAPI.js","components/contact/NewsletterForm.js","hooks/useNewsletterForm.js","components/contact/GoogleMap.js","img/hamburger-contact-banner.jpg","components/contact/Contact.js"],"names":["Button","styled","a","props","theme","lightBoxShadow","darckYellow","small","black","ButtonPrimary","orange","contactAPI","info","headers","Headers","append","setting","method","body","JSON","stringify","fetch","res","status","json","message","console","log","StyledContact","article","FormSection","div","Form","form","InfoSection","TextInput","input","Textarea","textarea","ErrorMessage","ContactTitle","h2","ContactLink","Link","ContactForm","useForm","mode","data","e","preventDefault","userName","userEmail","userMessage","subject","register","handleSubmit","errors","formState","onSubmit","useContactForm","type","placeholder","name","ref","required","pattern","value","style","borderColor","meassage","maxLength","as","src","phoneIcone","alt","emailcone","newsletterSubscribtionAPI","setIsSuccessfullySend","setTimeout","alert","StyledNewsletter","Wrapper","NewsletterTitle","NewsletterText","StyledNewsletterForm","NewsletterFormWrapper","NewsletterInput","attrs","NewsletterForm","useStorage","isLogin","email","target","useNewsletterForm","StyledGoogleMap","iframe","loading","GoogleMap","StyledContactSection","section","BannerTitle","darckTextShadow","ContactBanner","lightYellow","bannerImg","withError"],"mappings":"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","file":"static/js/17.21daa756.chunk.js","sourcesContent":["\r\nimport styled  from 'styled-components'\r\n\r\n   export  const Button= styled.a`\r\n     box-shadow: ${props => props.theme.lightBoxShadow};\r\npadding: 15px 40px;\r\ncolor:#fff;\r\nwidth:max-content;\r\n  background:${props => props.theme.darckYellow};\r\n  text-transform: uppercase;\r\n  text-align:center;\r\n  font-size: 16px;\r\n  font-family: \"Oswald\", sans-serif;\r\n  font-weight:600px;\r\n line-height:23.5px;\r\n  cursor:pointer;\r\n  letter-spacing:2px;\r\n  border-radius:4px;\r\n    text-decoration: none;\r\n\r\n    transform:'${(props)=>(props.small ? \"scale(0.7)\" : \"scale(1)\")}';\r\n  transition:all 0.5s ease;\r\n  &:hover{\r\n    background-color:${props => props.theme.black};\r\n  }\r\n  & > * {\r\n    cursor:pointer;\r\n  }\r\n    @media screen and (max-width: 550px){\r\n   transform:scale(0.8);\r\n`;\r\nexport const ButtonPrimary = styled(Button)`\r\n  background:${props => props.theme.orange};\r\n`;\r\n\r\n\r\n\r\n","\r\nconst contactAPI = async (info) =>{\r\n\r\n  const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\nheaders.append('Content-Type', 'application/json');\r\n\r\n            const setting = {\r\n          method: 'POST',\r\n                 headers: headers,\r\n                  body: JSON.stringify(info),\r\n   \r\n\r\n        }\r\n\r\n  try{\r\n  \r\n  \r\nlet res  = await fetch(\"/api/contact\",setting)\r\nif(res.status === 200){\r\n\r\n  let {message} = res.json()\r\n      console.log(message)\r\n}\r\n\r\n\r\nreturn res\r\n\r\n  }catch(err){\r\n    console.log(\"There was a problem submitting contact form\")\r\n    console.log(err)\r\n  }\r\n\r\n}\r\n\r\n export default contactAPI","import styled  from 'styled-components'\r\nimport useContactForm from '../../hooks/useContactForm'\r\nimport SocilasMenu from '../SocialsMenu'\r\nimport {ButtonPrimary} from '../Buttons'\r\nimport phoneIcone from '../../img/phone-alt-solid.svg'\r\nimport emailcone from '../../img/envelope-regular.svg'\r\n\r\nimport {Link, Icone,ListItem,List} from  '../Footer'\r\n\r\n\r\n const StyledContact = styled.article`\r\nbox-sizing:border-box:\r\nmax-width:100%;\r\npadding:20px 0;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\n& > * {\r\npadding:10px  15px;\r\nheight:100%;\r\n}\r\n`;\r\nconst FormSection = styled.div`\r\nwidth:100%;\r\n  flex: 1 1 450px;\r\n\r\n  @media screen and (min-width: 550px){\r\n  padding:10px  32px ;\r\n\r\n  }\r\n\r\n`;\r\nconst Form = styled.form`\r\nwidth:100%;\r\nheight:100%;\r\ndisplay:flex;\r\nflex-flow:column;\r\n& > small {\r\n      margin: -10px auto 4px 0;\r\n}\r\n@media screen and (max-width: 550px){\r\n & >${ButtonPrimary}{\r\n        margin-left: auto;\r\n                margin-right: auto;\r\n  }\r\n}\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\ndisplay:flex;\r\nflex-flow:column;\r\njustify-content:space-evenly;\r\n  flex: 1 0 1;\r\n  min-height:460px;\r\n width: 40%;\r\n @media screen and (max-width:750px){\r\n    width: 100%;\r\n     padding:0  25px;\r\n       min-height:350px;\r\n }\r\n`;\r\nexport const TextInput= styled.input`\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n  }\r\n    text-transform: capitalize;\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\nwidth:100%;\r\npadding: 12px 15px;\r\n`;\r\n\r\n;\r\nconst Textarea= styled.textarea`\r\n  &::resizer {\r\n  display: none;\r\n}\r\n  &::placeholder {\r\n   font-weight: 500;\r\n   letter-spacing: 1px;\r\n  font-size:16px;\r\n\r\n  }\r\nborder:none;\r\nborder-radius:5px;\r\noutline:transparent;\r\nborder: 2px solid #171717;\r\nmargin-bottom:15px;\r\npadding: 10px 15px;\r\n  min-height:250px; \r\n  max-height:250px; \r\n  margin-bottom:25px;\r\n  min-width:100%;\r\n  max-width:100%;\r\n  \r\n`;\r\nexport const ErrorMessage = styled.small`\r\ncolor:#bf0000;\r\nmargin:-10px auto 4px 5%;\r\n    display: block;\r\n`;\r\nconst ContactTitle = styled.h2`\r\n\r\n @media screen and (min-width:750px){\r\n    margin-top: -40px;\r\n }\r\n`;\r\nconst ContactLink = styled(Link)`\r\ncolor:#000;\r\n`;\r\n\r\nexport default  function ContactForm() {\r\n\r\n    const {register,handleSubmit,errors,onSubmit}= useContactForm()\r\n  \r\n  return(\r\n    <StyledContact>\r\n      <FormSection>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n     \r\n           {errors.userName && <ErrorMessage>{errors.userName.message}</ErrorMessage>}\r\n          <  TextInput \r\n          type='text'\r\n          placeholder='Tu Nombre Completo...'\r\n          name=\"userName\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n\r\n              pattern:{\r\n                   value: /^[A-Za-zñÑáÁéÉíÍóÓúÚÜü\\s\\w]+$/,\r\n                    message:'*Nombre no valido'\r\n                      }\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.userName && \"#bf0000\" }}\r\n          />\r\n                                {errors.userEmail && <ErrorMessage>{errors.userEmail.message}</ErrorMessage>}\r\n          <TextInput \r\n          type='email'\r\n          placeholder='Tu email...'\r\n          name=\"userEmail\"\r\n          ref={register({\r\n                                required: \"*El campo es requrido\",\r\n                \r\n                      pattern:{\r\n                        value:/^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n                       meassage:'*Email no valido'\r\n                      }\r\n          })}\r\n           style={{ borderColor: errors.userEmail && \"#bf0000\" }}\r\n          />\r\n               {errors.subject && <ErrorMessage>{errors.subject.message}</ErrorMessage>}\r\n\r\n\r\n           <TextInput \r\n           type='text'\r\n          placeholder='Asunto...'\r\n          name=\"subject\"\r\n          ref={register({\r\n             required: \"*El campo es requrido\",\r\n            \r\n          })}\r\n                 style={{ borderColor: errors.subject && \"#bf0000\" }}\r\n          />     \r\n            {errors.userMessage && <ErrorMessage>{errors.userMessage.message}</ErrorMessage>}\r\n          <Textarea \r\n          placeholder='Tu mensaje...'\r\n          name=\"userMessage\"\r\n          \r\n          ref={register({\r\n          required: '*El campo es requerido',\r\n           maxLength:{\r\n                        value:255,\r\n                         message:'*Tu mensaje no debe exceder los 255 carácteres'\r\n                      }\r\n          })}\r\n                 style={{ borderColor: errors.userMessage && \"#bf0000\" }}\r\n          />\r\n      <ButtonPrimary as=\"input\" type=\"submit\" value=\"Enviar mensaje\"/>\r\n        </Form>\r\n      </FormSection>\r\n      <InfoSection>\r\n   \r\n        <ContactTitle>Contactenos</ContactTitle>\r\n         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan metus.\r\n           Ipsum dolor sit amet, consectetur adipiscing elit nulla accumsan.\r\n         </p>\r\n          <List>\r\n<ListItem><Icone><img src={phoneIcone} alt=\"phone\"></img></Icone> <ContactLink>+66 396 847 2637</ContactLink></ListItem>\r\n<ListItem><Icone><img src={emailcone} alt=\"email\"></img></Icone> <ContactLink>Hello@Burger.Com</ContactLink></ListItem>\r\n  </List>\r\n  <SocilasMenu/>\r\n      </InfoSection>\r\n    </StyledContact>\r\n  );\r\n}","import {useForm} from 'react-hook-form'\r\nimport contactAPI from '../API/contactAPI.js'\r\n\r\nexport default function useContactForm(){\r\n\r\n\r\n const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\nasync function onSubmit(data,e) {\r\n    e.preventDefault()\r\n    \r\nconst info = {\r\nuserName: data.userName,\r\nuserEmail: data.userEmail,\r\nuserMessage: data.userMessage,\r\nsubject: data.subject,\r\n}\r\n\r\n   await contactAPI(info)\r\n     \r\n}\r\n\r\n  return {register,handleSubmit,errors,onSubmit}\r\n}","const newsletterSubscribtionAPI = async ({info,setIsSuccessfullySend}) =>{\r\n\r\n\r\n\r\n  const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\nheaders.append('Content-Type', 'application/json');\r\n\r\n            const setting = {\r\n          method: 'POST',\r\n                 headers: headers,\r\n                  body: JSON.stringify(info),\r\n   \r\n\r\n        }\r\n\r\n  try{\r\n  \r\n  \r\nlet res  = await fetch(\"/api/newsletter\",setting)\r\n\r\n\r\nif(res.status === 200) {\r\n  setIsSuccessfullySend(true)\r\n\r\n  setTimeout(() => {\r\n    setIsSuccessfullySend(false)\r\n\r\n  }, 3000);\r\n}\r\nif(res.status === 500) alert(\"Error en el servidor, vuelva a interntar\")\r\n\r\n  }catch(err){\r\n\r\n    console.log(err)\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n export default newsletterSubscribtionAPI","import styled  from 'styled-components'\r\nimport {ErrorMessage} from './ContactForm'\r\nimport useNewsletterForm from '../../hooks/useNewsletterForm'\r\nimport {Button} from '../Buttons'\r\n\r\nconst StyledNewsletter = styled.article`\r\nbox-sizing:border-box:\r\nmax-width:100%;\r\nbackground: ${props => props.theme.orange};\r\n\r\n`;\r\nconst Wrapper = styled.div`\r\nwidth:100%;\r\ndisplay:flex;\r\npadding : 75px 25px;\r\nflex-wrap:wrap;\r\n& > * {\r\npadding: 10px 15px;\r\n  flex:1;\r\n  flex-basis:450px;\r\n  min-height:100px;\r\n}\r\n`;\r\nconst NewsletterTitle= styled.h2`\r\ntext-transform: uppercase;\r\nfont-size:30px;\r\n@media screen and (min-width: 550px){\r\n  font-size:42px;\r\n}\r\n@media screen and (min-width: 950px){\r\n  font-size:47px;\r\n}\r\n`;\r\n\r\nconst NewsletterText= styled.div`\r\ncolor:#fff;\r\n`;\r\nconst StyledNewsletterForm= styled.form`\r\nline-height: 0.8em;\r\ndisplay:flex;\r\nflex-flow:column;\r\nalign-items:center;\r\njustify-content:center;\r\n& > ${ErrorMessage}{\r\n  color:#fff;\r\n}\r\n`;\r\n\r\nconst NewsletterFormWrapper= styled.div`\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\nalign-items:center;\r\n& > *{\r\n  flex:1;\r\n  min-width:200px;\r\n  margin: 10px 5px\r\n}\r\n\r\n`;\r\nconst NewsletterInput= styled.input.attrs(props => ({\r\n  type: 'text',\r\n  placeholder: 'Ingrese su email',\r\n\r\n}))`\r\npadding: 17px 10px 17px 20px;\r\n  &::placeholder {\r\n  font-weight: 500;\r\n   font-size: 17px;\r\n   letter-spacing: 1px;\r\n  padding: 5px 0;\r\n    \r\n  }\r\n  border:none;\r\n  border-radius:5px;\r\n  outline:none;\r\n  min-height;50px;\r\n`;\r\n\r\nexport default function NewsletterForm(){\r\n\r\nconst {register,handleSubmit,errors,onSubmit} =useNewsletterForm()\r\n\r\n\r\n  return(\r\n<StyledNewsletter>\r\n  <Wrapper>\r\n    <NewsletterText>\r\n      <NewsletterTitle>subscribete  a nuestro newsletter</NewsletterTitle>\r\n<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p>\r\n    </NewsletterText>\r\n    <StyledNewsletterForm onSubmit={handleSubmit(onSubmit)}>\r\n                 {errors.userEmail && <ErrorMessage>{errors.userEmail.message}</ErrorMessage>}\r\n      <NewsletterFormWrapper>\r\n        <NewsletterInput \r\n          name=\"userEmail\"\r\n\r\n          ref={register({\r\n                     required: true,\r\n                    \r\n                      pattern:{\r\n                      value:/^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/,\r\n                      message: \"*Email no valido\"\r\n                      }\r\n          })}\r\n           style={{ borderColor: errors.userEmail && \"#000\" }}\r\n        ></NewsletterInput>\r\n      \r\n<Button as=\"input\" type=\"submit\" value=\"Subscribirme\"/>\r\n\r\n      </NewsletterFormWrapper>\r\n    </StyledNewsletterForm>\r\n  </Wrapper>\r\n</StyledNewsletter>\r\n  );\r\n}","import {useForm} from 'react-hook-form'\r\nimport {useStorage} from '../context/useStorage'\r\nimport newsletterSubscribtionAPI from '../API/newsletterSubscribtionAPI'\r\n\r\n\r\n \r\nexport default function useNewsletterForm(){\r\n\r\n   const {setIsSuccessfullySend,isLogin} = useStorage()\r\n      \r\n   const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\n  function onSubmit(data,e) {\r\n\r\n  e.preventDefault()\r\n\r\n   const info =  {email: e.target.userEmail.value}\r\n\r\n    isLogin ? \r\n    newsletterSubscribtionAPI({info,setIsSuccessfullySend})\r\n: alert('Para poder subscribirse es necesario que inicie seción')\r\n  }\r\n\r\n  return {register,handleSubmit,errors,onSubmit}\r\n}","\r\nimport styled  from 'styled-components'\r\n\r\nconst StyledGoogleMap= styled.iframe.attrs(props =>({\r\n  src:\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d217954.2534022472!2d-64.33442911558893!3d-31.399377044309926!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9432985f478f5b69%3A0xb0a24f9a5366b092!2zQ8OzcmRvYmE!5e0!3m2!1ses-419!2sar!4v1617248194061!5m2!1ses-419!2sar\" ,\r\n  loading:\"lazy\"\r\n\r\n}))`\r\n\r\nheight:100vh;\r\nwidth:100vw;\r\n\r\n`;\r\nexport default function GoogleMap(){\r\n  return(\r\n<StyledGoogleMap/>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/hamburger-contact-banner.3ec675d4.jpg\";","import styled  from 'styled-components'\r\nimport { withError } from './../withError'\r\nimport NewsletterForm from './NewsletterForm'\r\nimport ContactForm from './ContactForm'\r\nimport GoogleMap from './GoogleMap'\r\nimport bannerImg from '../../img/hamburger-contact-banner.jpg'\r\nconst StyledContactSection = styled.section`\r\nbox-sizing:border-box;\r\nmin-height:100vh;\r\nwidth:100vw;\r\npadding-top: 58px ;\r\ntext-aling:center;\r\n\r\n`;\r\nconst BannerTitle = styled.h2`\r\ntext-align:center;\r\nfont-size: 35px;\r\ntext-transform: uppercase;\r\ncolor:#fff;\r\ntext-shadow: ${props => props.theme.darckTextShadow};\r\n@media screen and (min-width:750px){\r\nfont-size: 45px;\r\n}\r\n`;\r\n\r\nconst ContactBanner = styled.div`\r\nposition:relative;\r\n background-color: 2px solid ${props => props.theme.lightYellow};\r\nbackground : url(${bannerImg}) no-repeat center center;\r\nbackground-size:100% 100%;\r\nheight: 300px;\r\nwidth:100vw;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nz-index:1;\r\n&:before{\r\n  content:\"\";\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  background: rgba(0,0,0,0.3);\r\n  z-index:-1;\r\n}\r\n@media screen and (min-width:750px){\r\nbackground-size:100%;\r\n}\r\n`;\r\nfunction Contact () {\r\n\r\n\r\n  return(\r\n  <StyledContactSection >\r\n  <ContactBanner>\r\n    <BannerTitle>Ponte en Contacto!!</BannerTitle>\r\n      </ContactBanner>\r\n<ContactForm/>\r\n  < NewsletterForm />\r\n<GoogleMap/>\r\n  </StyledContactSection >\r\n)\r\n}\r\nexport default withError(Contact)"],"sourceRoot":""}