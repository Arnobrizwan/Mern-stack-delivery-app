{"version":3,"sources":["API/getCategoriesAPI.js","components/dashboard/DashboardNewProduct.js","API/updateProductAPI.js","img/pencil-edit-form.svg","components/dashboard/EditProductForm.js","hooks/useEditProductForm.js","components/dashboard/DashboardEditProduct.js"],"names":["getCategoryAPI","setAllCategories","a","headers","Headers","append","setting","method","fetch","res","json","data","console","log","LinksWrapper","styled","div","withError","to","token","formData","id","nameValue","categoryValue","sizeValue","descriptionValue","priceValue","setIsSuccessfullySend","setFormIsLoading","history","body","url","status","getCategoriesAPI","setTimeout","push","alert","updateProductAPI","EditIcone","Logo","UpdateNewProductForm","useStorage","productToEdit","categories","useForm","mode","register","handleSubmit","errors","formState","useHistory","useState","formIsLoading","_id","onSubmit","e","preventDefault","FormData","img","files","undefined","price","parseInt","name","category","size","description","target","state","checked","useEditProductForm","src","editIcone","alt","enctype","defaultValue","isNotRequired","active","LoaderSpinner","small","StyledSection","main"],"mappings":"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","file":"static/js/3.50d8abe2.chunk.js","sourcesContent":["\r\n\r\nexport default async function getCategoryAPI(setAllCategories){\r\n\r\n   const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\n     \r\n\r\n    const setting = {\r\n          method: 'GET',\r\n          headers: headers,\r\n\r\n        }\r\ntry{\r\nlet res =  await fetch('/api/categories',setting)\r\nlet  json= await res.json()\r\n\r\nconst {data} = json\r\n\r\nsetAllCategories(data)\r\n\r\n\r\n}catch(err){\r\n\r\n\r\n  console.log(err)\r\n}\r\n}  \r\n","import styled  from 'styled-components'\r\nimport { withError } from './../withError'\r\nimport CreateNewProductForm from './CreateNewProductForm'\r\nimport {StyledSection} from './DashboardEditProduct'\r\nimport {GoBackLink} from '../product_details/ProductDetails'\r\n\r\n\r\nexport const LinksWrapper =styled.div`\r\ndisplay:flex;\r\nmargin:5px 0;\r\nmargin-left:15px;\r\nwidth:max-content;\r\n`;\r\n function DashboardNewProduct(){\r\n  return(\r\n    <StyledSection>\r\n          <LinksWrapper>\r\n             <GoBackLink to=\"/dashboard/myProducts\" >Regresar </GoBackLink>\r\n          </LinksWrapper>\r\n   \r\n<CreateNewProductForm/>\r\n    </StyledSection>\r\n\r\n  )\r\n}\r\nexport default withError(DashboardNewProduct)"," import getCategoriesAPI from './getCategoriesAPI'\r\n \r\n async function updateProductAPI(\r\n{    token,\r\n    formData,\r\n    id,\r\n    nameValue,\r\ncategoryValue,\r\nsizeValue,\r\ndescriptionValue,\r\npriceValue,\r\nsetIsSuccessfullySend,\r\nsetFormIsLoading,\r\nhistory,\r\nsetAllCategories\r\n}\r\n){\r\n     \r\n\r\n      \r\n      \r\n        const headers = new Headers();\r\n        headers.append('Accept', 'application/json');\r\n      headers.append('Authorization', `Bearer ${token}`);\r\n\r\n\r\n        const setting = {\r\n          method: 'PUT',\r\n          headers: headers,\r\n          body: formData,\r\n        }\r\n\r\nlet url =`/api/products/${id}`\r\n  try {\r\n        let res = await fetch(url , setting);\r\n       setFormIsLoading(false)\r\n\r\n      if(res.status === 200){\r\n\r\n       await getCategoriesAPI(setAllCategories)\r\n\r\n           setIsSuccessfullySend(true)\r\n          setTimeout(() => {\r\n           setIsSuccessfullySend(false)\r\n        return history.push('/dashboard/myProducts')\r\n}, 2000);\r\n      }\r\n \r\n\r\n\r\n      if(res.status === 403) return   alert('Se require rol de Administrador') \r\n      } catch (err) {\r\n\r\n        console.log(err)\r\n      }\r\n  }\r\n\r\nexport default updateProductAPI","export default __webpack_public_path__ + \"static/media/pencil-edit-form.1d2432a8.svg\";","import styled  from 'styled-components'\r\nimport useEditProductForm from '../../hooks/useEditProductForm'\r\nimport {LoaderSpinner} from './../LoaderSpinner'\r\nimport {Logo} from '../auth/SingupForm'\r\nimport {ThisFormCard, ThisForm,ProductDescriptionTextArea,ProductSizeInput,ProductPriceInput,CategoriesOptionsInput,ProductNameInput,ImageUploader,FormButtons,  StyledSection,FormTitle,\r\nProductState,} from './CreateNewProductForm'\r\nimport editIcone from '../../img/pencil-edit-form.svg'\r\n\r\n\r\nconst EditIcone = styled(Logo)`\r\ntransform:scale(0.75);\r\n`\r\n\r\n\r\nexport default function UpdateNewProductForm() {\r\n\r\nconst {categories,register ,handleSubmit, errors, onSubmit,productToEdit,formIsLoading\r\n} = useEditProductForm()\r\n\r\n  return(\r\n    <StyledSection>\r\n\r\n      <ThisFormCard>\r\n        <EditIcone src = {editIcone} alt=\"new-product\"></EditIcone>\r\n        <ThisForm enctype=\"multipart/form-data\" onSubmit={handleSubmit(onSubmit)}>\r\n             <FormTitle>Editar {productToEdit?.name}</FormTitle>\r\n\r\n\r\n\r\n  <ProductNameInput register={register} errors={errors} defaultValue={productToEdit.name}/>\r\n\r\n<ProductSizeInput register={register} errors={errors} defaultValue={productToEdit.size} />\r\n\r\n<ProductPriceInput register={register} errors={errors} defaultValue={productToEdit.price} />\r\n\r\n  <CategoriesOptionsInput register={register} errors={errors} categories={categories} defaultValue={productToEdit.category}/>\r\n\r\n<ProductDescriptionTextArea  defaultValue={productToEdit.description} register={register} errors={errors}  />\r\n\r\n\r\n\r\n      <ImageUploader  register={register} errors={errors} isNotRequired />\r\n<ProductState state={productToEdit?.active ? \"checked\" : false } />\r\n\r\n   {formIsLoading  &&  <LoaderSpinner small /> }\r\n\r\n     <FormButtons/>\r\n\r\n\r\n        </ThisForm>\r\n      </ThisFormCard>\r\n    </StyledSection>\r\n  );\r\n}","import  updateProductAPI from '../API/updateProductAPI'\r\nimport {useForm} from 'react-hook-form'\r\nimport {useStorage} from '../context/useStorage'\r\nimport {  useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function useEditProductForm(){\r\n\r\n  const {token,productToEdit,setIsSuccessfullySend,setAllCategories,categories} = useStorage()\r\n\r\n        const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\n   const history = useHistory()\r\n\r\n  const [formIsLoading,setFormIsLoading] = useState(false);\r\n\r\n\r\nlet id= productToEdit._id\r\n\r\n\r\n\r\n\r\n function onSubmit(data,e) {\r\nsetFormIsLoading(true)\r\n  e.preventDefault()\r\n\r\n   const formData = new FormData()\r\n\r\nlet img = data?.img?.files ? data?.img?.files[0] : undefined;\r\nconst  price =parseInt(data.price)\r\n\r\n          formData.append('img',img )\r\n        formData.append('name', data.name)\r\n        formData.append('category', data.category)\r\n        formData.append('size', data.size)\r\n        formData.append('description', data.description)\r\n        formData.append('price', price)\r\n        formData.append('active', e.target.state.checked)\r\n\r\nupdateProductAPI({\r\n    token,\r\n    formData,\r\n    id,\r\nsetIsSuccessfullySend,\r\nsetFormIsLoading,\r\nsetAllCategories,\r\nhistory\r\n})\r\n\r\n  }\r\n\r\nreturn {\r\n  register ,\r\n  handleSubmit,\r\n  errors,\r\n  onSubmit,\r\nformIsLoading,\r\nproductToEdit,\r\ncategories,\r\n}\r\n\r\n}\r\n","import styled  from 'styled-components'\r\nimport { withError } from './../withError'\r\nimport EditProductForm from './EditProductForm'\r\nimport {GoBackLink} from '../product_details/ProductDetails'\r\nimport { LinksWrapper} from './DashboardNewProduct'\r\nexport const StyledSection = styled.main`\r\npadding-top: 60px ;\r\nmargin:0;\r\n min-height:100vh;\r\nwidth:100vw;\r\n`\r\nconst DashboardEditProduct = () =>{\r\n  return(\r\n     <StyledSection>\r\n         <LinksWrapper>\r\n    <GoBackLink to=\"/dashboard/myProducts\" >Regresar</GoBackLink>\r\n          </LinksWrapper>\r\n       <EditProductForm/>\r\n     </StyledSection>\r\n  );\r\n}\r\n\r\nexport default  withError(DashboardEditProduct)"],"sourceRoot":""}